<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我不是诸葛亮</title>
  
  <subtitle>宁可碌碌，不可无为</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-02-22T06:49:00.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>zhuguanliang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>适合学习——swift版基于MVVM模式的网络API调用Demo</title>
    <link href="http://example.com/2021/02/22/MVVM%E7%9A%84%E7%BD%91%E7%BB%9CAPI%E8%B0%83%E7%94%A8Demo/"/>
    <id>http://example.com/2021/02/22/MVVM%E7%9A%84%E7%BD%91%E7%BB%9CAPI%E8%B0%83%E7%94%A8Demo/</id>
    <published>2021-02-22T04:49:00.000Z</published>
    <updated>2021-02-22T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="学习目标："><a href="#学习目标：" class="headerlink" title="学习目标："></a>学习目标：</h3><ul><li>以纯代码方式构建完整的应用，使用 NSCache 缓存图像</li><li>学习网络API的调用</li><li>学习MVVM设计模式</li><li>学习构建可重用视图</li><li>自定义带阴影的图像视图</li></ul><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/May-27-2021%2000-41-52.gif" alt="May-27-2021 00-41-52" style="zoom:50%;"><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/May-27-2021%2000-44-06.gif" alt="May-27-2021 00-44-06" style="zoom:50%;"></p><p>API取自<strong><a href="https://newsapi.org/">https://newsapi.org</a></strong>，自己申请下APIKey，完全免费，如上不了网页请用科学方法试试</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527005243522.png" alt="image-20210527005243522" style="zoom:50%;"><p>项目目录结构如下</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527010103004.png" alt="image-20210527010103004" style="zoom:33%;"><h3 id="以纯代码方式创建应用"><a href="#以纯代码方式创建应用" class="headerlink" title="以纯代码方式创建应用"></a>以纯代码方式创建应用</h3><p>SceneDelegate的代码进行修改，定义下初始视图控制器</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527004641210.png" alt="image-20210527004641210"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">guard let windowScene = (scene as? UIWindowScene) else &#123; return &#125;</span><br><span class="line"></span><br><span class="line">window = UIWindow(windowScene: windowScene)</span><br><span class="line">window = UIWindow(frame: UIScreen.main.bounds)</span><br><span class="line">window?.windowScene = windowScene</span><br><span class="line">let viewController = ViewController()</span><br><span class="line">window?.rootViewController = viewController</span><br><span class="line">window?.makeKeyAndVisible()</span><br></pre></td></tr></table></figure><p>同时删除main与Main.storyboard</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210525220551653.png" alt="image-20210525220551653" style="zoom:50%;"><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527004836452.png" alt="image-20210527004836452"></p><h3 id="创建视图模型"><a href="#创建视图模型" class="headerlink" title="创建视图模型"></a>创建视图模型</h3><h3 id="创建APIkey"><a href="#创建APIkey" class="headerlink" title="创建APIkey"></a>创建APIkey</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527005111733.png" alt="image-20210527005111733"></p><h3 id="创建模型"><a href="#创建模型" class="headerlink" title="创建模型"></a>创建模型</h3><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527005332523.png" alt="image-20210527005332523" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import Foundation</span><br><span class="line"></span><br><span class="line">struct News: Decodable &#123;</span><br><span class="line">    let author : String?</span><br><span class="line">    let title : String?</span><br><span class="line">    let description : String?</span><br><span class="line">    let url : String?</span><br><span class="line">    let urlToImage : String?</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">struct NewsEnvelope: Decodable &#123;</span><br><span class="line">    let Status : String?</span><br><span class="line">    let totalResuls : String?</span><br><span class="line">    let articles : [News]</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h3 id="创建网络服务NetworkManager-swift"><a href="#创建网络服务NetworkManager-swift" class="headerlink" title="创建网络服务NetworkManager.swift"></a>创建网络服务NetworkManager.swift</h3><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527005423935.png" alt="image-20210527005423935" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">import Foundation</span><br><span class="line"></span><br><span class="line">class NetworkManager &#123;</span><br><span class="line">    let imageCache = NSCache&lt;NSString,NSData&gt;()</span><br><span class="line">    static let shared = NetworkManager()</span><br><span class="line">    private init () &#123;&#125;</span><br><span class="line">    </span><br><span class="line">    private let baseUrlString = &quot;https://newsapi.org/v2/&quot;</span><br><span class="line">    private let USTopHeadline = &quot;top-headlines?country=us&quot;</span><br><span class="line">    </span><br><span class="line">    func getNews(Completion: @escaping ([News]?) -&gt; Void) &#123;</span><br><span class="line">        </span><br><span class="line">        let urlString = &quot;\(baseUrlString)\(USTopHeadline)&amp;apikey=\(APIKey.key)&quot;</span><br><span class="line">        guard let url = URL(string: urlString) else &#123;</span><br><span class="line">            return</span><br><span class="line">        &#125;</span><br><span class="line">        URLSession.shared.dataTask(with: url) &#123; (date, response, error) in</span><br><span class="line">            guard error == nil, let data = date else&#123;</span><br><span class="line">                Completion(nil)</span><br><span class="line">                return</span><br><span class="line">            &#125;</span><br><span class="line">            let newsEnvelope = try? JSONDecoder().decode(NewsEnvelope.self, from: data)</span><br><span class="line">            newsEnvelope == nil ? Completion(nil) : Completion(newsEnvelope!.articles)</span><br><span class="line">        &#125;.resume()</span><br><span class="line">    &#125;</span><br><span class="line">    func getImage(urlString: String,Completion: @escaping (Data?) -&gt; Void) &#123;</span><br><span class="line">        guard let url = URL(string: urlString) else &#123;</span><br><span class="line">            Completion(nil)</span><br><span class="line">            return</span><br><span class="line">        &#125;</span><br><span class="line">        if let cachedImage = imageCache.object(forKey: NSString(string: urlString)) &#123;</span><br><span class="line">            Completion(cachedImage as Data)</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            URLSession.shared.dataTask(with: url) &#123; (date, response, error) in</span><br><span class="line">                guard error == nil, let data = date else&#123;</span><br><span class="line">                    Completion(nil)</span><br><span class="line">                    return</span><br><span class="line">                &#125;</span><br><span class="line">                self.imageCache.setObject(date as! NSData, forKey: NSString(string: urlString))</span><br><span class="line">                Completion(date)</span><br><span class="line">                </span><br><span class="line">            &#125;.resume()</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建网络服务NewViewModel.swift</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">import Foundation</span><br><span class="line"></span><br><span class="line">struct NewsViewModel &#123;</span><br><span class="line">    let news : News</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    var author : String &#123;</span><br><span class="line">        return news.author ?? &quot;Unknown&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    var title : String &#123;</span><br><span class="line">        return news.title ?? &quot;&quot;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    var description : String &#123;</span><br><span class="line">        return news.description ?? &quot;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    var url : String &#123;</span><br><span class="line">        return news.url ?? &quot;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    var urlToImage : String &#123;</span><br><span class="line">        return news.urlToImage ?? &quot;https://www.kindpng.com/picc/m/182-1827064_breaking-news-banner-png-transparent-background-breaking-news.png&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="创建NewsListViewModel-swift"><a href="#创建NewsListViewModel-swift" class="headerlink" title="创建NewsListViewModel.swift"></a>创建NewsListViewModel.swift</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import Foundation</span><br><span class="line"></span><br><span class="line">class  NewsListViewModel &#123;</span><br><span class="line">    var newsVM = [NewsViewModel]()</span><br><span class="line">    </span><br><span class="line">    let reauseID = &quot;news&quot;</span><br><span class="line">    func getNews(Completion: @escaping ([NewsViewModel]) -&gt; Void) &#123;</span><br><span class="line">        NetworkManager.shared.getNews &#123; (news) in</span><br><span class="line">            guard let news = news else &#123;  return &#125;</span><br><span class="line">            let newsVM = news.map(NewsViewModel.init)</span><br><span class="line">            DispatchQueue.main.async &#123;</span><br><span class="line">                self.newsVM = newsVM</span><br><span class="line">                Completion(newsVM)</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建NewsTableViewCell-swift"><a href="#创建NewsTableViewCell-swift" class="headerlink" title="创建NewsTableViewCell.swift"></a>创建NewsTableViewCell.swift</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line">final class NewsTableViewCell : UITableViewCell &#123;</span><br><span class="line">    var newsVM: NewsViewModel? &#123;</span><br><span class="line">        didSet&#123;</span><br><span class="line">            if let newsVM = newsVM &#123;</span><br><span class="line">                titleLabel.text = newsVM.title</span><br><span class="line">                </span><br><span class="line">                NetworkManager.shared.getImage(urlString: newsVM.urlToImage) &#123; (data) in</span><br><span class="line">                    guard let data = data else &#123; return &#125;</span><br><span class="line">                    DispatchQueue.main.async &#123;</span><br><span class="line">                        self.newsImage.image = UIImage(data: data)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    var newsImageData: Data? &#123;</span><br><span class="line">        didSet&#123;</span><br><span class="line">            if let data = newsImageData &#123;</span><br><span class="line">                newsImage.image = UIImage(data: data)</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private lazy var newsImage: ShadowImageView = &#123;</span><br><span class="line">        let v = ShadowImageView()</span><br><span class="line">        v.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        return v</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    private lazy var titleLabel: UILabel = &#123;</span><br><span class="line">        let v = UILabel()</span><br><span class="line">        v.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        v.numberOfLines = 0</span><br><span class="line">        return v</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    override init(style: UITableViewCell.CellStyle, reuseIdentifier: String?) &#123;</span><br><span class="line">        super.init(style: style, reuseIdentifier : reuseIdentifier)</span><br><span class="line">        selectionStyle = .none</span><br><span class="line">        setupView()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    required init?(coder: NSCoder) &#123;</span><br><span class="line">        fatalError(&quot;init(coder:) has not been implemented&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    func setupView() &#123;</span><br><span class="line">        addSubview(titleLabel)</span><br><span class="line">        addSubview(newsImage)</span><br><span class="line">        setupConstraints()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    func setupConstraints() &#123;</span><br><span class="line">        </span><br><span class="line">        //news image</span><br><span class="line">        NSLayoutConstraint.activate([</span><br><span class="line">            newsImage.leadingAnchor.constraint(equalTo: leadingAnchor),</span><br><span class="line">            newsImage.trailingAnchor.constraint(equalTo: trailingAnchor),</span><br><span class="line">            newsImage.topAnchor.constraint(equalTo: topAnchor),</span><br><span class="line">            newsImage.heightAnchor.constraint(equalToConstant: 200)</span><br><span class="line">        ])</span><br><span class="line">        //title</span><br><span class="line">        NSLayoutConstraint.activate([</span><br><span class="line">            titleLabel.leadingAnchor.constraint(equalTo: leadingAnchor, constant: 16),</span><br><span class="line">            titleLabel.trailingAnchor.constraint(equalTo: trailingAnchor, constant: -16),</span><br><span class="line">            titleLabel.topAnchor.constraint(equalTo: newsImage.bottomAnchor, constant: 8),</span><br><span class="line">            titleLabel.bottomAnchor.constraint(equalTo: bottomAnchor, constant: -16)</span><br><span class="line">        ])</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建阴影ShadowImageView-swift"><a href="#创建阴影ShadowImageView-swift" class="headerlink" title="创建阴影ShadowImageView.swift"></a>创建阴影ShadowImageView.swift</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line">final class ShadowImageView : UIView &#123;</span><br><span class="line">    var image: UIImage? &#123;</span><br><span class="line">        didSet&#123;</span><br><span class="line">            imageView.image = image</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private lazy var imageView : UIImageView = &#123;</span><br><span class="line">        let v = UIImageView()</span><br><span class="line">        v.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        v.contentMode = .scaleAspectFill</span><br><span class="line">        v.layer.cornerRadius = 20</span><br><span class="line">        v.clipsToBounds = true</span><br><span class="line">        return v</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    private lazy var baseView : UIView = &#123;</span><br><span class="line">        let v = UIView()</span><br><span class="line">        v.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        v.backgroundColor = .clear</span><br><span class="line">        v.layer.shadowColor = UIColor.black.cgColor</span><br><span class="line">        v.layer.shadowOffset = CGSize(width: 5, height: 5)</span><br><span class="line">        v.layer.shadowOpacity = 0.7</span><br><span class="line">        v.layer.cornerRadius = 10</span><br><span class="line">        return v</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    init() &#123;</span><br><span class="line">        super.init(frame: .zero)</span><br><span class="line">        </span><br><span class="line">        setupView()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    required init?(coder: NSCoder) &#123;</span><br><span class="line">        fatalError(&quot;init(coder:) has not been implemented&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    func setupView()  &#123;</span><br><span class="line">        </span><br><span class="line">        addSubview(baseView)</span><br><span class="line">        baseView.addSubview(imageView)</span><br><span class="line">        setupConstraints()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    func setupConstraints()  &#123;</span><br><span class="line">        [baseView, imageView].forEach &#123; (v) in</span><br><span class="line">            NSLayoutConstraint.activate([</span><br><span class="line">            v.leadingAnchor.constraint(equalTo: leadingAnchor, constant: 16),</span><br><span class="line">            v.trailingAnchor.constraint(equalTo: trailingAnchor, constant: -16),</span><br><span class="line">            v.topAnchor.constraint(equalTo: topAnchor, constant: 16),</span><br><span class="line">            v.bottomAnchor.constraint(equalTo: bottomAnchor, constant: -16)</span><br><span class="line">            ])</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        func  layoutSubviews() &#123;</span><br><span class="line">        super.layoutSubviews()</span><br><span class="line">        baseView.layer.shadowPath = UIBezierPath(roundedRect: baseView.bounds, cornerRadius: 10).cgPath</span><br><span class="line">        baseView.layer.shouldRasterize = true</span><br><span class="line">        baseView.layer.rasterizationScale = UIScreen.main.scale</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建HeaderView-swift"><a href="#创建HeaderView-swift" class="headerlink" title="创建HeaderView.swift"></a>创建HeaderView.swift</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">final class HeaderView : UIView &#123;</span><br><span class="line">    </span><br><span class="line">    private var fontSize: CGFloat</span><br><span class="line">    </span><br><span class="line">    private lazy var headinglabel : UILabel = &#123;</span><br><span class="line">        let v = UILabel()</span><br><span class="line">        v.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        v.text = &quot;新闻&quot;</span><br><span class="line">        v.font = UIFont.boldSystemFont(ofSize: fontSize)</span><br><span class="line">        return v</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    private lazy var headingCircImage : UIImageView = &#123;</span><br><span class="line">        let v = UIImageView()</span><br><span class="line">        v.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        v.contentMode = .scaleAspectFit</span><br><span class="line">        let config = UIImage.SymbolConfiguration(pointSize: fontSize, weight: .bold)</span><br><span class="line">        v.image = UIImage(systemName: &quot;btn_live_selected.png&quot;, withConfiguration: config)?.withRenderingMode(.alwaysOriginal)</span><br><span class="line">        return v</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    private lazy var plusImage: UIImageView = &#123;</span><br><span class="line">        let v = UIImageView()</span><br><span class="line">        v.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        let config = UIImage.SymbolConfiguration(pointSize: fontSize, weight: .bold)</span><br><span class="line">        v.image = UIImage(systemName: &quot;plus&quot;, withConfiguration: config)?.withRenderingMode(.alwaysOriginal)</span><br><span class="line">        return v</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    private lazy var subheadlineLabel: UILabel = &#123;</span><br><span class="line">        let v = UILabel()</span><br><span class="line">        v.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        v.font = v.font.withSize(fontSize)</span><br><span class="line">        v.text = &quot;Top Headlines&quot;</span><br><span class="line">        v.textColor = .gray</span><br><span class="line">        return v</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    private lazy var headerStackView: UIStackView = &#123;</span><br><span class="line">        let v = UIStackView(arrangedSubviews: [headingCircImage, headinglabel, plusImage])</span><br><span class="line">        v.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        v.axis = .horizontal</span><br><span class="line">        return v</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    init(fontSize: CGFloat)&#123;</span><br><span class="line">        self.fontSize = fontSize</span><br><span class="line">        super.init(frame: .zero)</span><br><span class="line">        translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        setupView()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    required init?(coder: NSCoder) &#123;</span><br><span class="line">        fatalError(&quot;init(coder:) has not been implemented&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    func setupView()  &#123;</span><br><span class="line">        </span><br><span class="line">        addSubview(headerStackView)</span><br><span class="line">        addSubview(subheadlineLabel)</span><br><span class="line">        setupConstraints()</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    func setupConstraints()  &#123;</span><br><span class="line">        //new header</span><br><span class="line">        NSLayoutConstraint.activate([</span><br><span class="line">            headerStackView.leadingAnchor.constraint(equalTo: leadingAnchor),</span><br><span class="line">            headerStackView.topAnchor.constraint(equalTo: topAnchor)</span><br><span class="line">        ])</span><br><span class="line">        </span><br><span class="line">        //subheadline</span><br><span class="line">        NSLayoutConstraint.activate([</span><br><span class="line">            subheadlineLabel.leadingAnchor.constraint(equalTo: leadingAnchor),</span><br><span class="line">            subheadlineLabel.topAnchor.constraint(equalTo: headerStackView.bottomAnchor, constant: 8),</span><br><span class="line">            subheadlineLabel.bottomAnchor.constraint(equalTo: bottomAnchor)</span><br><span class="line">        ])</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;学习目标：&quot;&gt;&lt;a href=&quot;#学习目标：&quot; class=&quot;headerlink&quot; title=&quot;学习目标：&quot;&gt;&lt;/a&gt;学习目标：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;以纯代码方式构建完整的应用，使用 NSCache 缓存图像&lt;/li&gt;
&lt;li&gt;学习网络API的调用&lt;/l</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>斗鱼直播Demo(二)</title>
    <link href="http://example.com/2020/05/18/%E6%96%97%E9%B1%BC%E7%9B%B4%E6%92%ADDemo2/"/>
    <id>http://example.com/2020/05/18/%E6%96%97%E9%B1%BC%E7%9B%B4%E6%92%ADDemo2/</id>
    <published>2020-05-18T05:49:59.000Z</published>
    <updated>2020-12-30T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="封装PageConnetView（滚动内容）"><a href="#封装PageConnetView（滚动内容）" class="headerlink" title="封装PageConnetView（滚动内容）"></a>封装PageConnetView（滚动内容）</h2><p>在view新建PageContentView.swift  （cocoa）</p><h3 id="封装构造函数"><a href="#封装构造函数" class="headerlink" title="封装构造函数"></a>封装构造函数</h3><p>定义属性，封装构造函数</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201224230113472.png" alt="image-20201224230113472" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line">class PageContentView: UIView &#123;</span><br><span class="line"></span><br><span class="line">    // MARK:- 定义属性</span><br><span class="line">    private var childVcs : [UIViewController]</span><br><span class="line">    private weak var parentViewController : UIViewController?</span><br><span class="line">    </span><br><span class="line">    // MARK:- 自定义构造函数</span><br><span class="line">    init(frame: CGRect, childVcs : [UIViewController], parentViewController : UIViewController?) &#123;</span><br><span class="line">        self.childVcs = childVcs</span><br><span class="line">        self.parentViewController = parentViewController</span><br><span class="line">        </span><br><span class="line">        super.init(frame: frame)</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    required init?(coder aDecoder: NSCoder) &#123;</span><br><span class="line">        fatalError(&quot;init(coder:) has not been implemented&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Extension扩展处给UIColor扩充一个UIColor-Extension.swift扩展</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line">extension UIColor &#123;</span><br><span class="line">    convenience init(r : CGFloat, g : CGFloat, b : CGFloat) &#123;</span><br><span class="line">        self.init(red: r / 255.0, green: g / 255.0, blue: b / 255.0, alpha: 1.0)//遍历构造函数</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>转到homeVC懒加载</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201224231930544-20210527162223790.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">private lazy var pageContentView : PageContentView = &#123;[weak self] in</span><br><span class="line">       </span><br><span class="line">       // 1.确定内容的frame</span><br><span class="line">       let contentH = kScreenH - KStatusBarH - kNavigationBarH - KTitleViewH</span><br><span class="line">       let contentFrame = CGRect(x: 0, y: KStatusBarH + kNavigationBarH + KTitleViewH, width: kScreenW, height: contentH)</span><br><span class="line">       </span><br><span class="line">       // 2.确定所有的子控制器</span><br><span class="line">       var childVcs = [UIViewController]()</span><br><span class="line">       for _ in 0..&lt;4 &#123;</span><br><span class="line">           let vc = UIViewController()</span><br><span class="line">           vc.view.backgroundColor = UIColor(r: CGFloat(arc4random_uniform(255)), g: CGFloat(arc4random_uniform(255)), b: CGFloat(arc4random_uniform(255)))</span><br><span class="line">           childVcs.append(vc)</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>然后到底部添加ContentView，为了能看到，还给其定义个颜色</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210108144813422.png" alt="image-20210108144813422" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 3.添加ContentView</span><br><span class="line">view.addSubview(pageConten      </span><br><span class="line">pageContentView.backgroundColor = UIColor.purple//添加可是颜色tView)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行项目，发现添加上</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201224232859850.png" alt="image-20201224232859850"></p><h4 id="给里面添加布局，设置UI界面，回到PageContentView-swift"><a href="#给里面添加布局，设置UI界面，回到PageContentView-swift" class="headerlink" title="给里面添加布局，设置UI界面，回到PageContentView.swift"></a>给里面添加布局，设置UI界面，回到PageContentView.swift</h4><h4 id="将所有的子控制器添加父控制器中，在最后添加"><a href="#将所有的子控制器添加父控制器中，在最后添加" class="headerlink" title="将所有的子控制器添加父控制器中，在最后添加"></a>将所有的子控制器添加父控制器中，在最后添加</h4><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201224233818271.png" alt="image-20201224233818271"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// MARK:- 设置UI界面</span><br><span class="line">extension PageContentView &#123;</span><br><span class="line">    fileprivate func setupUI() &#123;</span><br><span class="line">        // 1.将所有的子控制器添加父控制器中</span><br><span class="line">        for childVc in childVcs &#123;</span><br><span class="line">            parentViewController?.addChild(childVc)      </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><strong>添加懒加载属性</strong></p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201224234503637.png" alt="image-20201224234503637" style="zoom:50%;"></li><li><p>```</p><pre><code>// MARK:- 懒加载属性</code></pre><p>  private lazy var collectionView : UICollectionView = {</p><pre><code>    // 1.创建layout    let layout = UICollectionViewFlowLayout()    layout.itemSize = self.bounds.size    layout.minimumLineSpacing = 0 //行间距    layout.minimumInteritemSpacing = 0    layout.scrollDirection = .horizontal //滚动方向水平滚动        // 2.创建UICollectionView    let collectionView = UICollectionView(frame: CGRect.zero, collectionViewLayout: layout)    collectionView.showsHorizontalScrollIndicator = false    collectionView.isPagingEnabled = true    collectionView.bounces = false    return collectionView&#125;()</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">转到代码下方**extension**里</span><br><span class="line"></span><br><span class="line">添加UICollectionView,用于在Cell中存放控制器的View</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>    // 2.添加UICollectionView,用于在Cell中存放控制器的View    addSubview(collectionView)    collectionView.frame = bounds</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">同时把设置UI添加</span><br><span class="line"></span><br><span class="line">![image-20201224235251519](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201224235251519.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">运行，CollectionView没有内容，但可以显示（黑的）</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201224235319031.png&quot; alt=&quot;image-20201224235319031&quot; style=&quot;zoom:50%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">给其添加设置数据源</span><br><span class="line"></span><br><span class="line">![image-20201224235533496](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201224235533496.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>    collectionView.dataSource = self</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 添加数据源要遵守协议，在最下方添加扩展</span><br><span class="line"></span><br><span class="line">- ```</span><br><span class="line">  // MARK:- 遵守UICollectionViewDataSource</span><br><span class="line">  extension PageContentView : UICollectionViewDataSource &#123;</span><br><span class="line">      func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -&gt; Int &#123;</span><br><span class="line">          return childVcs.count</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -&gt; UICollectionViewCell &#123;</span><br><span class="line">          // 1.创建Cell</span><br><span class="line">          let cell = collectionView.dequeueReusableCell(withReuseIdentifier: ContentCellID, for: indexPath)</span><br><span class="line">          </span><br><span class="line">          // 2.给Cell设置内容</span><br><span class="line">          for view in cell.contentView.subviews &#123;</span><br><span class="line">              view.removeFromSuperview()</span><br><span class="line">          &#125;</span><br><span class="line">          let childVc = childVcs[(indexPath as NSIndexPath).item]</span><br><span class="line">          childVc.view.frame = cell.contentView.bounds</span><br><span class="line">          cell.contentView.addSubview(childVc.view)</span><br><span class="line">          </span><br><span class="line">          return cell</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h5 id="1-创建cell必须注册cell-添加"><a href="#1-创建cell必须注册cell-添加" class="headerlink" title="1.创建cell必须注册cell,添加"></a>1.创建cell必须注册cell,添加<img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201225084422492.png" alt="image-20201225084422492"></h5>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">collectionView.register(UICollectionViewCell.self, forCellWithReuseIdentifier: ContentCellID)//注册cell</span><br></pre></td></tr></table></figure><p>  注册完在上方添加后面的标识报错消失</p><p>  <img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201225084809822.png" alt="image-20201225084809822"></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">private let ContentCellID = &quot;ContentCellID&quot;//添加标识</span><br></pre></td></tr></table></figure><p>  2.给cell设置内容，如1代码</p><p>  运行，滚动实现</p>  <img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/May-27-2021%2016-13-24.gif" alt="May-27-2021 16-13-24" style="zoom:50%;"><h5 id="4-给代码进行优化"><a href="#4-给代码进行优化" class="headerlink" title="4.给代码进行优化"></a>4.给代码进行优化</h5><p>  闭包里面用self会产生循环引用，给用weak</p><ul><li><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201225091115247.png" alt="image-20201225091115247"></p></li><li><p>```<br>private lazy var collectionView : UICollectionView = {[weak self] in</p><pre><code>  // 1.创建layout  let layout = UICollectionViewFlowLayout()  layout.itemSize = (self?.bounds.size)!//可选链返回值是可选值，（）强制解包</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    homeVC,前面以改![image-20201225091330746](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201225091330746.png)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">## 封装PageTitleView&amp;PageConnetView的逻辑</span><br><span class="line"></span><br><span class="line">### PageTitleView发生点击</span><br><span class="line"></span><br><span class="line">- ###### 将PageTitleView中逻辑进行处理     </span><br><span class="line"></span><br><span class="line">- ![image-20210108150907265](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210108150907265.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><p>extension PageTitleView {<br>  @objc fileprivate func titleLabelClick(_ tapGes : UITapGestureRecognizer) {</p><pre><code>    // 1.获取当前Label    guard let currentLabel = tapGes.view as? UILabel else &#123; return &#125;            // 2.获取之前的Label    let oldLabel = titleLabels[currentIndex]  // 3.切换文字的颜色    currentLabel.textColor = UIColor.orange  oldLabel.textColor = UIColor.darkGray      // 4.保存最新Label的下标值    currentIndex = currentLabel.tag  // 5.滚动条位置发生改变    let scrollLineX = CGFloat(currentIndex) * scrollLine.frame.width  UIView.animate(withDuration: 0.15, animations: &#123;        self.scrollLine.frame.origin.x = scrollLineX    &#125;)      // 6.通知代理    delegate?.pageTitleView(self, selectedIndex: currentIndex)  &#125;</code></pre><p>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###### 给Label添加手势</span><br><span class="line"></span><br><span class="line">![image-20210527163449870](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527163449870.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>// 5.给Label添加手势      label.isUserInteractionEnabled = true        let tapGes = UITapGestureRecognizer(target: self, action: #selector(self.titleLabelClick(_:)))      label.addGestureRecognizer(tapGes)//添加手势到label</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**extension**给label添加监听</span><br><span class="line"></span><br><span class="line">![image-20201225092349310](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201225092349310.png)</span><br><span class="line"></span><br><span class="line">获取当前Label的下标值前，先默认currentIndex</span><br><span class="line"></span><br><span class="line">![image-20201225092839764](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201225092839764.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>private var currentIndex : Int = 0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">之前前Label的下标值的处理（添加了）</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>let oldLabel = titleLabels[currentIndex]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">保存最新Label的下标值（添加了）</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>    // 4.保存最新Label的下标值    currentIndex = currentLabel.tag</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">切换文字的颜色&lt;img src=&quot;https://gitee.com/zhu565615430/images/raw/master/CBcityimas/May-27-2021%2016-33-16.gif&quot; alt=&quot;May-27-2021 16-33-16&quot; style=&quot;zoom:67%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">文字颜色修改了，但是方的线————滚动条没发生滚动</span><br><span class="line"></span><br><span class="line">设置滚动条位置发生改变</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>    // 5.滚动条位置发生改变    let scrollLineX = CGFloat(currentIndex) * scrollLine.frame.width    UIView.animate(withDuration: 0.15, animations: &#123;        self.scrollLine.frame.origin.x = scrollLineX    &#125;) </code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">内容滚动，通过代理把PageConnetView发生的事件传递给homeVC</span><br><span class="line"></span><br><span class="line">在PageTitleView.swift头部定义协议</span><br><span class="line"></span><br><span class="line">![image-20210527163533615](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527163533615.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>// MARK:- 定义协议<br>protocol PageTitleViewDelegate : class {//class表示协议只能被类取走</p><pre><code>func pageTitleView(_ titleView : PageTitleView, selectedIndex index : Int)</code></pre><p>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>weak var delegate : PageTitleViewDelegate?//定义代理属性</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">接着在下方通知代理</span><br><span class="line"></span><br><span class="line">![image-20201225142217505](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201225142217505.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>        // 6.通知代理        delegate?.pageTitleView(self, selectedIndex: currentIndex)</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">回到homeVC  </span><br><span class="line"></span><br><span class="line">![image-20201225142537239](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201225142537239.png)</span><br><span class="line"></span><br><span class="line">最后加上，避免循环引用</span><br><span class="line"></span><br><span class="line">加上extension遵守PageTitleViewDelegate协议</span><br><span class="line"></span><br><span class="line">![image-20201225142904333](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201225142904333.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>// MARK:- 遵守PageTitleViewDelegate协议<br>extension HomeViewController : PageTitleViewDelegate {<br>  func pageTitleView(_ titleView: PageTitleView, selectedIndex index: Int) {</p><pre><code>  print(index)</code></pre><p>  }<br>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">运行项目 ，发现可以拿到index，控制台输出点击的序号</span><br><span class="line"></span><br><span class="line">把index传给pageContentView，添加</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>// MARK:- 遵守PageTitleViewDelegate协议<br>extension HomeViewController : PageTitleViewDelegate {<br>  func pageTitleView(_ titleView: PageTitleView, selectedIndex index: Int) {</p><pre><code>  pageContentView.setCurrentIndex(index)//添加此行</code></pre><p>  }<br>}</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">回到PageTitleView VC，在下发添加对外暴露的方法</span><br><span class="line"></span><br><span class="line">![image-20210108152545633](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210108152545633.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>// MARK:- 对外暴露的方法<br>extension PageTitleView {<br>    func setTitleWithProgress(_ progress : CGFloat, sourceIndex : Int, targetIndex : Int) {<br>        // 1.取出sourceLabel/targetLabel<br>        let sourceLabel = titleLabels[sourceIndex]<br>        let targetLabel = titleLabels[targetIndex]</p><pre><code>    // 2.处理滑块的逻辑    let moveTotalX = targetLabel.frame.origin.x - sourceLabel.frame.origin.x    let moveX = moveTotalX * progress    scrollLine.frame.origin.x = sourceLabel.frame.origin.x + moveX            &#125;</code></pre><p>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">PageContentView里</span><br><span class="line"></span><br><span class="line">![image-20210302233328985](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210302233328985.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>// MARK:- 对外暴露的方法<br>extension PageContentView {<br>    func setCurrentIndex(_ currentIndex : Int) {</p><pre><code>    let offsetX = CGFloat(currentIndex) * collectionView.frame.width    collectionView.setContentOffset(CGPoint(x: offsetX, y: 0), animated: false)&#125;</code></pre><p>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">运行项目，点标签栏发现页面也滚动，但滑动标签未跟随滚动</span><br><span class="line"></span><br><span class="line">![Dec-25-2020 14-44-12](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/Dec-25-2020%2014-44-12.gif)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PageConnetView的滚动，主要是监听 ，先设置代理</span><br><span class="line"></span><br><span class="line">![image-20201225170005062](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201225170005062.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>collectionView.delegate = self</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**遵守UICollectionViewDelegate**</span><br><span class="line"></span><br><span class="line">![image-20201225171438499](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201225171438499.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>// MARK:- 遵守UICollectionViewDelegate<br>extension PageContentView : UICollectionViewDelegate {</p><pre><code>func scrollViewDidScroll(_ scrollView: UIScrollView) &#123;    print(&quot;----&quot;)&#125; </code></pre><p>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">手指滚动，控制台有输出，可以监测到</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;https://gitee.com/zhu565615430/images/raw/master/CBcityimas/IMG_E239AF31318F-1.jpeg&quot; alt=&quot;IMG_E239AF31318F-1&quot; style=&quot;zoom:50%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">在上方添加个属性</span><br><span class="line"></span><br><span class="line">![image-20201225175535613](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201225175535613.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>private var startOffsetX : CGFloat = 0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">继续添加扩展</span><br><span class="line"></span><br><span class="line">![image-20201225175652479](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201225175652479.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>func scrollViewWillBeginDragging(_ scrollView: UIScrollView) &#123;    startOffsetX = scrollView.contentOffset.x&#125;</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">定义需要获取的数据 ,在**遵守UICollectionViewDataSource**的扩展下方添加扩展</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>// MARK:- 遵守UICollectionViewDelegate<br>extension PageContentView : UICollectionViewDelegate {</p><pre><code>func scrollViewWillBeginDragging(_ scrollView: UIScrollView) &#123;    startOffsetX = scrollView.contentOffset.x&#125;func scrollViewDidScroll(_ scrollView: UIScrollView) &#123;    // 1.定义获取需要的数据    var progress : CGFloat = 0    var sourceIndex : Int = 0    var targetIndex : Int = 0    // 2.判断是左滑还是右滑    let currentOffsetX = scrollView.contentOffset.x    let scrollViewW = scrollView.bounds.width    if currentOffsetX &gt; startOffsetX &#123; // 左滑        // 1.计算progress        progress = currentOffsetX / scrollViewW - floor(currentOffsetX / scrollViewW)                // 2.计算sourceIndex        sourceIndex = Int(currentOffsetX / scrollViewW)                // 3.计算targetIndex        targetIndex = sourceIndex + 1        if targetIndex &gt;= childVcs.count &#123;            targetIndex = childVcs.count - 1        &#125;                // 4.如果完全划过去        if currentOffsetX - startOffsetX == scrollViewW &#123;            progress = 1            targetIndex = sourceIndex        &#125;    &#125; else &#123; // 右滑        // 1.计算progress        progress = 1 - (currentOffsetX / scrollViewW - floor(currentOffsetX / scrollViewW))                // 2.计算targetIndex        targetIndex = Int(currentOffsetX / scrollViewW)                // 3.计算sourceIndex        sourceIndex = targetIndex + 1        if sourceIndex &gt;= childVcs.count &#123;            sourceIndex = childVcs.count - 1        &#125;    &#125;    // 3.将progress/sourceIndex/targetIndex传递给titleView    delegate?.pageContentView(self, progress: progress, sourceIndex: sourceIndex, targetIndex: targetIndex)&#125;</code></pre><p>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">到开头定义代理，将progress sourceIndex targetIndex传值给titleView</span><br><span class="line"></span><br><span class="line">![image-20201226005404473](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201226005404473.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>//  定义代理，将progress sourceIndex targetIndex传值给titleView<br>protocol PageContentViewDelegate : class {<br>    func pageContentView(_ contentView : PageContentView, progress : CGFloat, sourceIndex : Int, targetIndex : Int)<br>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">定义代理属性，遵守协议</span><br><span class="line"></span><br><span class="line">![image-20201226005634347](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201226005634347.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>weak var delegate : PageContentViewDelegate?//定义代理属性，遵守协议</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">到homeVC取值</span><br><span class="line"></span><br><span class="line">![image-20201226005821490](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201226005821490.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>   contentView.delegate = self//取值progress sourceIndex targetIndex</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">最下方**遵守PageContentViewDelegate协议**</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>// MARK:- 遵守PageContentViewDelegate协议<br>extension HomeViewController : PageContentViewDelegate {<br>    func pageContentView(_ contentView: PageContentView, progress: CGFloat, sourceIndex: Int, targetIndex: Int) {<br>        pageTitleView.setTitleWithProgress(progress, sourceIndex: sourceIndex, targetIndex: targetIndex)<br>    }<br>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">转到PageTitleVc,在最下方添加**对外暴露的方法**</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>// MARK:- 对外暴露的方法<br>extension PageTitleView {<br>    func setTitleWithProgress(_ progress : CGFloat, sourceIndex : Int, targetIndex : Int) {<br>        // 1.取出sourceLabel/targetLabel<br>        let sourceLabel = titleLabels[sourceIndex]<br>        let targetLabel = titleLabels[targetIndex]</p><pre><code>    // 2.处理滑块的逻辑    let moveTotalX = targetLabel.frame.origin.x - sourceLabel.frame.origin.x    let moveX = moveTotalX * progress    scrollLine.frame.origin.x = sourceLabel.frame.origin.x + moveX     &#125;</code></pre><p>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">运行项目，标签和下方一起滚动，但是字体颜色没有变化</span><br><span class="line"></span><br><span class="line">![Dec-26-2020 01-24-33](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/Dec-26-2020%2001-24-33.gif)</span><br><span class="line"></span><br><span class="line">颜色的渐变</span><br><span class="line"></span><br><span class="line">在PageTitleView.swift，定义RGB值常量</span><br><span class="line"></span><br><span class="line">![image-20201226114737491](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201226114737491.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>private let kNormalColor : (CGFloat, CGFloat, CGFloat) = (85, 85, 85)<br>private let kSelectColor : (CGFloat, CGFloat, CGFloat) = (255, 128, 0)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> 修改设置的颜色用RGB值设置</span><br><span class="line"></span><br><span class="line">![image-20201226115501235](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201226115501235.png)</span><br><span class="line"></span><br><span class="line">![image-20201226115628756](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201226115628756.png)</span><br><span class="line"></span><br><span class="line">![image-20201226115723314](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201226115723314.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>   label.textColor = UIColor(r: kNormalColor.0, g: kNormalColor.1, b: kNormalColor.2)//文字颜色        firstLabel.textColor = UIColor(r: kSelectColor.0, g: kSelectColor.1, b: kSelectColor.2)        currentLabel.textColor = UIColor(r: kSelectColor.0, g: kSelectColor.1, b: kSelectColor.2)    oldLabel.textColor = UIColor(r: kNormalColor.0, g: kNormalColor.1, b: kNormalColor.2)</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">颜色的渐变</span><br><span class="line"></span><br><span class="line">![image-20201226165046797](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201226165046797.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>    // 3.颜色的渐变(复杂)    // 3.1.取出变化的范围    let colorDelta = (kSelectColor.0 - kNormalColor.0, kSelectColor.1 - kNormalColor.1, kSelectColor.2 - kNormalColor.2)        // 3.2.变化sourceLabel    sourceLabel.textColor = UIColor(r: kSelectColor.0 - colorDelta.0 * progress, g: kSelectColor.1 - colorDelta.1 * progress, b: kSelectColor.2 - colorDelta.2 * progress)        // 3.2.变化targetLabel    targetLabel.textColor = UIColor(r: kNormalColor.0 + colorDelta.0 * progress, g: kNormalColor.1 + colorDelta.1 * progress, b: kNormalColor.2 + colorDelta.2 * progress)        // 4.记录最新的index    currentIndex = targetIndex</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">运行程序，轻微滑动，有颜色渐变的效果</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;https://gitee.com/zhu565615430/images/raw/master/CBcityimas/May-27-2021%2016-19-07.gif&quot; alt=&quot;May-27-2021 16-19-07&quot; style=&quot;zoom:50%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">对点击事件的优化</span><br><span class="line"></span><br><span class="line">pageContentV去定义属性</span><br><span class="line"></span><br><span class="line">![image-20201226165741879](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201226165741879.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>private var isForbidScrollDelegate : Bool = false</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">记录要禁止执行的代理方法</span><br><span class="line"></span><br><span class="line">![image-20201226170139718](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201226170139718.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>    // 1.记录需要禁止执行代理方法    isForbidScrollDelegate = true</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![image-20201226170634281](https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201226170634281.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>    isForbidScrollDelegate = false    // 0.判断是否是点击事件    if isForbidScrollDelegate &#123; return &#125;</code></pre><pre><code>主界面导航栏内容滚动与点击的布局完成&lt;img src=&quot;https://gitee.com/zhu565615430/images/raw/master/CBcityimas/May-27-2021%2016-20-47.gif&quot; alt=&quot;May-27-2021 16-20-47&quot; style=&quot;zoom:50%;&quot; /&gt;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;封装PageConnetView（滚动内容）&quot;&gt;&lt;a href=&quot;#封装PageConnetView（滚动内容）&quot; class=&quot;headerlink&quot; title=&quot;封装PageConnetView（滚动内容）&quot;&gt;&lt;/a&gt;封装PageConnetView（滚动内</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>斗鱼直播Demo(一)</title>
    <link href="http://example.com/2020/05/16/%E6%96%97%E9%B1%BC%E7%9B%B4%E6%92%ADDemo/"/>
    <id>http://example.com/2020/05/16/%E6%96%97%E9%B1%BC%E7%9B%B4%E6%92%ADDemo/</id>
    <published>2020-05-16T05:49:59.000Z</published>
    <updated>2020-12-30T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527155457748.png" alt="image-20210527155457748"></p><p>项目开始（主框架搭建）</p><h2 id="导入图片，设置启动图片，App图标"><a href="#导入图片，设置启动图片，App图标" class="headerlink" title="导入图片，设置启动图片，App图标"></a><strong>导入图片</strong>，设置启动图片，App图标</h2><h4 id="导入启动图片，项目图标，并给项目做好文档管理"><a href="#导入启动图片，项目图标，并给项目做好文档管理" class="headerlink" title="导入启动图片，项目图标，并给项目做好文档管理"></a>导入启动图片，项目图标，并给项目做好文档管理</h4><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222204617627.png" alt="image-20201222204617627" style="zoom: 25%;"><h2 id="视图控制器的设置"><a href="#视图控制器的设置" class="headerlink" title="视图控制器的设置"></a>视图控制器的设置</h2><h3 id="在项目里设置，设置默认启动控制器为main，添加别的视图控制器"><a href="#在项目里设置，设置默认启动控制器为main，添加别的视图控制器" class="headerlink" title="在项目里设置，设置默认启动控制器为main，添加别的视图控制器"></a>在项目里设置，设置默认启动控制器为main，添加别的视图控制器</h3><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527150712661.png" alt="image-20210527150712661" style="zoom:50%;"><p>添加UITab Bar Controller视图控制器，然后分别选择两个视图控制器，分别为其添加Navigation Controller（导航控制器）。</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527150726189.png" alt="image-20210527150726189" style="zoom: 33%;"><p>复制两个一样的，一个四个，并连接</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527150748148.png" alt="image-20210527150748148" style="zoom: 33%;"><p>分别修改item名称，首页、关注、直播、我的，然后添加tabbar图片到Assets.在分别设置好每个的图片</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527150826067.png" alt="image-20210527150826067" style="zoom: 33%;"><p>修复黑屏</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527150850144.png" alt="image-20210527150850144" style="zoom:33%;"><h3 id="修改TABbar图标为橙色的代码，在AppDelegate下添加"><a href="#修改TABbar图标为橙色的代码，在AppDelegate下添加" class="headerlink" title="修改TABbar图标为橙色的代码，在AppDelegate下添加"></a>修改TABbar图标为橙色的代码，在AppDelegate下添加</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UITabBar.appearance().tintColor = UIColor.orange</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222205305599.png" alt="image-20201222205305599"></p><p>视图太多，容易混乱。新建home故事版，如下图</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527150927776.png" alt="image-20210527150927776" style="zoom:33%;"><p>将各个功能模块拆分出来  ，并且放入自己模块中</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222212753838.png" alt="image-20201222212753838" style="zoom:25%;"><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222213411750.png" alt="image-20201222213411750" style="zoom:25%;"><p>为了适配低版本，删连线，用代码方式连接</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222214157900.png" alt="image-20201222214157900" style="zoom:25%;"><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210107235033730.png" alt="image-20210107235033730" style="zoom: 33%;"><p>新建视图控制器MainViewController，继承自UITabBarController，然后到故事版将class修改MainViewController（图略）</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222214430463.png" alt="image-20201222214430463" style="zoom: 25%;"><p>给MainViewController添加新的方法，全部代码如下，这样就获取得子控制器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line">class MainViewController: UITabBarController &#123;</span><br><span class="line"></span><br><span class="line">    override func viewDidLoad() &#123;</span><br><span class="line">        super.viewDidLoad()</span><br><span class="line">        </span><br><span class="line">        addChildVc(StoryName: &quot;Home&quot;)</span><br><span class="line">        addChildVc(StoryName: &quot;Live&quot;)</span><br><span class="line">        addChildVc(StoryName: &quot;Follow&quot;)</span><br><span class="line">        addChildVc(StoryName: &quot;Profile&quot;)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private func addChildVc(StoryName: String) &#123;</span><br><span class="line">        //        1.通过Storyboard获取控制器</span><br><span class="line">        let ChildVc = UIStoryboard(name: StoryName, bundle: nil).instantiateInitialViewController()!</span><br><span class="line">       //        2.将childVC作为子控制器</span><br><span class="line">        addChild(ChildVc)</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/IMG_02F353E7087B-1.jpeg" alt="IMG_02F353E7087B-1" style="zoom: 33%;"><h2 id="设置布局"><a href="#设置布局" class="headerlink" title="设置布局"></a>设置布局</h2><h3 id="首页搭建"><a href="#首页搭建" class="headerlink" title="首页搭建"></a>首页搭建</h3><p>对模块进行mvc的划分，在fider添加M、V、C文件夹,拉到项目里</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222223657634.png" alt="image-20201222223657634" style="zoom:33%;"><p>创建单独的控制器来管理它，将class修改HomeViewController（图略）cocoa</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222223940626.png" alt="image-20201222223940626" style="zoom: 33%;"><p>添加<strong>extension</strong>,抽取方法调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  override func viewDidLoad() &#123;</span><br><span class="line">    super.viewDidLoad()</span><br><span class="line">      SetupUI()</span><br><span class="line"></span><br><span class="line">  &#125;&#125;</span><br><span class="line"></span><br><span class="line">// Mark:-设置UI界面</span><br><span class="line"></span><br><span class="line">extension HomeViewController &#123;</span><br><span class="line"></span><br><span class="line">  private func SetupUI() &#123;</span><br><span class="line"></span><br><span class="line">  &#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="导航栏的设置"><a href="#导航栏的设置" class="headerlink" title="导航栏的设置"></a>导航栏的设置</h3><h4 id="左侧导航栏"><a href="#左侧导航栏" class="headerlink" title="左侧导航栏"></a>左侧导航栏</h4><p>添加左侧导航栏的方法，因为button有点击变灰，我们要自定义customView，不能使用一张图片上去</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222225741531.png" alt="image-20201222225741531" style="zoom: 50%;"><p>继续在SetupUI方法下面添加代码，并且在<strong>SetupUI</strong>方法中调用</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222230152058.png" alt="image-20201222230152058" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">private  func setupNavigationBar()&#123;</span><br><span class="line"></span><br><span class="line">     let btn = UIButton()</span><br><span class="line"> </span><br><span class="line">   btn.setImage(UIImage(named: &quot;logo&quot;), for: .normal)</span><br><span class="line"></span><br><span class="line">   btn.sizeToFit() //根据图片大小自适应</span><br><span class="line"></span><br><span class="line">   navigationItem.leftBarButtonItem = UIBarButtonItem(customView: btn)//customView自定义button</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="右侧导航栏"><a href="#右侧导航栏" class="headerlink" title="右侧导航栏"></a>右侧导航栏</h4><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222232828554.png"></p><p>1.搜索历史Item点进去有高亮的效果，要设置两个图标，所以用自定义customView，继续在下方添加代码</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222233021498.png" alt="image-20201222233021498" style="zoom:33%;"><p>出现问题，3个图标太近，需要设置sizeToFit，添加</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> size <span class="operator">=</span> <span class="type">CGSize</span>(width: <span class="number">40</span>, height: <span class="number">40</span>)</span><br></pre></td></tr></table></figure><p>修改代码</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">btn.sizeToFit() <span class="comment">//根据图片大小自适应</span></span><br></pre></td></tr></table></figure><p>为</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">historyBtn.frame <span class="operator">=</span> <span class="type">CGRect</span>(origin: <span class="type">CGPoint</span>.zero, size: size) <span class="comment">//根据图片大小自适应</span></span><br></pre></td></tr></table></figure><p>添加的代码如下</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> size <span class="operator">=</span> <span class="type">CGSize</span>(width: <span class="number">40</span>, height: <span class="number">40</span>)</span><br><span class="line"><span class="keyword">let</span> historyBtn <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">historyBtn.setImage(<span class="type">UIImage</span>(named: <span class="string">&quot;image_my_history&quot;</span>), for: .normal)<span class="comment">//正常</span></span><br><span class="line">historyBtn.setImage(<span class="type">UIImage</span>(named: <span class="string">&quot;Image_my_history_click&quot;</span>), for: .highlighted)<span class="comment">//高亮</span></span><br><span class="line">historyBtn.frame <span class="operator">=</span> <span class="type">CGRect</span>(origin: <span class="type">CGPoint</span>.zero, size: size) <span class="comment">//根据图片大小自适应</span></span><br><span class="line"><span class="keyword">let</span> historyItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(customView: historyBtn) <span class="comment">//搜索历史Item</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> searchIBtn <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">searchIBtn.setImage(<span class="type">UIImage</span>(named: <span class="string">&quot;btn_search&quot;</span>), for: .normal)<span class="comment">//正常</span></span><br><span class="line">searchIBtn.setImage(<span class="type">UIImage</span>(named: <span class="string">&quot;btn_search_clicked&quot;</span>), for: .highlighted)<span class="comment">//高亮</span></span><br><span class="line">searchIBtn.frame <span class="operator">=</span> <span class="type">CGRect</span>(origin: <span class="type">CGPoint</span>.zero, size: size) <span class="comment">//根据图片大小自适应</span></span><br><span class="line"><span class="keyword">let</span> searchItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(customView: searchIBtn)  <span class="comment">//搜索Item</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> qrcodeBtn <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">qrcodeBtn.setImage(<span class="type">UIImage</span>(named: <span class="string">&quot;Image_scan&quot;</span>), for: .normal)<span class="comment">//正常</span></span><br><span class="line">qrcodeBtn.setImage(<span class="type">UIImage</span>(named: <span class="string">&quot;Image_scan_click&quot;</span>), for: .highlighted)<span class="comment">//高亮</span></span><br><span class="line">qrcodeBtn.frame <span class="operator">=</span> <span class="type">CGRect</span>(origin: <span class="type">CGPoint</span>.zero, size: size) <span class="comment">//根据图片大小自适应</span></span><br><span class="line"><span class="keyword">let</span> qrcodeItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(customView: qrcodeBtn ) <span class="comment">//二维码Item</span></span><br><span class="line">navigationItem.rightBarButtonItems <span class="operator">=</span> [historyItem, searchItem, qrcodeItem]<span class="comment">//设置数组</span></span><br></pre></td></tr></table></figure><p>修改后Item，距离变大了</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222234406681.png" alt="image-20201222234406681"></p><h4 id="对系统类进行扩展"><a href="#对系统类进行扩展" class="headerlink" title="对系统类进行扩展"></a>对系统类进行扩展</h4><p> 以上发现代码重复太多，需要抽取，扩展，在Tools在Fidder打开新建Extension，拖到项目Tools，创建个UIBarButtonItem-Extension.swift 纯swift文件的扩展</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201223000904164.png" alt="image-20201223000904164" style="zoom:33%;"><p>添加如下代码</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UIBarButtonItem</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">createItem</span>(<span class="title">ImageName</span> : <span class="title">String</span>, <span class="title">highImageName</span> : <span class="title">String</span>, <span class="title">size</span> : <span class="title">CGSize</span>) -&gt; <span class="title">UIBarButtonItem</span> </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> btn <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">        btn.setImage(<span class="type">UIImage</span>(named: <span class="type">ImageName</span>), for: .normal)</span><br><span class="line">        btn.setImage(<span class="type">UIImage</span>(named: <span class="type">ImageName</span>), for: .highlighted)</span><br><span class="line">        btn.frame <span class="operator">=</span> <span class="type">CGRect</span>(origin: <span class="type">CGPoint</span>.zero, size: size)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">UIBarButtonItem</span>(customView: btn)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>修改HomeVC代码，删掉不需要的，修改后：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//        2.设置右侧导航栏</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> size <span class="operator">=</span> <span class="type">CGSize</span>(width: <span class="number">40</span>, height: <span class="number">40</span>)</span><br><span class="line">        <span class="keyword">let</span> historyItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>.createItem(ImageName: <span class="string">&quot;image_my_history&quot;</span>, highImageName: <span class="string">&quot;Image_my_history_click&quot;</span>, size:size)<span class="comment">//搜索历史Item</span></span><br><span class="line">        <span class="keyword">let</span> searchItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>.createItem(ImageName: <span class="string">&quot;btn_search&quot;</span>, highImageName: <span class="string">&quot;btn_search_clicked&quot;</span>, size: size)  <span class="comment">//搜索Item</span></span><br><span class="line">        <span class="keyword">let</span> qrcodeItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>.createItem(ImageName: <span class="string">&quot;Image_scan&quot;</span>, highImageName: <span class="string">&quot;Image_scan_click&quot;</span>, size: size)  <span class="comment">//二维码Item </span></span><br><span class="line">        navigationItem.rightBarButtonItems <span class="operator">=</span> [historyItem, searchItem, qrcodeItem]<span class="comment">//设置数组</span></span><br></pre></td></tr></table></figure><p>以上是类方法，但不太好，我们</p><h4 id="改用构造函数init-，构造函数不需要写返回值"><a href="#改用构造函数init-，构造函数不需要写返回值" class="headerlink" title="改用构造函数init()，构造函数不需要写返回值"></a>改用构造函数<strong>init</strong>()，构造函数不需要写返回值</h4><p>修改UIBarButtonItem-Extension.swift 代码</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">convenience</span> <span class="function"><span class="keyword">init</span>(<span class="params">ImageName</span> : <span class="type">String</span>, <span class="params">highImageName</span> : <span class="type">String</span>, <span class="params">size</span> : <span class="type">CGSize</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> btn <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">    btn.setImage(<span class="type">UIImage</span>(named: <span class="type">ImageName</span>), for: .normal)</span><br><span class="line">    btn.setImage(<span class="type">UIImage</span>(named: <span class="type">ImageName</span>), for: .highlighted)</span><br><span class="line">    btn.frame <span class="operator">=</span> <span class="type">CGRect</span>(origin: <span class="type">CGPoint</span>.zero, size: size)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.<span class="keyword">init</span>(customView : btn)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201223003721088.png" alt="image-20201223003721088" style="zoom:33%;"><p>修改HomeVC如下</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> size <span class="operator">=</span> <span class="type">CGSize</span>(width: <span class="number">40</span>, height: <span class="number">40</span>)</span><br><span class="line"><span class="keyword">let</span> historyItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(ImageName: <span class="string">&quot;image_my_history&quot;</span>, highImageName: <span class="string">&quot;Image_my_history_click&quot;</span>, size: size)<span class="comment">//搜索历史Item</span></span><br><span class="line"><span class="keyword">let</span> searchItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(ImageName: <span class="string">&quot;btn_search&quot;</span>, highImageName: <span class="string">&quot;btn_search_clicked&quot;</span>, size: size)<span class="comment">//搜索Item</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> qrcodeItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(ImageName: <span class="string">&quot;Image_scan&quot;</span>, highImageName: <span class="string">&quot;Image_scan_click&quot;</span>, size: size)<span class="comment">//二维码Item</span></span><br><span class="line"></span><br><span class="line">navigationItem.rightBarButtonItems <span class="operator">=</span> [historyItem, searchItem, qrcodeItem]<span class="comment">//设置数组</span></span><br></pre></td></tr></table></figure><p>同时把左侧的也抽取进行</p><p>因为只需要传一个logo,可以使用默认参数</p><p>UIBarButtonItem-Extension.swift 里</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">convenience</span> <span class="function"><span class="keyword">init</span>(<span class="params">ImageName</span> : <span class="type">String</span>, <span class="params">highImageName</span> : <span class="type">String</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>, <span class="params">size</span> : <span class="type">CGSize</span> <span class="operator">=</span> <span class="type">CGSize</span>.zero)</span></span><br></pre></td></tr></table></figure><p>添加条件语句</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">convenience</span> <span class="function"><span class="keyword">init</span>(<span class="params">ImageName</span> : <span class="type">String</span>, <span class="params">highImageName</span> : <span class="type">String</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>, <span class="params">size</span> : <span class="type">CGSize</span> <span class="operator">=</span> <span class="type">CGSize</span>.zero)</span> &#123;</span><br><span class="line">        <span class="comment">//1.创建UIButton</span></span><br><span class="line">        <span class="keyword">let</span> btn <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">        btn.setImage(<span class="type">UIImage</span>(named: <span class="type">ImageName</span>), for: .normal)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//2.设置btn图片</span></span><br><span class="line">        <span class="keyword">if</span> highImageName <span class="operator">!=</span> <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">            btn.setImage(<span class="type">UIImage</span>(named: <span class="type">ImageName</span>), for: .highlighted)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//3.设置btn尺寸</span></span><br><span class="line">        <span class="keyword">if</span> size <span class="operator">==</span> <span class="type">CGSize</span>.zero &#123;</span><br><span class="line">            btn.sizeToFit()</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            btn.frame <span class="operator">=</span> <span class="type">CGRect</span>(origin: <span class="type">CGPoint</span>.zero, size: size)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//4.创建UIbarbuttonItem</span></span><br><span class="line">        <span class="keyword">self</span>.<span class="keyword">init</span>(customView : btn)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>同时修改home VC代码后前对比</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201223005759321.png" alt="image-20201223005759321" style="zoom:50%;"><h3 id="导航栏的总结"><a href="#导航栏的总结" class="headerlink" title="导航栏的总结"></a>导航栏的总结</h3><h4 id="在扩展里UIBarButtonItem-Extension使用构造函数init"><a href="#在扩展里UIBarButtonItem-Extension使用构造函数init" class="headerlink" title="在扩展里UIBarButtonItem-Extension使用构造函数init"></a>在扩展里UIBarButtonItem-Extension使用构造函数<strong>init</strong></h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UIBarButtonItem</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 便利构造函数: 1&gt; convenience开头 2&gt; 在构造函数中必须明确调用一个设计的构造函数(self)</span></span><br><span class="line">    <span class="keyword">convenience</span> <span class="function"><span class="keyword">init</span>(<span class="params">ImageName</span> : <span class="type">String</span>, <span class="params">highImageName</span> : <span class="type">String</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>, <span class="params">size</span> : <span class="type">CGSize</span> <span class="operator">=</span> <span class="type">CGSize</span>.zero)</span> &#123;</span><br><span class="line">        <span class="comment">//1.创建UIButton</span></span><br><span class="line">        <span class="keyword">let</span> btn <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">        btn.setImage(<span class="type">UIImage</span>(named: <span class="type">ImageName</span>), for: .normal)  </span><br><span class="line">        <span class="comment">//2.设置btn图片</span></span><br><span class="line">        <span class="keyword">if</span> highImageName <span class="operator">!=</span> <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">            btn.setImage(<span class="type">UIImage</span>(named: <span class="type">ImageName</span>), for: .highlighted)</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="comment">//3.设置btn尺寸</span></span><br><span class="line">        <span class="keyword">if</span> size <span class="operator">==</span> <span class="type">CGSize</span>.zero &#123;</span><br><span class="line">            btn.sizeToFit()</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            btn.frame <span class="operator">=</span> <span class="type">CGRect</span>(origin: <span class="type">CGPoint</span>.zero, size: size)</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="comment">//4.创建UIbarbuttonItem</span></span><br><span class="line">        <span class="keyword">self</span>.<span class="keyword">init</span>(customView : btn)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在视图控制器处，设置导航栏"><a href="#在视图控制器处，设置导航栏" class="headerlink" title="在视图控制器处，设置导航栏"></a>在视图控制器处，设置导航栏</h4><p>添加<strong>extension</strong>然后分别设置左右导航栏样式,设置数组，给其添加上</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Mark:-设置UI界面</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">HomeViewController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">SetupUI</span>()</span> &#123;</span><br><span class="line"><span class="comment">//        1.设置导航栏</span></span><br><span class="line">        setupNavigationBar()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">setupNavigationBar</span>()</span>&#123;</span><br><span class="line"><span class="comment">//        1.设置左侧导航栏</span></span><br><span class="line">        navigationItem.leftBarButtonItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(ImageName:<span class="string">&quot;logo&quot;</span> )<span class="comment">//customView自定义button</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">//        2.设置右侧导航栏      </span></span><br><span class="line">        <span class="keyword">let</span> size <span class="operator">=</span> <span class="type">CGSize</span>(width: <span class="number">40</span>, height: <span class="number">40</span>)</span><br><span class="line">        <span class="keyword">let</span> historyItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(ImageName: <span class="string">&quot;image_my_history&quot;</span>, highImageName: <span class="string">&quot;Image_my_history_click&quot;</span>, size: size)<span class="comment">//搜索历史Item</span></span><br><span class="line">        <span class="keyword">let</span> searchItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(ImageName: <span class="string">&quot;btn_search&quot;</span>, highImageName: <span class="string">&quot;btn_search_clicked&quot;</span>, size: size)<span class="comment">//搜索Item</span></span><br><span class="line">        <span class="keyword">let</span> qrcodeItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(ImageName: <span class="string">&quot;Image_scan&quot;</span>, highImageName: <span class="string">&quot;Image_scan_click&quot;</span>, size: size)<span class="comment">//二维码Item</span></span><br><span class="line">        </span><br><span class="line">        navigationItem.rightBarButtonItems <span class="operator">=</span> [historyItem, searchItem, qrcodeItem]<span class="comment">//设置数组</span></span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="首页框架搭建"><a href="#首页框架搭建" class="headerlink" title="首页框架搭建"></a>首页框架搭建</h2><h3 id="对标题栏与下方内容进行封装"><a href="#对标题栏与下方内容进行封装" class="headerlink" title="对标题栏与下方内容进行封装"></a>对标题栏与下方内容进行封装</h3><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/IMG_F2A62D563CE9-1.jpeg" alt="IMG_F2A62D563CE9-1" style="zoom:50%;"><p>标题栏的封装</p><p>标题栏用lable来做，监听手势点击，内容用UIconnetionView进行封装，</p><h4 id="封装PageTitleView（标签栏）"><a href="#封装PageTitleView（标签栏）" class="headerlink" title="封装PageTitleView（标签栏）"></a>封装PageTitleView（标签栏）</h4><ul><li><p>在view新建PageTitleView.swift</p></li><li><p>封装构造函数，让别人在创建对象时，就传入真实需要显示的内容</p><ul><li>frame：创建对象时确定了frame就可以直接设置子控件的位置和尺寸</li><li>titles：显示的所有标题</li></ul></li></ul><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201223095739279.png" alt="image-20201223095739279" style="zoom: 33%;"><h5 id="抽取常量"><a href="#抽取常量" class="headerlink" title="抽取常量"></a>抽取常量</h5><p>在Extension新建Common.swift，并修改为以下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line">let KStatusBarH: CGFloat = 20 //状态栏高度</span><br><span class="line">let kNavigationBarH: CGFloat = 44</span><br><span class="line">let kScreenW = UIScreen.main.bounds.width//屏幕的宽度</span><br><span class="line">let kScreenH = UIScreen.main.bounds.height//屏幕的高度</span><br></pre></td></tr></table></figure><p>在homevc添加代码，并添加到视图界面</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201223104540169.png" alt="image-20201223104540169" style="zoom: 33%;"><p>主要添加代码如下</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">let</span> <span class="type">KTitleViewH</span> : <span class="type">CGFloat</span> <span class="operator">=</span> <span class="number">40</span>  <span class="comment">//屏幕高度40</span></span><br><span class="line"><span class="comment">//  Mark:-懒加载属性</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lazy</span> <span class="keyword">var</span> pageTitleView : <span class="type">PageTitleView</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> titleFrame <span class="operator">=</span> <span class="type">CGRect</span>(x: <span class="number">0</span>, y:<span class="type">KStatusBarH</span> <span class="operator">+</span> kNavigationBarH , width:kScreenW, height: <span class="type">KTitleViewH</span>)<span class="comment">//导航栏位置的设置</span></span><br><span class="line">        <span class="keyword">let</span> titles <span class="operator">=</span> [<span class="string">&quot;推荐&quot;</span>,<span class="string">&quot;游戏&quot;</span>,<span class="string">&quot;娱乐&quot;</span>,<span class="string">&quot;趣玩&quot;</span>]</span><br><span class="line">        <span class="keyword">let</span> titleView <span class="operator">=</span> <span class="type">PageTitleView</span>(frame: titleFrame, titles: titles)</span><br><span class="line">        titleView.backgroundColor <span class="operator">=</span> <span class="type">UIColor</span>.purple</span><br><span class="line">        <span class="keyword">return</span> titleView</span><br><span class="line">        </span><br><span class="line">    &#125;()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view.addSubview(pageTitleView)</span><br></pre></td></tr></table></figure><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/IMG_A737A89F44B3-1.jpeg" alt="IMG_A737A89F44B3-1" style="zoom:50%;"><h3 id="添加UIscrollView"><a href="#添加UIscrollView" class="headerlink" title="添加UIscrollView"></a>添加UIscrollView</h3><p>在PageTitleView.swift，添加scrollView懒加载，然后添加到视图</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201223111112774.png" alt="image-20201223111112774" style="zoom: 33%;"><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MARk: - 懒加载属性    </span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">lazy</span> <span class="keyword">var</span> scrollView : <span class="type">UIScrollView</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> scrollView <span class="operator">=</span> <span class="type">UIScrollView</span>()</span><br><span class="line">        scrollView.showsHorizontalScrollIndicator <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        scrollView.scrollsToTop <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        scrollView.bounces <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        <span class="keyword">return</span> scrollView</span><br><span class="line">    &#125;()</span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MARk: - 设置UI界面</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">PageTitleView</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">setupUI</span>()</span> &#123;</span><br><span class="line"><span class="comment">//        1.添加UIscrollView</span></span><br><span class="line">        addSubview(scrollView)</span><br><span class="line">        scrollView.frame <span class="operator">=</span> bounds</span><br><span class="line"><span class="comment">//        2.添加title对应的label</span></span><br><span class="line">              setupTitleLabels()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>lable的设置，继续添加代码</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201223114120598.png" alt="image-20201223114120598"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527152906864.png" alt="image-20210527152906864"></p><p>代码如下：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">let</span> kScrollLineH : <span class="type">CGFloat</span> <span class="operator">=</span> <span class="number">2</span> <span class="comment">//滚动条高度</span></span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">setupTitleLabels</span>()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (index, title) <span class="keyword">in</span> titles.enumerated() &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 0.确定label的一些frame的值</span></span><br><span class="line">        <span class="keyword">let</span> labelW : <span class="type">CGFloat</span> <span class="operator">=</span> frame.width <span class="operator">/</span> <span class="type">CGFloat</span>(titles.count)</span><br><span class="line">        <span class="keyword">let</span> labelH : <span class="type">CGFloat</span> <span class="operator">=</span> frame.height <span class="operator">-</span> kScrollLineH</span><br><span class="line">        <span class="keyword">let</span> labelY : <span class="type">CGFloat</span> <span class="operator">=</span> <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 1.创建UILabel</span></span><br><span class="line">        <span class="keyword">let</span> label <span class="operator">=</span> <span class="type">UILabel</span>()</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 2.设置Label的属性</span></span><br><span class="line">        label.text <span class="operator">=</span> title</span><br><span class="line">        label.tag <span class="operator">=</span> index</span><br><span class="line">        label.font <span class="operator">=</span> <span class="type">UIFont</span>.systemFont(ofSize: <span class="number">16.0</span>)<span class="comment">//默认字体大小17</span></span><br><span class="line">        label.textColor <span class="operator">=</span> <span class="type">UIColor</span>.darkGray<span class="comment">//默认文字颜色</span></span><br><span class="line">        label.textAlignment <span class="operator">=</span> .center</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 3.设置label的frame</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> labelX : <span class="type">CGFloat</span> <span class="operator">=</span> labelW <span class="operator">*</span> <span class="type">CGFloat</span>(index)</span><br><span class="line">        label.frame <span class="operator">=</span> <span class="type">CGRect</span>(x: labelX, y: labelY, width: labelW, height: labelH)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 4.将label添加到scrollView中</span></span><br><span class="line">        scrollView.addSubview(label)</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>回调home VC，不需要调整UIScrollView的内边距</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201223114538296.png" alt="image-20201223114538296" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">automaticallyAdjustsScrollViewInsets = **false**</span><br></pre></td></tr></table></figure><p>PageTitleView.swift里添加  setupUI()到构造函数内</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MARk: - 自定义构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">init</span>(<span class="params">frame</span>: <span class="type">CGRect</span>, <span class="params">titles</span> : [<span class="type">String</span>])</span> &#123;</span><br><span class="line">    <span class="keyword">self</span>.titles <span class="operator">=</span> titles</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">super</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置UI界面</span></span><br><span class="line">    setupUI() <span class="comment">//----------添加此行</span></span><br></pre></td></tr></table></figure><p>运行项目</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527153022489.png" alt="image-20210527153022489"></p><p>在homeVC删掉 ，去掉紫色</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201224154532416.png" alt="image-20201224154532416" style="zoom: 33%;"><h5 id="加滚动条和底部的线"><a href="#加滚动条和底部的线" class="headerlink" title="加滚动条和底部的线"></a>加滚动条和底部的线</h5><p>PageTitleView 懒加载创建滚动条，创建个UIlable的数组</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527153104970.png" alt="image-20210527153104970" style="zoom:50%;"><p>接着把lable添加到数组里面</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527153137678.png" alt="image-20210527153137678"></p><p>设置底线和滚动滑块</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210108143824450.png" alt="image-20210108143824450" style="zoom:50%;"><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MARk: - 设置UI界面</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">PageTitleView</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">setupUI</span>()</span> &#123;</span><br><span class="line"><span class="comment">//        1.添加UIscrollView</span></span><br><span class="line">        addSubview(scrollView)</span><br><span class="line">        scrollView.frame <span class="operator">=</span> bounds</span><br><span class="line"><span class="comment">//        2.添加title对应的label</span></span><br><span class="line">        setupTitleLabels()</span><br><span class="line">        <span class="comment">// 3.设置底线和滚动的滑块</span></span><br><span class="line">        setupBottomLineAndScrollLine()</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>添加UIScrollView ，加scrollLine方法，setupBottomLineAndScrollLine方法<img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527153332769.png" alt="image-20210527153332769"></p><p>  把字体的颜色也和下方一样</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201224215013619.png" alt="image-20201224215013619"></p><p>运行效果</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/IMG_99AF8C6FA944-1.jpeg" alt="IMG_99AF8C6FA944-1" style="zoom:67%;"><p>用的代码如下</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">lazy</span> <span class="keyword">var</span> titleLabels : [<span class="type">UILabel</span>] <span class="operator">=</span> [<span class="type">UILabel</span>]()</span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">lazy</span> <span class="keyword">var</span> scrollLine : <span class="type">UIView</span> <span class="operator">=</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> scrollLine <span class="operator">=</span> <span class="type">UIView</span>()</span><br><span class="line">    scrollLine.backgroundColor <span class="operator">=</span> <span class="type">UIColor</span>.orange</span><br><span class="line">    <span class="keyword">return</span> scrollLine</span><br><span class="line">&#125;()</span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fileprivate</span> <span class="function"><span class="keyword">func</span> <span class="title">setupBottomLineAndScrollLine</span>()</span> &#123;</span><br><span class="line">    <span class="comment">// 1.添加底线</span></span><br><span class="line">    <span class="keyword">let</span> bottomLine <span class="operator">=</span> <span class="type">UIView</span>()</span><br><span class="line">    bottomLine.backgroundColor <span class="operator">=</span> <span class="type">UIColor</span>.lightGray<span class="comment">//颜色</span></span><br><span class="line">    <span class="keyword">let</span> lineH : <span class="type">CGFloat</span> <span class="operator">=</span> <span class="number">0.5</span></span><br><span class="line">    bottomLine.frame <span class="operator">=</span> <span class="type">CGRect</span>(x: <span class="number">0</span>, y: frame.height <span class="operator">-</span> lineH, width: frame.width, height: lineH)</span><br><span class="line">    addSubview(bottomLine)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2.添加scrollLine</span></span><br><span class="line">    <span class="comment">// 2.1.获取第一个Label</span></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> firstLabel <span class="operator">=</span> titleLabels.first <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">    firstLabel.textColor <span class="operator">=</span> <span class="type">UIColor</span>.orange <span class="comment">//  把字体的颜色也和下方一样</span></span><br><span class="line">    <span class="comment">// 2.2.设置scrollLine的属性</span></span><br><span class="line">    scrollView.addSubview(scrollLine)</span><br><span class="line">    scrollLine.frame <span class="operator">=</span> <span class="type">CGRect</span>(x: firstLabel.frame.origin.x, y: frame.height <span class="operator">-</span> kScrollLineH, width: firstLabel.frame.width, height: kScrollLineH)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527155457748.png&quot; alt=&quot;image-20210527155457748&quot;&gt;&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Runtime消息发送机制</title>
    <link href="http://example.com/2020/04/22/iOS%E8%B0%83%E7%94%A8%E4%B8%80%E4%B8%AA%E6%96%B9%E6%B3%95%E6%97%B6/"/>
    <id>http://example.com/2020/04/22/iOS%E8%B0%83%E7%94%A8%E4%B8%80%E4%B8%AA%E6%96%B9%E6%B3%95%E6%97%B6/</id>
    <published>2020-04-22T04:49:00.000Z</published>
    <updated>2020-04-22T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Runtime消息发送机制"><a href="#Runtime消息发送机制" class="headerlink" title="Runtime消息发送机制"></a>Runtime消息发送机制</h2><p>1）iOS调用一个方法时，实际上会调用objc_msgSend(receiver, selector, arg1, arg2, …)，该方法第一个参数是消息接收者，第二个参数是方法名，剩下的参数是方法参数；<br>2）iOS调用一个方法时，会先去该类的方法缓存列表里面查找是否有该方法，如果有直接调用，否则走第3）步；<br>3）去该类的方法列表里面找，找到直接调用，把方法加入缓存列表；否则走第4）步；<br>4）沿着该类的继承链继续查找，找到直接调用，把方法加入缓存列表；否则消息转发流程；</p><p>如下图：</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514140320354.png" alt="image-20210514140320354"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Runtime消息发送机制&quot;&gt;&lt;a href=&quot;#Runtime消息发送机制&quot; class=&quot;headerlink&quot; title=&quot;Runtime消息发送机制&quot;&gt;&lt;/a&gt;Runtime消息发送机制&lt;/h2&gt;&lt;p&gt;1）iOS调用一个方法时，实际上会调用objc_ms</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>YYModel不能读取model类属性变量无法解析返回空解决</title>
    <link href="http://example.com/2020/03/14/%E5%88%9B%E5%BB%BAModel%E7%B1%BB%E6%97%B6%E5%B1%9E%E6%80%A7%E5%8F%98%E9%87%8F%E5%89%8D%E9%9C%80%E5%8A%A0-objc/"/>
    <id>http://example.com/2020/03/14/%E5%88%9B%E5%BB%BAModel%E7%B1%BB%E6%97%B6%E5%B1%9E%E6%80%A7%E5%8F%98%E9%87%8F%E5%89%8D%E9%9C%80%E5%8A%A0-objc/</id>
    <published>2020-03-14T05:45:45.000Z</published>
    <updated>2020-03-14T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用-Swift-创建Model类时属性变量前需加-objc-，否则-YYModel-将不能读取-model-类属性变量，即无法解析返回空。"><a href="#使用-Swift-创建Model类时属性变量前需加-objc-，否则-YYModel-将不能读取-model-类属性变量，即无法解析返回空。" class="headerlink" title="使用 Swift 创建Model类时属性变量前需加@objc ，否则 YYModel 将不能读取 model 类属性变量，即无法解析返回空。"></a>使用 Swift 创建Model类时属性变量前需加@objc ，否则 YYModel 将不能读取 model 类属性变量，即无法解析返回空。</h2><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514134704537.png" alt="image-20210514134704537"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;使用-Swift-创建Model类时属性变量前需加-objc-，否则-YYModel-将不能读取-model-类属性变量，即无法解析返回空。&quot;&gt;&lt;a href=&quot;#使用-Swift-创建Model类时属性变量前需加-objc-，否则-YYModel-将不能读取-m</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Swift闭包的参数改变</title>
    <link href="http://example.com/2020/02/14/Swift%E9%97%AD%E5%8C%85%E7%9A%84%E5%8F%82%E6%95%B0%E6%94%B9%E5%8F%98/"/>
    <id>http://example.com/2020/02/14/Swift%E9%97%AD%E5%8C%85%E7%9A%84%E5%8F%82%E6%95%B0%E6%94%B9%E5%8F%98/</id>
    <published>2020-02-14T05:49:59.000Z</published>
    <updated>2020-02-14T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514135106543.png" alt="image-20210514135106543"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514135106543.png&quot; alt=&quot;image-20210514135106543&quot;&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>swiftui初探（5）</title>
    <link href="http://example.com/2020/01/20/swiftui%E5%88%9D%E6%8E%A2%EF%BC%885%EF%BC%89/"/>
    <id>http://example.com/2020/01/20/swiftui%E5%88%9D%E6%8E%A2%EF%BC%885%EF%BC%89/</id>
    <published>2020-01-20T04:49:00.000Z</published>
    <updated>2021-02-22T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="窗体和控制"><a href="#窗体和控制" class="headerlink" title="窗体和控制"></a>窗体和控制</h2><p>新建Settings(SwiftUiView),为其设计样式</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514092208356.png" alt="image-20210514092208356"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">struct Settings: View &#123;</span><br><span class="line">    @State var reeive = false</span><br><span class="line">    @State var number = 1</span><br><span class="line">    @State var selection = 1</span><br><span class="line">    @State var date = Date()</span><br><span class="line">    </span><br><span class="line">    var body: some View &#123;</span><br><span class="line">        NavigationView &#123;</span><br><span class="line">            Form &#123;</span><br><span class="line">                Toggle(isOn: $reeive) &#123;</span><br><span class="line">                    Text(&quot;接收通知&quot;)</span><br><span class="line">                &#125;</span><br><span class="line">                Stepper(value: $number, in: 1...10) &#123;</span><br><span class="line">                    Text(&quot;\(number) Notification\(number &gt; 1 ? &quot;s&quot; : &quot;&quot;) per  week&quot;)</span><br><span class="line">                &#125;</span><br><span class="line">                Picker(selection: $selection, label: Text(&quot;最喜欢的课程&quot;)) &#123;</span><br><span class="line">                    Text(&quot;SwiftUI&quot;).tag(1)</span><br><span class="line">                    Text(&quot;React&quot;).tag(2)</span><br><span class="line">                &#125;</span><br><span class="line">                DatePicker(selection: $date, label: &#123;</span><br><span class="line">                    Text(&quot;日期&quot;)</span><br><span class="line">                    </span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">            .navigationBarTitle(&quot;设置&quot;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加你的邮件标签"><a href="#添加你的邮件标签" class="headerlink" title="添加你的邮件标签"></a>添加你的邮件标签</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514094314959.png" alt="image-20210514094314959"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@State var email = &quot;&quot;</span><br><span class="line"></span><br><span class="line">TextField(&quot;你的邮件&quot;, text: $email)</span><br><span class="line">                    .textFieldStyle(RoundedBorderTextFieldStyle())</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>TextField inside HStack然后改为Section，添加提交按钮</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203212130255.png" alt="image-20210203212130255"></p><h3 id="将设置添加到TabBar中"><a href="#将设置添加到TabBar中" class="headerlink" title="将设置添加到TabBar中"></a>将设置添加到TabBar中</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203212446653.png" alt="image-20210203212446653"></p><h3 id="修复左侧按钮"><a href="#修复左侧按钮" class="headerlink" title="修复左侧按钮"></a>修复左侧按钮</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203214205699.png" alt="image-20210203214205699"></p><h2 id="滚动动画"><a href="#滚动动画" class="headerlink" title="滚动动画"></a>滚动动画</h2><h3 id="CourseView-inside-HStack然后改为GeometryReader"><a href="#CourseView-inside-HStack然后改为GeometryReader" class="headerlink" title="CourseView inside HStack然后改为GeometryReader"></a>CourseView inside HStack然后改为GeometryReader</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203223956684.png" alt="image-20210203223956684"></p><h3 id="设置卡片动画并添加几张卡片"><a href="#设置卡片动画并添加几张卡片" class="headerlink" title="设置卡片动画并添加几张卡片"></a>设置卡片动画并添加几张卡片</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203225850886.png" alt="image-20210203225850886"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203225946633.png" alt="image-20210203225946633"></p><p> 新建CertificateRows(SwiftUiView),为其设计样式</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203230752697.png" alt="image-20210203230752697"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import SwiftUI</span><br><span class="line"></span><br><span class="line">struct CertificateRows: View &#123;</span><br><span class="line">    var body: some View &#123;</span><br><span class="line">        CertificateView()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">struct CertificateRows_Previews: PreviewProvider &#123;</span><br><span class="line">    static var previews: some View &#123;</span><br><span class="line">        CertificateRows()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">struct Certificate: Identifiable &#123;</span><br><span class="line">    var id = UUID()</span><br><span class="line">    var title: String</span><br><span class="line">    var image: String</span><br><span class="line">    var width: CGFloat</span><br><span class="line">    var height: CGFloat</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">let certificateData = [</span><br><span class="line">    Certificate(title: &quot;OC&quot;, image: &quot;Certificate1&quot;, width: 230, height: 150),</span><br><span class="line">    Certificate(title: &quot;Swift&quot;, image: &quot;Certificate2&quot;, width: 230, height: 150),</span><br><span class="line">    Certificate(title: &quot;Java&quot;, image: &quot;Certificate3&quot;, width: 230, height: 150),</span><br><span class="line">    Certificate(title: &quot;GO&quot;, image: &quot;Certificate4&quot;, width: 230, height: 150),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="设置数据，循环出现"><a href="#设置数据，循环出现" class="headerlink" title="设置数据，循环出现"></a>设置数据，循环出现</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203231007100.png" alt="image-20210203231007100"></p><h3 id="回去绑定数据"><a href="#回去绑定数据" class="headerlink" title="回去绑定数据"></a>回去绑定数据</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203232220207.png" alt="image-20210203232220207"></p><h3 id="设置卡片内图片大小"><a href="#设置卡片内图片大小" class="headerlink" title="设置卡片内图片大小"></a>设置卡片内图片大小</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203232706802.png" alt="image-20210203232706802"></p><h3 id="修改卡片样式，添加滚动视图"><a href="#修改卡片样式，添加滚动视图" class="headerlink" title="修改卡片样式，添加滚动视图"></a>修改卡片样式，添加滚动视图</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203233454078.png" alt="image-20210203233454078"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203233559826.png" alt="image-20210203233559826"></p><h3 id="到HomeList，把滚动视图添加上，调整下布局"><a href="#到HomeList，把滚动视图添加上，调整下布局" class="headerlink" title="到HomeList，把滚动视图添加上，调整下布局"></a>到HomeList，把滚动视图添加上，调整下布局</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204164006165.png" alt="image-20210204164006165"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204164030817.png" alt="image-20210204164030817"></p><h3 id="调整卡片布局"><a href="#调整卡片布局" class="headerlink" title="调整卡片布局"></a>调整卡片布局</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204164853286.png" alt="image-20210204164853286"></p><h2 id="iPad与小屏幕适配"><a href="#iPad与小屏幕适配" class="headerlink" title="iPad与小屏幕适配"></a>iPad与小屏幕适配</h2><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204172819307.png" alt="image-20210204172819307"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204172841134.png" alt="image-20210204172841134"></p><h3 id="按钮颜色适配与侧边栏"><a href="#按钮颜色适配与侧边栏" class="headerlink" title="按钮颜色适配与侧边栏"></a>按钮颜色适配与侧边栏</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204173903507.png" alt="image-20210204173903507"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204174015944.png" alt="image-20210204174015944"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204174057140.png" alt="image-20210204174057140"></p><p>顶部遮挡适配</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204180951736.png" alt="image-20210204180951736"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let statusBarHeight = UIApplication.shared.windows[0].windowScene?.statusBarManager?.statusBarFrame.height ?? 0</span><br><span class="line">let screen = UIScreen.main.bounds</span><br></pre></td></tr></table></figure><h3 id="修复铃声按钮打开是更新"><a href="#修复铃声按钮打开是更新" class="headerlink" title="修复铃声按钮打开是更新"></a>修复铃声按钮打开是更新</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204183207492.png" alt="image-20210204183207492"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    @State var showUpdate = false</span><br><span class="line"></span><br><span class="line">Button(action: &#123;</span><br><span class="line">                       self.showUpdate.toggle()</span><br><span class="line">                   </span><br><span class="line">               &#125;) &#123;</span><br><span class="line">                   CircleButton(icon: &quot;bell&quot;)</span><br><span class="line">               &#125;.sheet(isPresented: $showUpdate) &#123;</span><br><span class="line">                   UpdateList()</span><br><span class="line">               &#125;</span><br></pre></td></tr></table></figure><h3 id="左侧设置按钮的设置"><a href="#左侧设置按钮的设置" class="headerlink" title="左侧设置按钮的设置"></a>左侧设置按钮的设置</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514094249786.png" alt="image-20210514094249786"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">.foregroundColor(.primary)</span><br><span class="line"></span><br><span class="line">@State var showUpdate = false </span><br><span class="line">          </span><br><span class="line">          </span><br><span class="line">          </span><br><span class="line">          </span><br><span class="line">          if (item.title == &quot;设置&quot;) &#123;</span><br><span class="line">                        Button(action: &#123;</span><br><span class="line">                            self.showUpdate.toggle()</span><br><span class="line">                        &#125;) &#123;</span><br><span class="line">                            MenuRow(image: item.icon, text: item.title)</span><br><span class="line">                        &#125;.sheet(isPresented: self.$showUpdate) &#123;</span><br><span class="line">                            Settings()</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        MenuRow(image: item.icon, text: item.title)</span><br><span class="line">                    &#125;</span><br></pre></td></tr></table></figure><p>修改主页为home</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204190121377.png" alt="image-20210204190121377"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;窗体和控制&quot;&gt;&lt;a href=&quot;#窗体和控制&quot; class=&quot;headerlink&quot; title=&quot;窗体和控制&quot;&gt;&lt;/a&gt;窗体和控制&lt;/h2&gt;&lt;p&gt;新建Settings(SwiftUiView),为其设计样式&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gi</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>swiftui初探（4）</title>
    <link href="http://example.com/2020/01/19/swiftui%E5%88%9D%E6%8E%A2%EF%BC%884%EF%BC%89/"/>
    <id>http://example.com/2020/01/19/swiftui%E5%88%9D%E6%8E%A2%EF%BC%884%EF%BC%89/</id>
    <published>2020-01-19T04:49:00.000Z</published>
    <updated>2021-02-22T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="导航和传递数据"><a href="#导航和传递数据" class="headerlink" title="导航和传递数据"></a>导航和传递数据</h2><h3 id="VStack-inside-HStack"><a href="#VStack-inside-HStack" class="headerlink" title="VStack inside HStack"></a>VStack inside HStack</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202171506669.png" alt="image-20210202171506669" style="zoom:50%;"><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202173428207.png" alt="image-20210202173428207"></p><h3 id="显示添加图片"><a href="#显示添加图片" class="headerlink" title="显示添加图片"></a>显示添加图片</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202171506669.png" alt="image-20210202171506669" style="zoom:50%;"><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202173428207.png" alt="image-20210202173428207"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Image(item.image)</span><br><span class="line">     .resizable()</span><br><span class="line">     .aspectRatio(contentMode: .fit)//图片设置自适应不改变长款</span><br><span class="line">     .frame(width: 80, height: 80)</span><br><span class="line">     .background(Color(&quot;background&quot;))</span><br><span class="line">     .cornerRadius(20)</span><br></pre></td></tr></table></figure><h3 id="新建UpdateDetail-SwiftUiView-为其设计样式"><a href="#新建UpdateDetail-SwiftUiView-为其设计样式" class="headerlink" title="新建UpdateDetail(SwiftUiView),为其设计样式"></a>新建UpdateDetail(SwiftUiView),为其设计样式</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202174444547.png" alt="image-20210202174444547"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">struct UpdateDetail: View &#123;</span><br><span class="line">    var title = &quot;Swiftui&quot;</span><br><span class="line">    var text = &quot;Loading&quot;</span><br><span class="line">    var image = &quot;Illustration1&quot;</span><br><span class="line">    </span><br><span class="line">    var body: some View &#123;</span><br><span class="line">        VStack(spacing: 20.0) &#123;</span><br><span class="line">            Text(title)</span><br><span class="line">                .font(.largeTitle)</span><br><span class="line">                .fontWeight(.heavy)</span><br><span class="line">            </span><br><span class="line">            Image(image)</span><br><span class="line">                .resizable()</span><br><span class="line">                .aspectRatio(contentMode: .fit)</span><br><span class="line">                .frame(height: 200)</span><br><span class="line">            </span><br><span class="line">            Text(text)</span><br><span class="line">                .lineLimit(nil)</span><br><span class="line">            Spacer()</span><br><span class="line">        &#125;</span><br><span class="line">        .padding(30.0)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回到UpdateList，添加视图到点击<img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202181632454.png" alt="image-20210202181632454"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NavigationLink(destination: UpdateDetail(title: item.title, text: item.text, image: item.image)) </span><br></pre></td></tr></table></figure><h3 id="调整文字适应对齐"><a href="#调整文字适应对齐" class="headerlink" title="调整文字适应对齐"></a>调整文字适应对齐</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202183313954.png" alt="image-20210202183313954"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.frame(minWidth: 0, maxWidth:</span><br><span class="line">               .infinity, alignment: .leading)</span><br></pre></td></tr></table></figure><h2 id="合并和编辑数据"><a href="#合并和编辑数据" class="headerlink" title="合并和编辑数据"></a>合并和编辑数据</h2><h3 id="新建UpdateStore-SwiftUiView-为其设计样式"><a href="#新建UpdateStore-SwiftUiView-为其设计样式" class="headerlink" title="新建UpdateStore(SwiftUiView),为其设计样式"></a>新建UpdateStore(SwiftUiView),为其设计样式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import SwiftUI</span><br><span class="line">import Combine</span><br><span class="line"></span><br><span class="line">class UpdateStore: ObservableObject &#123;</span><br><span class="line">    let didChange = PassthroughSubject&lt;Void, Never&gt;()</span><br><span class="line">    </span><br><span class="line">    @Published var updates: [Update] &#123;</span><br><span class="line">        didSet &#123;</span><br><span class="line">            didChange.send()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    init(updates: [Update] = []) &#123;</span><br><span class="line">        self.updates = updates</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203141323725.png" alt="image-20210203141323725"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@ObservedObject var store = UpdateStore(updates: updateData)// 声明 UpdateStore 类对象</span><br></pre></td></tr></table></figure><h3 id="新建一个按钮，方便添加数据"><a href="#新建一个按钮，方便添加数据" class="headerlink" title="新建一个按钮，方便添加数据"></a>新建一个按钮，方便添加数据</h3><p>List inside VStack</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203154553673.png" alt="image-20210203154553673"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">func addUpdate() &#123;</span><br><span class="line">    store.updates.append(Update(image: &quot;Illustration1&quot;, title: &quot;落梅&quot;, text: &quot;这个女子，曾经走过人间四月，又与连开的夏季有过相濡以沫的约定&quot;, date: &quot;JUN 1&quot;))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">                Button(action: addUpdate) &#123;</span><br><span class="line">                Text(&quot;添加&quot;)</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h3 id="修改下布局"><a href="#修改下布局" class="headerlink" title="修改下布局"></a>修改下布局</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203154703311.png" alt="image-20210203154703311"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203155046293.png" alt="image-20210203155046293"></p><h3 id="添加删除按钮"><a href="#添加删除按钮" class="headerlink" title="添加删除按钮"></a>添加删除按钮</h3><h3 id><a href="#" class="headerlink" title></a><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203155741490.png" alt="image-20210203155741490"></h3><p>添加删除后排序方法与编辑按钮</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/Feb-03-2021%2016-09-42-2-20210514091333519.gif"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203160426320.png" alt="image-20210203160426320"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203160444308.png" alt="image-20210203160444308"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">func move(from source: IndexSet, to destination: Int) &#123;</span><br><span class="line">    store.updates.swapAt(source.first!, destination)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>给按钮添加样式</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203162206580.png" alt="image-20210203162206580"></p><h2 id="标签栏与测试"><a href="#标签栏与测试" class="headerlink" title="标签栏与测试"></a>标签栏与测试</h2><h3 id="新建TabBar-SwiftUiView-为其设计样式"><a href="#新建TabBar-SwiftUiView-为其设计样式" class="headerlink" title="新建TabBar(SwiftUiView),为其设计样式"></a>新建TabBar(SwiftUiView),为其设计样式</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203165630153.png" alt="image-20210203165630153"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">struct TabBar: View &#123;</span><br><span class="line">    @State var selectedView = 1</span><br><span class="line">    </span><br><span class="line">    var body: some View &#123;</span><br><span class="line">        TabView(selection: .constant(1)) &#123;</span><br><span class="line">            Home().tabItem &#123;</span><br><span class="line">                VStack &#123;</span><br><span class="line">                    Image(&quot;IconHome&quot;)</span><br><span class="line">                    Text(&quot;首页&quot;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            .tag(1)</span><br><span class="line">            ContentView().tabItem &#123;</span><br><span class="line">                VStack &#123;</span><br><span class="line">                    Image(&quot;IconCards&quot;)</span><br><span class="line">                    Text(&quot;证书&quot;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            .tag(2)</span><br><span class="line">            UpdateList().tabItem &#123;</span><br><span class="line">                VStack &#123;</span><br><span class="line">                    Image(&quot;IconSettings&quot;)</span><br><span class="line">                    Text(&quot;最新&quot;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            .tag(3)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改模拟器首页视图"><a href="#修改模拟器首页视图" class="headerlink" title="修改模拟器首页视图"></a>修改模拟器首页视图</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514091034806.png" alt="image-20210514091034806"></p><h2 id="暗黑模式和辅助功能（无障碍模式）"><a href="#暗黑模式和辅助功能（无障碍模式）" class="headerlink" title="暗黑模式和辅助功能（无障碍模式）"></a>暗黑模式和辅助功能（无障碍模式）</h2><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203184545098.png" alt="image-20210203184545098"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203184611447.png" alt="image-20210203184611447"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203184635336.png" alt="image-20210203184635336"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203184652566.png" alt="image-20210203184652566"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BlurView(style: .systemThinMaterial)</span><br><span class="line"></span><br><span class="line">.environment(\.colorScheme, .dark)</span><br><span class="line">.environment(\.sizeCategory, .extraExtraLarge)</span><br></pre></td></tr></table></figure><h3 id="TabBar-inside-HStack"><a href="#TabBar-inside-HStack" class="headerlink" title="TabBar() inside HStack"></a>TabBar() inside HStack</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203185623837.png" alt="image-20210203185623837"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;导航和传递数据&quot;&gt;&lt;a href=&quot;#导航和传递数据&quot; class=&quot;headerlink&quot; title=&quot;导航和传递数据&quot;&gt;&lt;/a&gt;导航和传递数据&lt;/h2&gt;&lt;h3 id=&quot;VStack-inside-HStack&quot;&gt;&lt;a href=&quot;#VStack-inside</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>swiftui初探（3）</title>
    <link href="http://example.com/2020/01/18/swiftui%E5%88%9D%E6%8E%A2%EF%BC%883%EF%BC%89/"/>
    <id>http://example.com/2020/01/18/swiftui%E5%88%9D%E6%8E%A2%EF%BC%883%EF%BC%89/</id>
    <published>2020-01-18T04:49:00.000Z</published>
    <updated>2021-02-22T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="滚动视图"><a href="#滚动视图" class="headerlink" title="滚动视图"></a>滚动视图</h2><h3 id="新建HomeList-swift-SwiftUiView-为其设计卡片样式"><a href="#新建HomeList-swift-SwiftUiView-为其设计卡片样式" class="headerlink" title="新建HomeList.swift(SwiftUiView),为其设计卡片样式"></a>新建HomeList.swift(SwiftUiView),为其设计卡片样式</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514085528334.png" alt="image-20210514085528334"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    var body: some View &#123;</span><br><span class="line">        VStack(alignment: .leading) &#123;</span><br><span class="line">            Text(&quot;设计一个应用非常棒&quot;)</span><br><span class="line">                .font(/*@START_MENU_TOKEN@*/.title/*@END_MENU_TOKEN@*/)</span><br><span class="line">                .fontWeight(/*@START_MENU_TOKEN@*/.bold/*@END_MENU_TOKEN@*/)</span><br><span class="line">                .foregroundColor(Color.white)</span><br><span class="line">                .padding(20)</span><br><span class="line">                .lineLimit(4)</span><br><span class="line">                .frame(width: 150)</span><br><span class="line">            Spacer()</span><br><span class="line">            Image(&quot;Illustration1&quot;)</span><br><span class="line">        &#125;</span><br><span class="line">        .background(Color(&quot;background3&quot;))</span><br><span class="line">        .cornerRadius(30)</span><br><span class="line">        .frame(width: 246, height: 360)</span><br><span class="line">        .shadow(color: Color(red: 0.27058823529411763, green: 0.23529411764705882, blue: 0.788235294117647, opacity: 0.3), radius: 20, x: 0, y: 20)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="将颜色3和颜色4复制处理为背景3和背景4，不透明30"><a href="#将颜色3和颜色4复制处理为背景3和背景4，不透明30" class="headerlink" title="将颜色3和颜色4复制处理为背景3和背景4，不透明30"></a>将颜色3和颜色4复制处理为背景3和背景4，不透明30</h3><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202113152709.png" alt="image-20210202113152709" style="zoom:50%;"><p>点击VStack,选择in HStack，然后提取子视图，点击VStack，subView为CourseView（）</p><p>点击VStack,选择repeat,重复3次</p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202120559746.png" alt="image-20210202120559746" style="zoom:50%;"><p>点击HStack,选择Group，改为ScrollView</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514085119337.png" alt="image-20210514085119337"></p><h3 id="滚动视图的设置"><a href="#滚动视图的设置" class="headerlink" title="滚动视图的设置"></a>滚动视图的设置</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202123458539.png" alt="image-20210202123458539"></p><h2 id="模态"><a href="#模态" class="headerlink" title="模态"></a>模态</h2><img src="https://gitee.com/zhu565615430/images/raw/master/imas/555-2.gif" alt="555-2" style="zoom:67%;"><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514085556160.png" alt="image-20210514085556160"><img src="/Users/zhuguanliang/Library/Application Support/typora-user-images/image-20210202135415951.png" alt="image-20210202135415951" style="zoom:50%;"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">@State var showContentView: Bool = false</span><br><span class="line">var body: some View &#123;</span><br><span class="line">    ScrollView(.horizontal, showsIndicators: false) &#123;</span><br><span class="line">        VStack &#123;</span><br><span class="line">            HStack &#123;</span><br><span class="line">                ForEach(0 ..&lt; 3) &#123; item in</span><br><span class="line">                    Button(action: &#123;</span><br><span class="line">                        self.showContentView = true</span><br><span class="line">                    &#125;) &#123;</span><br><span class="line">                        CourseView()</span><br><span class="line">                    &#125;.sheet(isPresented: self.$showContentView) &#123;</span><br><span class="line">                        ContentView()</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="创建数据模型"><a href="#创建数据模型" class="headerlink" title="创建数据模型"></a>创建数据模型</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514084651827.png" alt="image-20210514084651827"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">struct Courses: Identifiable &#123;</span><br><span class="line">    var id = UUID()</span><br><span class="line">    var title : String</span><br><span class="line">    var image : String</span><br><span class="line">    var backgroundColor: Color</span><br><span class="line">    var shadowColor : Color</span><br><span class="line">&#125;</span><br><span class="line">let CourseData = [</span><br><span class="line">    Courses(</span><br><span class="line">        title: &quot;设计一个非常棒应用&quot;,</span><br><span class="line">        image: &quot;Illustration1&quot;,</span><br><span class="line">        backgroundColor: Color(&quot;background3&quot;),</span><br><span class="line">        shadowColor: Color(&quot;backgroundShadow3&quot;)</span><br><span class="line">    ),</span><br><span class="line">    Courses(</span><br><span class="line">        title: &quot;课程设计&quot;,</span><br><span class="line">        image: &quot;Illustration2&quot;,</span><br><span class="line">        backgroundColor: Color(&quot;background4&quot;),</span><br><span class="line">        shadowColor: Color(&quot;backgroundShadow4&quot;)</span><br><span class="line">    )</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="使用数据模型"><a href="#使用数据模型" class="headerlink" title="使用数据模型"></a>使用数据模型</h3><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202140433327.png" alt="image-20210202140433327" style="zoom:50%;"><h3 id="绑定数据模型"><a href="#绑定数据模型" class="headerlink" title="绑定数据模型"></a>绑定数据模型</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514084742188.png" alt="image-20210514084742188"></p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202141423229.png" alt="image-20210202141423229" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">    var title = &quot;设计一个非常棒应用&quot;</span><br><span class="line">    var image : String = &quot;Illustration1&quot;</span><br><span class="line">    var color = Color(&quot;background3&quot;)</span><br><span class="line">    var shadowColor = Color(&quot;backgroundshadow3&quot;)</span><br><span class="line">    </span><br><span class="line">CourseView(title: item.title, image: item.image, color: item.backgroundColor, shadowColor: item.shadowColor)</span><br></pre></td></tr></table></figure><p>调整页面大小，调整文字大小一样适应</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202141840469.png" alt="image-20210202141840469"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202142336572.png" alt="image-20210202142336572"></p><h3 id="调整设计间距"><a href="#调整设计间距" class="headerlink" title="调整设计间距"></a>调整设计间距</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202142742256.png" alt="image-20210202142742256"></p><h2 id="模糊背景"><a href="#模糊背景" class="headerlink" title="模糊背景"></a>模糊背景</h2><h3 id="新建BlurView-swift-SwiftUiView-为其设计样式"><a href="#新建BlurView-swift-SwiftUiView-为其设计样式" class="headerlink" title="新建BlurView.swift(SwiftUiView),为其设计样式"></a>新建BlurView.swift(SwiftUiView),为其设计样式</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514084840096.png" alt="image-20210514084840096"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">struct BlurView: UIViewRepresentable &#123;</span><br><span class="line">    </span><br><span class="line">    let style: UIBlurEffect.Style</span><br><span class="line">    </span><br><span class="line">    func makeUIView(context: UIViewRepresentableContext&lt;BlurView&gt;) -&gt; UIView &#123;</span><br><span class="line">        let view = UIView(frame: .zero)</span><br><span class="line">        view.backgroundColor = .clear</span><br><span class="line">        let blurEffect = UIBlurEffect(style: style)</span><br><span class="line">        let blurView = UIVisualEffectView(effect: blurEffect)</span><br><span class="line">        blurView.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        view.insertSubview(blurView, at: 0)</span><br><span class="line">        NSLayoutConstraint.activate([</span><br><span class="line">            blurView.heightAnchor.constraint(equalTo: view.heightAnchor),</span><br><span class="line">            blurView.widthAnchor.constraint(equalTo: view.widthAnchor)</span><br><span class="line">        ])</span><br><span class="line">        return view</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    func updateUIView(_ uiView: UIView, context: UIViewRepresentableContext&lt;BlurView&gt;) &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回到ContentView中，使用模糊背景</p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202144315388.png" alt="image-20210202144315388" style="zoom:50%;"><p>回到ContentView中，将HomeList视图添加上去</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202151920190.png" alt="image-20210202151920190"></p><h3 id="重新设计布局"><a href="#重新设计布局" class="headerlink" title="重新设计布局"></a>重新设计布局</h3><p>标题在滚动视图之上</p><p>回到HomeList中，修改视图</p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202152207911.png" alt="image-20210202152207911" style="zoom:50%;"><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202154610027.png" alt="image-20210202154610027"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202154717118.png" alt="image-20210202154717118"></p><h3 id="添加模糊与动画效果"><a href="#添加模糊与动画效果" class="headerlink" title="添加模糊与动画效果"></a>添加模糊与动画效果</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203163000374.png" alt="image-20210203163000374"></p><h2 id="导航视图和列表"><a href="#导航视图和列表" class="headerlink" title="导航视图和列表"></a>导航视图和列表</h2><h3 id="新建UpdateList-swift-SwiftUiView-为其设计样式"><a href="#新建UpdateList-swift-SwiftUiView-为其设计样式" class="headerlink" title="新建UpdateList.swift(SwiftUiView),为其设计样式"></a>新建UpdateList.swift(SwiftUiView),为其设计样式</h3><p>从工具栏添加一个NavigationView，</p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202160320233.png" alt="image-20210202160320233" style="zoom: 33%;"><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202164959469.png" alt="image-20210202164959469" style="zoom:33%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">    @State var present = false</span><br><span class="line">    var body: some View &#123;</span><br><span class="line">        NavigationView &#123;</span><br><span class="line">                  List(0 ..&lt; 20) &#123; item in</span><br><span class="line">                      NavigationLink(destination: Text(&quot;1&quot;)) &#123;</span><br><span class="line">                        Text(&quot;Navigate 1&quot;) &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">                  .navigationBarTitle(Text(&quot;更新&quot;))</span><br><span class="line">                  .navigationBarItems(trailing:</span><br><span class="line">                     Button(action: &#123;</span><br><span class="line">                       self.present.toggle()</span><br><span class="line">                    &#125;) &#123;</span><br><span class="line">                         Image(systemName: &quot;gear&quot;)</span><br><span class="line">                    &#125;</span><br><span class="line">                    .sheet(isPresented: $present, content: &#123;</span><br><span class="line">                        Text(&quot;Settings&quot;)</span><br><span class="line">                    &#125;)</span><br><span class="line">                  )</span><br><span class="line">              &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在底部创建数据模型"><a href="#在底部创建数据模型" class="headerlink" title="在底部创建数据模型"></a>在底部创建数据模型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">struct Update: Identifiable &#123;</span><br><span class="line">    var id = UUID()</span><br><span class="line">    var image: String</span><br><span class="line">    var title: String</span><br><span class="line">    var text: String</span><br><span class="line">    var date: String</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">let updateDate = [</span><br><span class="line">    Update(image: &quot;Illustration1&quot;, title: &quot;swiftui&quot;, text: &quot;大家忽视覅偶尔回复而韩国is的hi多少个is多个收到货IGis个his读后感is多个hi韩国ID深V出魔抗VBUI欧盟是的归属感就是 属地化工is多个hi是个 是个hi第三帝国会死哦低功耗is电话公司工会&quot;, date: &quot;JUN 26&quot;),</span><br><span class="line">    Update(image: &quot;Illustration2&quot;, title: &quot;swiftui&quot;, text: &quot;大家忽视覅偶尔回复而韩国is的hi多少个is多个收到货IGis个his读后感is多个hi韩国ID深V出魔抗VBUI欧盟是的归属感就是 属地化工is多个hi是个 是个hi第三帝国会死哦低功耗is电话公司工会&quot;, date: &quot;JUN 26&quot;),</span><br><span class="line">    Update(image: &quot;Illustration3&quot;, title: &quot;swiftui&quot;, text: &quot;大家忽视覅偶尔回复而韩国is的hi多少个is多个收到货IGis个his读后感is多个hi韩国ID深V出魔抗VBUI欧盟是的归属感就是 属地化工is多个hi是个 是个hi第三帝国会死哦低功耗is电话公司工会&quot;, date: &quot;JUN 26&quot;),</span><br><span class="line">    Update(image: &quot;Illustration4&quot;, title: &quot;swiftui&quot;, text: &quot;大家忽视覅偶尔回复而韩国is的hi多少个is多个收到货IGis个his读后感is多个hi韩国ID深V出魔抗VBUI欧盟是的归属感就是 属地化工is多个hi是个 是个hi第三帝国会死哦低功耗is电话公司工会&quot;, date: &quot;JUN 26&quot;),</span><br><span class="line">    Update(image: &quot;Certificate1&quot;, title: &quot;swiftui&quot;, text: &quot;大家忽视覅偶尔回复而韩国is的hi多少个is多个收到货IGis个his读后感is多个hi韩国ID深V出魔抗VBUI欧盟是的归属感就是 属地化工is多个hi是个 是个hi第三帝国会死哦低功耗is电话公司工会&quot;, date: &quot;JUN 26&quot;),</span><br><span class="line">    Update(image: &quot;Certificate2&quot;, title: &quot;swiftui&quot;, text: &quot;大家忽视覅偶尔回复而韩国is的hi多少个is多个收到货IGis个his读后感is多个hi韩国ID深V出魔抗VBUI欧盟是的归属感就是 属地化工is多个hi是个 是个hi第三帝国会死哦低功耗is电话公司工会&quot;, date: &quot;JUN 26&quot;),</span><br><span class="line">    Update(image: &quot;Certificate3&quot;, title: &quot;swiftui&quot;, text: &quot;大家忽视覅偶尔回复而韩国is的hi多少个is多个收到货IGis个his读后感is多个hi韩国ID深V出魔抗VBUI欧盟是的归属感就是 属地化工is多个hi是个 是个hi第三帝国会死哦低功耗is电话公司工会&quot;, date: &quot;JUN 26&quot;),</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="显示数据"><a href="#显示数据" class="headerlink" title="显示数据"></a>显示数据</h3><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202171235647.png" alt="image-20210202171235647" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">var updates = updateDate</span><br><span class="line"></span><br><span class="line">@State var present = false</span><br><span class="line">var body: some View &#123;</span><br><span class="line">    NavigationView &#123;</span><br><span class="line">              List(updates) &#123; item in</span><br><span class="line">                  NavigationLink(destination: Text(&quot;1&quot;)) &#123;</span><br><span class="line">                    VStack(alignment: .leading) &#123;</span><br><span class="line">                        Text(item.title)</span><br><span class="line">                            .font(.headline)</span><br><span class="line">                        Text(item.text)</span><br><span class="line">                            .lineLimit(/*@START_MENU_TOKEN@*/2/*@END_MENU_TOKEN@*/)</span><br><span class="line">                            .lineSpacing(4)</span><br><span class="line">                            .font(.subheadline)</span><br><span class="line">                            .frame(height: 50.0)</span><br><span class="line">                        </span><br><span class="line">                        Text(item.date)</span><br><span class="line">                            .font(.caption)</span><br><span class="line">                            .fontWeight(.bold)</span><br><span class="line">                            .foregroundColor(Color.gray)</span><br><span class="line">                            </span><br><span class="line">                    &#125;</span><br><span class="line">                    </span><br><span class="line">                  &#125;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202171527102.png" alt="image-20210202171527102" style="zoom: 33%;">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;滚动视图&quot;&gt;&lt;a href=&quot;#滚动视图&quot; class=&quot;headerlink&quot; title=&quot;滚动视图&quot;&gt;&lt;/a&gt;滚动视图&lt;/h2&gt;&lt;h3 id=&quot;新建HomeList-swift-SwiftUiView-为其设计卡片样式&quot;&gt;&lt;a href=&quot;#新建HomeLi</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>swiftui初探（2）</title>
    <link href="http://example.com/2020/01/17/swiftui%E5%88%9D%E6%8E%A2%EF%BC%882%EF%BC%89/"/>
    <id>http://example.com/2020/01/17/swiftui%E5%88%9D%E6%8E%A2%EF%BC%882%EF%BC%89/</id>
    <published>2020-01-17T04:49:00.000Z</published>
    <updated>2020-01-18T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建侧边菜单栏"><a href="#创建侧边菜单栏" class="headerlink" title="创建侧边菜单栏"></a>创建侧边菜单栏</h2><h3 id="新建Home（SwiftUIView），添加我的账户标题与图片"><a href="#新建Home（SwiftUIView），添加我的账户标题与图片" class="headerlink" title="新建Home（SwiftUIView），添加我的账户标题与图片"></a>新建Home（SwiftUIView），添加我的账户标题与图片</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201233226589.png" alt="image-20210201233226589"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">        VStack &#123;</span><br><span class="line">            HStack &#123;</span><br><span class="line">                Image(systemName: &quot;creditcard&quot;)</span><br><span class="line">                    .imageScale(.large)</span><br><span class="line">                    .foregroundColor(Color(&quot;icons&quot;))</span><br><span class="line">                    .frame(width: 32, height: 32)</span><br><span class="line">                Text(&quot;我的账户&quot;)</span><br><span class="line">                    .font(.headline)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201233322123.png" alt="image-20210201233322123"></p><h3 id="添加完整四个标签"><a href="#添加完整四个标签" class="headerlink" title="添加完整四个标签"></a>添加完整四个标签</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201234418862.png" alt="image-20210201234418862"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">import SwiftUI</span><br><span class="line"></span><br><span class="line">struct Home: View &#123;</span><br><span class="line">    var body: some View &#123;</span><br><span class="line">        VStack(alignment: .leading) &#123;</span><br><span class="line">            MenuRow(image: &quot;person.crop.circle&quot;, text: &quot;我的账户&quot;)</span><br><span class="line">            MenuRow(image: &quot;creditcard&quot;, text: &quot;记账&quot;)</span><br><span class="line">            MenuRow(image: &quot;person.and.person&quot;, text: &quot;团队&quot;)</span><br><span class="line">            MenuRow(image: &quot;arrow.uturn.down&quot;, text: &quot;退出&quot;)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">struct Home_Previews: PreviewProvider &#123;</span><br><span class="line">    static var previews: some View &#123;</span><br><span class="line">        Home()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">struct MenuRow: View &#123;</span><br><span class="line">    var image = &quot;creditcard&quot;</span><br><span class="line">    var text = &quot;我的账户&quot;</span><br><span class="line">    var body: some View &#123;</span><br><span class="line">        HStack &#123;</span><br><span class="line">            Image(systemName: image)</span><br><span class="line">                .imageScale(.large)</span><br><span class="line">                .foregroundColor(Color(&quot;icons&quot;))</span><br><span class="line">                .frame(width: 32, height: 32)</span><br><span class="line">            Text(text)</span><br><span class="line">                .font(.headline)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="靠左处理"><a href="#靠左处理" class="headerlink" title="靠左处理"></a>靠左处理</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201235203766.png" alt="image-20210201235203766"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">VStack(alignment: .leading , spacing : 20) &#123;</span><br><span class="line">    MenuRow(image: &quot;person.crop.circle&quot;, text: &quot;我的账户&quot;)</span><br><span class="line">    MenuRow(image: &quot;creditcard&quot;, text: &quot;记账&quot;)</span><br><span class="line">    MenuRow(image: &quot;person.and.person&quot;, text: &quot;团队&quot;)</span><br><span class="line">    MenuRow(image: &quot;arrow.uturn.down&quot;, text: &quot;退出&quot;)</span><br><span class="line">    Spacer()</span><br><span class="line">&#125;</span><br><span class="line">.padding(.top, 20)//顶边添加20</span><br><span class="line">.padding(30)//边距30</span><br><span class="line">.frame(minWidth: 0, maxWidth: .infinity)</span><br><span class="line">.background(Color.white)</span><br><span class="line">.cornerRadius(30)</span><br><span class="line">.padding(.trailing, 60)//左边缘处理</span><br><span class="line">.shadow(radius: 20)</span><br></pre></td></tr></table></figure><h3 id="左对齐"><a href="#左对齐" class="headerlink" title="左对齐"></a>左对齐</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514082157862.png" alt="image-20210514082157862"></p><h2 id="使用数据创建列表"><a href="#使用数据创建列表" class="headerlink" title="使用数据创建列表"></a>使用数据创建列表</h2><h3 id="使用数组创建模型对象"><a href="#使用数组创建模型对象" class="headerlink" title="使用数组创建模型对象"></a>使用数组创建模型对象</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202000320367.png" alt="image-20210202000320367"></p><p>创建模型，进行拆分</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202001623021.png" alt="image-20210202001623021"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202001558218.png" alt="image-20210202001558218"></p><p>菜单动画与其绑定</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202001737567.png" alt="image-20210202001737567"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202003014167.png" alt="image-20210202003014167"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/Feb-02-2021%2000-31-19.gif" alt="Feb-02-2021 00-31-19" style="zoom:50%;"><img src="https://gitee.com/zhu565615430/images/raw/master/imas/Feb-02-2021%2000-37-38.gif" alt="Feb-02-2021 00-37-38" style="zoom:50%;"></p><h3 id="插入3d动画"><a href="#插入3d动画" class="headerlink" title="插入3d动画"></a>插入3d动画</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202003708338.png" alt="image-20210202003708338"></p><h3 id="将其变为MenuView（）"><a href="#将其变为MenuView（）" class="headerlink" title="将其变为MenuView（）"></a>将其变为MenuView（）</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202004014460.png" alt="image-20210202004014460"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202004855971.png" alt="image-20210202004855971"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202004914752.png" alt="image-20210202004914752"></p><h2 id="创建漂浮按钮"><a href="#创建漂浮按钮" class="headerlink" title="创建漂浮按钮"></a>创建漂浮按钮</h2><h3 id="创建按钮"><a href="#创建按钮" class="headerlink" title="创建按钮"></a>创建按钮</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202005904354.png" alt="image-20210202005904354"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514080743123.png" alt="image-20210514080743123"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">HStack &#123;</span><br><span class="line">    Spacer()</span><br><span class="line">    Image(systemName: &quot;list.dash&quot;)</span><br><span class="line">        .foregroundColor(.black)</span><br><span class="line">&#125;</span><br><span class="line">.padding(.trailing, 20)</span><br><span class="line">.frame(width: 90, height: 60, alignment: /*@START_MENU_TOKEN@*/.center/*@END_MENU_TOKEN@*/)</span><br><span class="line">.background(Color.white)</span><br><span class="line">.cornerRadius(30)</span><br><span class="line">.shadow(color:Color(&quot;buttonShadow&quot;), radius: 10, x: 0, y: 10)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202010054884.png" alt="image-20210202010054884"></p><h3 id="让按钮靠边栏"><a href="#让按钮靠边栏" class="headerlink" title="让按钮靠边栏"></a>让按钮靠边栏</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202011922525.png" alt="image-20210202011922525"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.frame(minWidth: 0, maxWidth: .infinity, minHeight: 0, maxHeight: .infinity, alignment: .topLeading)</span><br></pre></td></tr></table></figure><h3 id="将其变为CircleButton（）"><a href="#将其变为CircleButton（）" class="headerlink" title="将其变为CircleButton（）"></a>将其变为CircleButton（）</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202012031731.png" alt="image-20210202012031731"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202091035645.png" alt="image-20210202091035645"></p><p>提取变量</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202091324973.png" alt="image-20210202091324973"></p><p>第二个图标显示</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202091452735.png" alt="image-20210202091452735"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202091947984.png" alt="image-20210202091947984"></p><h3 id="将其变为MenuButton（）"><a href="#将其变为MenuButton（）" class="headerlink" title="将其变为MenuButton（）"></a>将其变为MenuButton（）</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202091920496.png" alt="image-20210202091920496"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202092209983.png" alt="image-20210202092209983"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202092531713.png" alt="image-20210202092531713"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202092708191.png" alt="image-20210202092708191"></p><p>移动到此与右边按钮修复</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202095552477.png" alt="image-20210202095552477"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202095745303.png" alt="image-20210202095745303"></p><p>将home带到主页</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202095914699.png" alt="image-20210202095914699"></p><h3 id="添加动画"><a href="#添加动画" class="headerlink" title="添加动画"></a>添加动画</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/Feb-02-2021%2010-57-52.gif" alt="Feb-02-2021 10-57-52"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202105633364.png" alt="image-20210202105633364"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;创建侧边菜单栏&quot;&gt;&lt;a href=&quot;#创建侧边菜单栏&quot; class=&quot;headerlink&quot; title=&quot;创建侧边菜单栏&quot;&gt;&lt;/a&gt;创建侧边菜单栏&lt;/h2&gt;&lt;h3 id=&quot;新建Home（SwiftUIView），添加我的账户标题与图片&quot;&gt;&lt;a href=&quot;#新建</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>swiftui初探（1）</title>
    <link href="http://example.com/2020/01/16/swiftui%E5%88%9D%E6%8E%A2%EF%BC%881%EF%BC%89/"/>
    <id>http://example.com/2020/01/16/swiftui%E5%88%9D%E6%8E%A2%EF%BC%881%EF%BC%89/</id>
    <published>2020-01-16T04:49:00.000Z</published>
    <updated>2020-01-18T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前言：在这系列文章你可以学到swiftUI</strong></p><h1 id="SWIFT——UI"><a href="#SWIFT——UI" class="headerlink" title="SWIFT——UI"></a>SWIFT——UI</h1><h2 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h2><h2 id><a href="#" class="headerlink" title></a><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210131004320381.png" alt="image-20210131004320381"></h2><h2 id="添加启动图片，和色彩背景等"><a href="#添加启动图片，和色彩背景等" class="headerlink" title="添加启动图片，和色彩背景等"></a>添加启动图片，和色彩背景等</h2><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514075504407.png" alt="image-20210514075504407"></p><h3 id="设置第一张卡片"><a href="#设置第一张卡片" class="headerlink" title="设置第一张卡片 "></a>设置第一张卡片 <img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514075711609.png" alt="image-20210514075711609"></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    var body: some View &#123;</span><br><span class="line">        VStack &#123;</span><br><span class="line">            VStack &#123;•</span><br><span class="line">                Text(&quot;UI 设计&quot;)</span><br><span class="line">                    .font(.title)</span><br><span class="line">                    .fontWeight(.bold)</span><br><span class="line">                    .foregroundColor(Color(&quot;accent&quot;))</span><br><span class="line">                    .padding(.top)</span><br><span class="line">                Text(/*@START_MENU_TOKEN@*/&quot;合格证书&quot;/*@END_MENU_TOKEN@*/)</span><br><span class="line">                    .foregroundColor(Color(.white))</span><br><span class="line">            &#125;</span><br><span class="line">            Image(&quot;Background&quot;)</span><br><span class="line">        &#125;</span><br><span class="line">        .background(Color.black).cornerRadius(10)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="布局和和堆栈"><a href="#布局和和堆栈" class="headerlink" title="布局和和堆栈"></a>布局和和堆栈</h3><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201001257114.png" style="zoom: 33%;"><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514000722734.png" alt="image-20210514000722734"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    HStack &#123;</span><br><span class="line">        VStack(alignment: .leading) &#123;•</span><br><span class="line">            Text(&quot;UI 设计&quot;)</span><br><span class="line">                .font(.title)</span><br><span class="line">                .fontWeight(.bold)</span><br><span class="line">                .foregroundColor(Color(&quot;accent&quot;))</span><br><span class="line">                .padding(.top)</span><br><span class="line">            Text(/*@START_MENU_TOKEN@*/&quot;合格证书&quot;/*@END_MENU_TOKEN@*/)</span><br><span class="line">                .foregroundColor(Color(.white))</span><br><span class="line">        &#125;</span><br><span class="line">        .padding(.horizontal)</span><br><span class="line">        Spacer()//推动到屏幕宽度</span><br><span class="line">        Image(&quot;Logo&quot;)</span><br><span class="line">            .resizable()</span><br><span class="line">            .frame(width: 30.0, height: 30.0)</span><br><span class="line">    &#125;</span><br><span class="line">    Image(&quot;Background&quot;)</span><br><span class="line">&#125;.frame(width: 340.0, height: 220.0)</span><br></pre></td></tr></table></figure><h3 id="设置第二章卡片"><a href="#设置第二章卡片" class="headerlink" title="设置第二章卡片"></a>设置第二章卡片</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201003759295.png" alt="image-20210201003759295"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201003830438.png" alt="image-20210201003830438"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">ZStack &#123;</span><br><span class="line">    </span><br><span class="line">    VStack &#123;</span><br><span class="line">        Text(&quot;背后的卡&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    .padding()</span><br><span class="line">    .frame(width: 300.0, height: 220.0)</span><br><span class="line">    .background(Color.blue)</span><br><span class="line">    .cornerRadius(10)</span><br><span class="line">    .shadow(radius: 20)</span><br><span class="line">    .offset(x: 0, y: -20)</span><br><span class="line"></span><br><span class="line">    VStack &#123;</span><br><span class="line">        HStack &#123;</span><br><span class="line">            VStack(alignment: .leading) &#123;•</span><br><span class="line">                Text(&quot;UI 设计&quot;)</span><br><span class="line">                    .font(.headline)</span><br><span class="line">                    .fontWeight(.bold)</span><br><span class="line">                    .foregroundColor(Color(&quot;accent&quot;))</span><br><span class="line">                    .padding(.top)</span><br><span class="line">                Text(/*@START_MENU_TOKEN@*/&quot;合格证书&quot;/*@END_MENU_TOKEN@*/)</span><br><span class="line">                    .foregroundColor(Color(.white))</span><br><span class="line">            &#125;</span><br><span class="line">            Spacer()//推动到屏幕宽度</span><br><span class="line">            Image(&quot;Logo&quot;)</span><br><span class="line">                .resizable()</span><br><span class="line">                .frame(width: 30.0, height: 30.0)</span><br><span class="line">        &#125;</span><br><span class="line">        .padding(.horizontal)</span><br><span class="line">        Spacer()</span><br><span class="line">        Image(&quot;Background&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    .frame(width: 340.0, height: 220.0)</span><br><span class="line">    .background(Color.black)</span><br><span class="line">    .cornerRadius(10)</span><br><span class="line">    .shadow(radius: 20)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514000805186.png" alt="image-20210514000805186"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514000824813.png" alt="image-20210514000824813"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/May-14-2021%2000-38-30.gif" alt="May-14-2021 00-38-30"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514003658268.png" alt="image-20210514003658268"></p><h3 id="添加标题，动画，图片"><a href="#添加标题，动画，图片" class="headerlink" title="添加标题，动画，图片"></a>添加标题，动画，图片</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    VStack &#123;</span><br><span class="line">        HStack &#123;</span><br><span class="line">            Text(&quot;合格证书&quot;)</span><br><span class="line">                .font(.largeTitle)</span><br><span class="line">                .fontWeight(.heavy)</span><br><span class="line">            Spacer()</span><br><span class="line">        &#125;</span><br><span class="line">        Image(&quot;Illustration5&quot;)</span><br><span class="line">        Spacer()</span><br><span class="line">    &#125;.padding()//边距</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    CardView()</span><br><span class="line">        .offset(x: 0, y: -40)</span><br><span class="line">        .scaleEffect(0.85)</span><br><span class="line">        .rotationEffect(Angle(degrees: 15))</span><br><span class="line">        .rotation3DEffect(Angle(degrees: 50), axis: /*@START_MENU_TOKEN@*/(x: 10.0, y: 10.0, z: 10.0)/*@END_MENU_TOKEN@*/)</span><br><span class="line">        .blendMode(.hardLight)</span><br><span class="line">    </span><br><span class="line">    CardView()</span><br><span class="line">        .offset(x: 0, y: -20)</span><br><span class="line">        .scaleEffect(0.9)</span><br><span class="line">        .rotationEffect(Angle(degrees: 10))</span><br><span class="line">        .rotation3DEffect(Angle(degrees: 40), axis: /*@START_MENU_TOKEN@*/(x: 10.0, y: 10.0, z: 10.0)/*@END_MENU_TOKEN@*/)</span><br><span class="line">        .blendMode(.hardLight)</span><br><span class="line">    </span><br><span class="line">    CertificateView()</span><br><span class="line">        .scaleEffect(0.95)</span><br><span class="line">        .rotationEffect(Angle(degrees: 5))</span><br><span class="line">        .rotation3DEffect(Angle(degrees: 30), axis: /*@START_MENU_TOKEN@*/(x: 10.0, y: 10.0, z: 10.0)/*@END_MENU_TOKEN@*/)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加正方形在中间"><a href="#添加正方形在中间" class="headerlink" title="添加正方形在中间"></a>添加正方形在中间</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201181352144.png" alt="image-20210201181352144"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">VStack(spacing: 20.0) &#123;</span><br><span class="line">     Rectangle()//添加正方形在中间</span><br><span class="line">         .frame(width: 60, height: 6)</span><br><span class="line">         .cornerRadius(30)</span><br><span class="line">         .opacity(0.1)//模糊度</span><br><span class="line">     Text(&quot;各个国家有各个国家的国歌，和某地的语言像极了鸟语。方言太多了，所以要统一语言，说出的话大家理解的都是同一份意思，这是小的，对于全球这么多国家，需要的是尊重各个国家的文化和历史，所以语言也是喽。&quot;)</span><br><span class="line">         .lineLimit(10)</span><br><span class="line">     Spacer()</span><br><span class="line"> &#125;</span><br><span class="line"> .padding()</span><br><span class="line"> .background(Color.blue)</span><br><span class="line"> .cornerRadius(30)</span><br></pre></td></tr></table></figure><h3 id="底部卡片向下移动"><a href="#底部卡片向下移动" class="headerlink" title="底部卡片向下移动"></a>底部卡片向下移动</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201184006996.png" alt="image-20210201184006996"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201184108062.png" alt="image-20210201184108062"></p><h3 id="并将新设置的给提到下面"><a href="#并将新设置的给提到下面" class="headerlink" title="并将新设置的给提到下面"></a>并将新设置的给提到下面</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201185543080.png" alt="image-20210201185543080" style="zoom:50%;"><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201184443568.png" alt="image-20210201184443568"></p><h2 id="设置动画效果"><a href="#设置动画效果" class="headerlink" title="设置动画效果"></a>设置动画效果</h2><h2 id="模糊效果"><a href="#模糊效果" class="headerlink" title="模糊效果"></a>模糊效果</h2><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201190055683.png" alt="image-20210201190055683"></p><h3 id="添加动画"><a href="#添加动画" class="headerlink" title="添加动画"></a>添加动画</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/1620924657941.GIF" alt="1620924657941"></p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201220556076.png" alt="image-20210201220556076" style="zoom: 33%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">    @State var show = false</span><br><span class="line">    </span><br><span class="line">    var body: some View &#123;</span><br><span class="line">        ZStack &#123;</span><br><span class="line">           TitleView()</span><br><span class="line">                .blur(radius: show ? 20 : 0)//模糊效果</span><br><span class="line">                .animation(.default)</span><br><span class="line">            </span><br><span class="line">            CarBottomView()</span><br><span class="line">                .blur(radius: show ? 20 : 0)//模糊效果</span><br><span class="line">                .animation(.default)</span><br><span class="line">            </span><br><span class="line">            CardView()</span><br><span class="line">                .offset(x: 0, y: show ? -400 : -40)</span><br><span class="line">                .scaleEffect(0.85)</span><br><span class="line">                .rotationEffect(Angle(degrees: show ? 15 : 0))</span><br><span class="line">                .rotation3DEffect(Angle(degrees: show ? 50 : 0), axis: /*@START_MENU_TOKEN@*/(x: 10.0, y: 10.0, z: 10.0)/*@END_MENU_TOKEN@*/)</span><br><span class="line">                .blendMode(.hardLight)</span><br><span class="line">                .animation(Animation.easeInOut(duration: 0.7))</span><br><span class="line">            </span><br><span class="line">            CardView()</span><br><span class="line">                .offset(x: 0, y: show ? -200 : -20)</span><br><span class="line">                .scaleEffect(0.9)</span><br><span class="line">                .rotationEffect(Angle(degrees: show ? 10 : 0))</span><br><span class="line">                .rotation3DEffect(Angle(degrees: show ? 40 : 0), axis: (x: 10.0, y: 10.0, z: 10.0))</span><br><span class="line">                .blendMode(.hardLight)</span><br><span class="line">                .animation(Animation.easeInOut(duration: 0.5))</span><br><span class="line">            </span><br><span class="line">            CertificateView()</span><br><span class="line">                .scaleEffect(0.95)</span><br><span class="line">                .rotationEffect(Angle(degrees: show ? 5 : 0))</span><br><span class="line">                .rotation3DEffect(Angle(degrees: show ? 30 : 0), axis: /*@START_MENU_TOKEN@*/(x: 10.0, y: 10.0, z: 10.0)/*@END_MENU_TOKEN@*/)</span><br><span class="line">                .animation(.spring())</span><br><span class="line">                .onTapGesture &#123;</span><br><span class="line">                    self.show.toggle()</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改后面卡片颜色"><a href="#修改后面卡片颜色" class="headerlink" title="修改后面卡片颜色"></a>修改后面卡片颜色<img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201222631717.png" style="zoom:50%;"></h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201222547399.png" alt="image-20210201222547399"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201222602417.png" alt="image-20210201222602417"></p><h2 id="手势和事件"><a href="#手势和事件" class="headerlink" title="手势和事件"></a>手势和事件</h2><h3 id="自由拖动第一张卡片"><a href="#自由拖动第一张卡片" class="headerlink" title="自由拖动第一张卡片"></a>自由拖动第一张卡片</h3><img src="https://gitee.com/zhu565615430/images/raw/master/imas/1620948619298.GIF" alt="1620948619298" style="zoom:150%;"><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201224606664.png" alt="image-20210201224606664"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@State var viewState = CGSize.zero</span><br><span class="line">    </span><br><span class="line">.offset(x: viewState.width, y: viewState.height)</span><br><span class="line"></span><br><span class="line">                .gesture(</span><br><span class="line">                    DragGesture()</span><br><span class="line">                        .onChanged(&#123; (Value) in</span><br><span class="line">                            self.viewState = Value.translation</span><br><span class="line">   </span><br><span class="line">                        &#125;)</span><br></pre></td></tr></table></figure><h3 id="卡片归位"><a href="#卡片归位" class="headerlink" title="卡片归位"></a>卡片归位</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201225305548.png"></p><h3 id="让三张卡片同时拖动"><a href="#让三张卡片同时拖动" class="headerlink" title="让三张卡片同时拖动"></a>让三张卡片同时拖动</h3><img src="https://gitee.com/zhu565615430/images/raw/master/imas/1620949756307.GIF" alt="1620949756307" style="zoom:150%;"><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514075108968.png" alt="image-20210514075108968" style="zoom:50%;"><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514075129554.png" alt="image-20210514075129554" style="zoom: 33%;">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;前言：在这系列文章你可以学到swiftUI&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;SWIFT——UI&quot;&gt;&lt;a href=&quot;#SWIFT——UI&quot; class=&quot;headerlink&quot; title=&quot;SWIFT——UI&quot;&gt;&lt;/a&gt;SWIFT——UI&lt;/h1</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>UIViewControllee的继承体系</title>
    <link href="http://example.com/2019/12/16/UIViewControllee%E7%9A%84%E7%BB%A7%E6%89%BF%E4%BD%93%E7%B3%BB/"/>
    <id>http://example.com/2019/12/16/UIViewControllee%E7%9A%84%E7%BB%A7%E6%89%BF%E4%BD%93%E7%B3%BB/</id>
    <published>2019-12-16T05:49:59.000Z</published>
    <updated>2019-12-16T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>UIViewControIIer作为视图控制器的父类，可以延伸出许多子视图控制器。下图为继承自UIViewControIIer的一些控制器组件，这些组件能够使应用程序的界面切换更加合理。目前，最流行的两种多视图控制器分别是导航控制器和标签页视图控制器。</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210518135653795.png" alt="image-20210518135653795"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;UIViewControIIer作为视图控制器的父类，可以延伸出许多子视图控制器。下图为继承自UIViewControIIer的一些控制器组件，这些组件能够使应用程序的界面切换更加合理。目前，最流行的两种多视图控制器分别是导航控制器和标签页视图控制器。&lt;/p&gt;
&lt;p&gt;&lt;im</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>UIView的继承体系</title>
    <link href="http://example.com/2019/12/16/UIView%E7%9A%84%E7%BB%A7%E6%89%BF%E4%BD%93%E7%B3%BB/"/>
    <id>http://example.com/2019/12/16/UIView%E7%9A%84%E7%BB%A7%E6%89%BF%E4%BD%93%E7%B3%BB/</id>
    <published>2019-12-16T05:49:59.000Z</published>
    <updated>2019-12-16T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>UIView继承体系中的类具有不同的层次关系。其中，UIView继承自UIResponder，它提供了许多子类，如表示标签的UILabeI、表示图片的UIImageView、表示可交互控件的UIControI等。同样，UIControI类也提供了很多子类，比如表示按钮的UIButton、表示文本框的UITextFieId等。</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210518134602203.png" alt="image-20210518134602203"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;UIView继承体系中的类具有不同的层次关系。其中，UIView继承自UIResponder，它提供了许多子类，如表示标签的UILabeI、表示图片的UIImageView、表示可交互控件的UIControI等。同样，UIControI类也提供了很多子类，比如表示按钮的UI</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>swift项目程序的启动原理</title>
    <link href="http://example.com/2019/12/15/swift%E9%A1%B9%E7%9B%AE%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%90%AF%E5%8A%A8%E5%8E%9F%E7%90%86/"/>
    <id>http://example.com/2019/12/15/swift%E9%A1%B9%E7%9B%AE%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%90%AF%E5%8A%A8%E5%8E%9F%E7%90%86/</id>
    <published>2019-12-15T05:12:58.000Z</published>
    <updated>2019-12-15T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="程序启动的原理"><a href="#程序启动的原理" class="headerlink" title="程序启动的原理"></a>程序启动的原理</h2><p>  当在OC创建的项目中，一定会有一个main.m文件，里面有一个main函数，可以在这个函数中启动App。但是在创建的Swift项目中，我们会发现，并没有名为main.swift的文件。因为Swift项目中添加了@UIAppIictationMain到Swift文件中，使得编译器默认生成了一个main函数，所以不需要main.swift文件。</p><p>启动的完整过程：</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210518121958533.png" alt="image-20210518121958533"></p><p>（1）Swift应用程序在打开时，@UIAppIictationMain会自动生成main函数。</p><p>（2）main函数会调用UIAppIicationMain，创建UIAppIication对象和UIAppIication的代理对象。</p><p>（3）启动项目，分为两种情况：</p><p>① 不使用storyboard时，代理对象开始监听系统事件，在程序启动完毕时，调用代理的appIication:didFinishLaunchingWithOptions：方法，在方法中创建UIWindow，并创建和设置UIWindow的rootViewControIIer，最后显示窗口。</p><p>② 使用storyboard时，会直接创建UIWindow，并创建UIWindow的rootViewControIIer，然后显示窗口。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;程序启动的原理&quot;&gt;&lt;a href=&quot;#程序启动的原理&quot; class=&quot;headerlink&quot; title=&quot;程序启动的原理&quot;&gt;&lt;/a&gt;程序启动的原理&lt;/h2&gt;&lt;p&gt;  当在OC创建的项目中，一定会有一个main.m文件，里面有一个main函数，可以在这个函数中启动</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Object—C中定位和请求位置权限</title>
    <link href="http://example.com/2019/12/14/OC%E4%B8%AD%E5%AE%9A%E4%BD%8D%E5%92%8C%E8%AF%B7%E6%B1%82%E4%BD%8D%E7%BD%AE%E6%9D%83%E9%99%90/"/>
    <id>http://example.com/2019/12/14/OC%E4%B8%AD%E5%AE%9A%E4%BD%8D%E5%92%8C%E8%AF%B7%E6%B1%82%E4%BD%8D%E7%BD%AE%E6%9D%83%E9%99%90/</id>
    <published>2019-12-14T05:12:58.000Z</published>
    <updated>2022-02-01T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Object—C中定位和请求位置权限的处理"><a href="#Object—C中定位和请求位置权限的处理" class="headerlink" title="Object—C中定位和请求位置权限的处理"></a>Object—C中定位和请求位置权限的处理</h1><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514131658392.png" alt="image-20210514131658392" style="zoom:50%;"><p>新建GTLocation(NSObject)</p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514132100151.png" alt="image-20210514132100151" style="zoom:50%;"><h2 id="完成单例的类"><a href="#完成单例的类" class="headerlink" title="完成单例的类"></a>完成单例的类</h2><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514122910276.png" alt="image-20210514122910276"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;GTLocation.h&quot;</span><br><span class="line"></span><br><span class="line">@interface GTLocation()</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation GTLocation</span><br><span class="line"></span><br><span class="line">+ (GTLocation *)locationManager&#123;</span><br><span class="line">    static GTLocation *location;</span><br><span class="line">    static dispatch_once_t onceToken;</span><br><span class="line">    dispatch_once(&amp;onceToken, ^&#123;</span><br><span class="line">        location = [[GTLocation alloc] init];</span><br><span class="line">    &#125;);</span><br><span class="line">    return location;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (instancetype)init&#123;</span><br><span class="line">    self = [super init];</span><br><span class="line">    if (self) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    return self;</span><br><span class="line">&#125;</span><br><span class="line">@end</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117182054304.png" alt="image-20210117182054304"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_BEGIN</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> App中统一的位置信息管理</span><br><span class="line"> */</span><br><span class="line">@interface GTLocation : NSObject</span><br><span class="line"></span><br><span class="line">+ (GTLocation *)locationManager;</span><br><span class="line"></span><br><span class="line">- (void)checkLocationAuthorization;</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_END</span><br></pre></td></tr></table></figure><h3 id="首次安装请求位置权限的获取"><a href="#首次安装请求位置权限的获取" class="headerlink" title="首次安装请求位置权限的获取"></a>首次安装请求位置权限的获取</h3><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514131658392.png" style="zoom:50%;"><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117182925438.png" alt="image-20210117182925438"></p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117185026565.png" alt="image-20210117185026565" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;CoreLocation/CoreLocation.h&gt;</span><br><span class="line"></span><br><span class="line">@interface GTLocation()&lt;CLLocationManagerDelegate&gt;</span><br><span class="line">@property(nonatomic, strong, readwrite) CLLocationManager *manager;</span><br><span class="line"></span><br><span class="line">        self.manager = [[CLLocationManager alloc] init];</span><br><span class="line">        self.manager.delegate = self;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">//判断APP相应的状态</span><br><span class="line">- (void)checkLocationAuthorization&#123;</span><br><span class="line">    </span><br><span class="line">    //判断系统是否开启</span><br><span class="line">    if(![CLLocationManager locationServicesEnabled])&#123;</span><br><span class="line">        //引导弹窗</span><br><span class="line">        //</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    if([CLLocationManager authorizationStatus] == kCLAuthorizationStatusNotDetermined)&#123;</span><br><span class="line">        [self.manager requestWhenInUseAuthorization];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">#pragma mark - delegate</span><br><span class="line"></span><br><span class="line">- (void)locationManager:(CLLocationManager *)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status&#123;</span><br><span class="line">    if (status == kCLAuthorizationStatusAuthorizedWhenInUse) &#123;</span><br><span class="line">        //</span><br><span class="line">        [self.manager startUpdatingLocation];</span><br><span class="line">        </span><br><span class="line">    &#125;else if (status == kCLAuthorizationStatusDenied)&#123;</span><br><span class="line">        //</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117185924011.png" alt="image-20210117185924011"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117185938825.png" alt="image-20210117185938825"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;GTLocation.h&quot;</span><br><span class="line"></span><br><span class="line">[[GTLocation locationManager] checkLocationAuthorization];</span><br></pre></td></tr></table></figure><h3 id="获取当前位置信息"><a href="#获取当前位置信息" class="headerlink" title="获取当前位置信息"></a><em>获取当前位置信息</em></h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514123220586.png" alt="image-20210514123220586"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">- (void)locationManager:(CLLocationManager *)manager</span><br><span class="line">     didUpdateLocations:(NSArray&lt;CLLocation *&gt; *)locations &#123;</span><br><span class="line">    </span><br><span class="line">    //地理信息</span><br><span class="line">    CLLocation *location = [locations firstObject];</span><br><span class="line">    </span><br><span class="line">    CLGeocoder *coder = [[CLGeocoder alloc] init];</span><br><span class="line">    </span><br><span class="line">    [coder reverseGeocodeLocation:location completionHandler:^(NSArray&lt;CLPlacemark *&gt; * _Nullable placemarks, NSError * _Nullable error) &#123;</span><br><span class="line">        //地标信息</span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">     [self.manager stopUpdatingLocation];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Object—C中定位和请求位置权限的处理&quot;&gt;&lt;a href=&quot;#Object—C中定位和请求位置权限的处理&quot; class=&quot;headerlink&quot; title=&quot;Object—C中定位和请求位置权限的处理&quot;&gt;&lt;/a&gt;Object—C中定位和请求位置权限的处理&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>OC中的推送</title>
    <link href="http://example.com/2019/12/14/OC%E4%B8%AD%E7%9A%84%E6%8E%A8%E9%80%81/"/>
    <id>http://example.com/2019/12/14/OC%E4%B8%AD%E7%9A%84%E6%8E%A8%E9%80%81/</id>
    <published>2019-12-14T05:12:58.000Z</published>
    <updated>2022-02-01T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Object-C中的本地推送"><a href="#Object-C中的本地推送" class="headerlink" title="Object-C中的本地推送"></a>Object-C中的本地推送</h1><img src="https://gitee.com/zhu565615430/images/raw/master/imas/output.GIF" alt="output" style="zoom: 25%;"><h2 id="新建单例GTNotification-NSObject"><a href="#新建单例GTNotification-NSObject" class="headerlink" title="新建单例GTNotification(NSObject)"></a>新建单例GTNotification(NSObject)</h2><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514133430205.png" alt="image-20210514133430205"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;GTNotification.h&quot;</span><br><span class="line">#import &lt;UserNotifications/UserNotifications.h&gt;</span><br><span class="line"></span><br><span class="line">@interface GTNotification ()&lt;UNUserNotificationCenterDelegate&gt;</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation GTNotification</span><br><span class="line">+ (GTNotification *)notificationManager&#123;</span><br><span class="line">    static GTNotification *manager;</span><br><span class="line">    static dispatch_once_t onceToken;</span><br><span class="line">    dispatch_once(&amp;onceToken, ^&#123;</span><br><span class="line">        manager = [[GTNotification alloc] init];</span><br><span class="line">    &#125;);</span><br><span class="line">    return manager;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)checkNotificationAuthorization&#123;</span><br><span class="line">    </span><br><span class="line">    UNUserNotificationCenter *center = [UNUserNotificationCenter currentNotificationCenter];</span><br><span class="line">    center.delegate = self;</span><br><span class="line">    [center requestAuthorizationWithOptions:UNAuthorizationOptionBadge | UNAuthorizationOptionSound completionHandler:^(BOOL granted, NSError * _Nullable error) &#123;</span><br><span class="line">        NSLog(@&quot;&quot;);</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117224431147.png" alt="image-20210117224431147"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_BEGIN</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> APP 推送管理</span><br><span class="line"> */</span><br><span class="line">@interface GTNotification : NSObject</span><br><span class="line"></span><br><span class="line">+ (GTNotification *)notificationManager;</span><br><span class="line"></span><br><span class="line">- (void)checkNotificationAuthorization;//效验权限的方法</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_END</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117224516134.png" alt="image-20210117224516134"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117224553185.png" alt="image-20210117224553185"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;GTNotification.h&quot;</span><br><span class="line"></span><br><span class="line">[[GTNotification notificationManager] checkNotificationAuthorization];</span><br></pre></td></tr></table></figure><h2 id="实现本地推送"><a href="#实现本地推送" class="headerlink" title="实现本地推送"></a>实现本地推送</h2><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117231013306.png" alt="image-20210117231013306"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117231031479.png" alt="image-20210117231031479"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">if (granted) &#123;</span><br><span class="line">            //本地推送</span><br><span class="line">            [self _pushLocalNotification];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark -</span><br><span class="line"></span><br><span class="line">- (void)_pushLocalNotification&#123;</span><br><span class="line">    </span><br><span class="line">    UNMutableNotificationContent *content = [[UNMutableNotificationContent alloc] init];</span><br><span class="line">    content.badge = @(1);</span><br><span class="line">    content.title = @&quot;北京时间&quot;;</span><br><span class="line">    content.body = @&quot;这是一款iOS App&quot;;</span><br><span class="line">    content.sound = [UNNotificationSound defaultSound];</span><br><span class="line">    </span><br><span class="line">    UNTimeIntervalNotificationTrigger *trigger = [UNTimeIntervalNotificationTrigger triggerWithTimeInterval:30.f repeats:NO];</span><br><span class="line">    </span><br><span class="line">    UNNotificationRequest *request = [UNNotificationRequest requestWithIdentifier:@&quot;_pushLocalNotification&quot; content:content trigger:trigger];</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    [[UNUserNotificationCenter currentNotificationCenter] addNotificationRequest:request withCompletionHandler:^(NSError * _Nullable error) &#123;</span><br><span class="line">        //</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">  2      </span><br><span class="line">#pragma mark -</span><br><span class="line"></span><br><span class="line">- (void)userNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(void (^)(UNNotificationPresentationOptions options))completionHandler&#123;</span><br><span class="line">    completionHandler(UNNotificationPresentationOptionBanner);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void(^)(void))completionHandler &#123;</span><br><span class="line">    </span><br><span class="line">    //处理badge展示逻辑</span><br><span class="line">    //点击之后根据业务逻辑处理</span><br><span class="line">    //[UIApplication sharedApplication].applicationIconBadgeNumber = 100;</span><br><span class="line"></span><br><span class="line">    //处理业务逻辑</span><br><span class="line">    completionHandler();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Object-C中的本地推送&quot;&gt;&lt;a href=&quot;#Object-C中的本地推送&quot; class=&quot;headerlink&quot; title=&quot;Object-C中的本地推送&quot;&gt;&lt;/a&gt;Object-C中的本地推送&lt;/h1&gt;&lt;img src=&quot;https://gitee.c</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Swift用Delegate协议传值</title>
    <link href="http://example.com/2019/09/16/Swift%E7%94%A8Delegate%E5%8D%8F%E8%AE%AE%E4%BC%A0%E5%80%BC/"/>
    <id>http://example.com/2019/09/16/Swift%E7%94%A8Delegate%E5%8D%8F%E8%AE%AE%E4%BC%A0%E5%80%BC/</id>
    <published>2019-09-16T05:49:59.000Z</published>
    <updated>2019-09-16T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一道面试题："><a href="#一道面试题：" class="headerlink" title="一道面试题："></a>一道面试题：</h3><p>有两个scene，分别为Scene A和Scene B。Scene A上有一个UIButton（Button A）和一个UILable（Lable A）；Scene B上有一个UITextFiled（textFiled）。当单击Scene A上的Button A时，跳转到Scene B，在Scene B的textFiled上输入文字，单击键盘的“完成”按钮，返典型的场景之间的跳转和逆向传值问。</p><p><strong>采用Delegate模式，回到Scene A，并在Scene A的Lable A上显示刚才输入的内容。</strong></p><p>iOS提供了多种方法，来实现页面之间的数据传递：</p><ul><li><p>使用SharedApplication，定义一个类似全局的变量来传递</p></li><li><p>使用文件，或者使用NSUserdefault来传递</p></li><li><p>通过一个单例（SingleXX）的class来传递</p></li><li><p>通过Delegate来传递</p></li></ul><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/May-26-2021%2023-55-15.gif" alt="May-26-2021 23-55-15"></p><h4 id="SceneDelegate-swift"><a href="#SceneDelegate-swift" class="headerlink" title="SceneDelegate.swift"></a>SceneDelegate.swift</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line">class SceneDelegate: UIResponder, UIWindowSceneDelegate &#123;</span><br><span class="line"></span><br><span class="line">    var window: UIWindow?</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    func scene(_ scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions) &#123;</span><br><span class="line"></span><br><span class="line">        guard let windowScene = (scene as? UIWindowScene) else &#123; return &#125;</span><br><span class="line">        window = UIWindow(windowScene: windowScene)</span><br><span class="line">        window = UIWindow(frame: UIScreen.main.bounds)</span><br><span class="line">        window?.windowScene = windowScene</span><br><span class="line">        let viewController = RootViewController()</span><br><span class="line">        window?.rootViewController = viewController</span><br><span class="line">        window?.makeKeyAndVisible()</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="RootViewController-swift"><a href="#RootViewController-swift" class="headerlink" title="RootViewController.swift"></a>RootViewController.swift</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  RootViewController.swift</span><br><span class="line">//  Delegate</span><br><span class="line">//</span><br><span class="line">//  Created by 朱官亮 on 2021/5/26.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import UIKit</span><br><span class="line">//实现ModeViewControlDelegate协议</span><br><span class="line">class RootViewController: UIViewController,MdoeViewControlDelegate&#123;</span><br><span class="line">    var btn:UIButton?</span><br><span class="line">    var label:UILabel?</span><br><span class="line">    //实现协议中的方法</span><br><span class="line">    func changeLabel(neString newString:String)  &#123;</span><br><span class="line">        self.label!.text = newString</span><br><span class="line">    &#125;</span><br><span class="line">    @objc func btnOnClick()&#123;</span><br><span class="line">        print(&quot;Onclick&quot;)</span><br><span class="line">        </span><br><span class="line">        let modeView = ModeViewController()</span><br><span class="line">        //设置modeView中的代理为RootViewController自身</span><br><span class="line">        modeView.delegate=self</span><br><span class="line">        //跳转到ModelView</span><br><span class="line">        modeView.modalPresentationStyle = .fullScreen</span><br><span class="line">        self.present(modeView,animated: true , completion: &#123;</span><br><span class="line">                                    print(&quot;OK&quot;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    override func viewDidLoad() &#123;</span><br><span class="line">        super.viewDidLoad()</span><br><span class="line">        self.view.backgroundColor = UIColor.gray</span><br><span class="line">        label = UILabel()</span><br><span class="line">        label!.frame = CGRect(x: 110, y: 200, width: 100, height: 20)</span><br><span class="line">        label!.backgroundColor = UIColor.white</span><br><span class="line">        label!.text = &quot;你好！&quot;</span><br><span class="line">        label!.textAlignment = .center</span><br><span class="line">        </span><br><span class="line">        btn = UIButton()</span><br><span class="line">        btn!.frame = CGRect(x: 110, y: 240, width: 100, height: 20)</span><br><span class="line">        btn!.backgroundColor = UIColor.green</span><br><span class="line">        btn!.setTitle(&quot;下一视图&quot;, for: .normal)</span><br><span class="line">        btn!.addTarget(self, action:#selector(RootViewController.btnOnClick), for: .touchUpInside)</span><br><span class="line">        self.view.addSubview(label!)</span><br><span class="line">        self.view.addSubview(btn!)</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    override func didReceiveMemoryWarning() &#123;</span><br><span class="line">        super.didReceiveMemoryWarning()</span><br><span class="line">        // Dispose of any resources that can be recreated.</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="MdoeViewControler-swift"><a href="#MdoeViewControler-swift" class="headerlink" title="MdoeViewControler.swift"></a>MdoeViewControler.swift</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line">class ModeViewController: UIViewController &#123;</span><br><span class="line">    var textF:UITextField?</span><br><span class="line">    var delegate:MdoeViewControlDelegate?</span><br><span class="line"></span><br><span class="line">    //点击事件</span><br><span class="line">    @objc func btnOnClick()&#123;</span><br><span class="line">        let str = textF?.text</span><br><span class="line">        print(str as Any)</span><br><span class="line">        </span><br><span class="line">        // 调用代理函数 改变label值</span><br><span class="line">        self.delegate?.changeLabel(neString: str!)</span><br><span class="line">        //返回RootView</span><br><span class="line">        self.dismiss(animated: true, completion: nil)</span><br><span class="line">    &#125;</span><br><span class="line">    override func viewDidLoad() &#123;</span><br><span class="line">        super.viewDidLoad()</span><br><span class="line">        </span><br><span class="line">        view.backgroundColor=UIColor.cyan</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        textF=UITextField()</span><br><span class="line">        textF!.frame=CGRect(x: 110,y: 200,width: 100,height: 20)</span><br><span class="line">        textF!.backgroundColor=UIColor.white</span><br><span class="line">        textF!.borderStyle = .roundedRect</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        let btn=UIButton(frame:CGRect(x: 110,y: 240,width: 100,height: 20))</span><br><span class="line">        btn.backgroundColor=UIColor.orange</span><br><span class="line">        btn.setTitle(&quot;返回上视图&quot;,for:.normal)</span><br><span class="line">        //绑定事件</span><br><span class="line">        btn.addTarget(self,action:#selector(ModeViewController.btnOnClick),for: UIControl.Event.touchUpInside)</span><br><span class="line">        </span><br><span class="line">        self.view.addSubview(btn)</span><br><span class="line">        self.view.addSubview(textF!)</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        // Do any additional setup after loading the view.</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Protocol-swift"><a href="#Protocol-swift" class="headerlink" title="Protocol.swift"></a>Protocol.swift</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import Foundation</span><br><span class="line">//协议定义要实现的方法</span><br><span class="line">protocol MdoeViewControlDelegate &#123;</span><br><span class="line">    func changeLabel(neString:String)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;一道面试题：&quot;&gt;&lt;a href=&quot;#一道面试题：&quot; class=&quot;headerlink&quot; title=&quot;一道面试题：&quot;&gt;&lt;/a&gt;一道面试题：&lt;/h3&gt;&lt;p&gt;有两个scene，分别为Scene A和Scene B。Scene A上有一个UIButton（Button</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Swift版的自定义button的Demo</title>
    <link href="http://example.com/2019/09/13/%E8%87%AA%E5%AE%9A%E4%B9%89button%E7%9A%84Demo/"/>
    <id>http://example.com/2019/09/13/%E8%87%AA%E5%AE%9A%E4%B9%89button%E7%9A%84Demo/</id>
    <published>2019-09-13T04:49:00.000Z</published>
    <updated>2019-09-15T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Swift版的自定义button的Demo"><a href="#Swift版的自定义button的Demo" class="headerlink" title="Swift版的自定义button的Demo"></a>Swift版的自定义button的Demo</h3><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/May-25-2021%2016-33-53.gif" alt="May-25-2021 16-33-53" style="zoom:67%;"><h4 id="具体代码如下"><a href="#具体代码如下" class="headerlink" title="具体代码如下"></a>具体代码如下</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line">enum States &#123;</span><br><span class="line">    case open</span><br><span class="line">    case close</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">struct CustomColor &#123;</span><br><span class="line"></span><br><span class="line">    static let brown:UIColor = UIColor.orange</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class ViewController: UIViewController &#123;</span><br><span class="line">    </span><br><span class="line">    var btnStatr:States?</span><br><span class="line">    lazy var addBtn:UIButton = &#123;</span><br><span class="line">        let btn = UIButton()</span><br><span class="line">        btn.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        btn.backgroundColor = UIColor.orange</span><br><span class="line">        btn.showsTouchWhenHighlighted = true</span><br><span class="line">        btn.adjustsImageWhenHighlighted = false //按钮按下发光</span><br><span class="line">        btn.layer.cornerRadius = 30</span><br><span class="line">        btn.addTarget(self, action: #selector(addBrnPressed), for: .touchUpInside)</span><br><span class="line">        btn.setImage(UIImage(named: &quot;add&quot;), for: .normal)</span><br><span class="line">        btn.layer.shadowOpacity = 0.8 //阴影区域透明度</span><br><span class="line">        btn.layer.shadowColor = UIColor.black.cgColor // 阴影区域颜色</span><br><span class="line">        btn.layer.shadowOffset = CGSize(width: 1, height: 1) //阴影区域范围</span><br><span class="line">        return btn</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    let btn1:UIButton = &#123;</span><br><span class="line">        let btn = UIButton()</span><br><span class="line">        btn.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        btn.backgroundColor = .red</span><br><span class="line">        btn.layer.cornerRadius = 25</span><br><span class="line">        btn.setImage(UIImage(named: &quot;add&quot;), for: .normal)</span><br><span class="line">        btn.layer.shadowOpacity = 0.8 //阴影区域透明度</span><br><span class="line">        btn.layer.shadowColor = UIColor.black.cgColor // 阴影区域颜色</span><br><span class="line">        btn.layer.shadowOffset = CGSize(width: 1, height: 1) //阴影区域范围</span><br><span class="line">        return btn</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    let btn2:UIButton = &#123;</span><br><span class="line">        let btn = UIButton()</span><br><span class="line">        btn.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        btn.backgroundColor = .red</span><br><span class="line">        btn.layer.cornerRadius = 25</span><br><span class="line">        btn.setImage(UIImage(named: &quot;add&quot;), for: .normal)</span><br><span class="line">        btn.layer.shadowOpacity = 0.8 //阴影区域透明度</span><br><span class="line">        btn.layer.shadowColor = UIColor.black.cgColor // 阴影区域颜色</span><br><span class="line">        btn.layer.shadowOffset = CGSize(width: 1, height: 1) //阴影区域范围</span><br><span class="line">        return btn</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    let btn3:UIButton = &#123;</span><br><span class="line">        let btn = UIButton()</span><br><span class="line">        btn.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        btn.backgroundColor = .red</span><br><span class="line">        btn.layer.cornerRadius = 25</span><br><span class="line">        btn.setImage(UIImage(named: &quot;add&quot;), for: .normal)</span><br><span class="line">        btn.layer.shadowOpacity = 0.8 //阴影区域透明度</span><br><span class="line">        btn.layer.shadowColor = UIColor.black.cgColor // 阴影区域颜色</span><br><span class="line">        btn.layer.shadowOffset = CGSize(width: 1, height: 1) //阴影区域范围</span><br><span class="line">        return btn</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    let btn4:UIButton = &#123;</span><br><span class="line">        let btn = UIButton()</span><br><span class="line">        btn.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        btn.backgroundColor = .red</span><br><span class="line">        btn.layer.cornerRadius = 25</span><br><span class="line">        btn.setImage(UIImage(named: &quot;add&quot;), for: .normal)</span><br><span class="line">        btn.layer.shadowOpacity = 0.8 //阴影区域透明度</span><br><span class="line">        btn.layer.shadowColor = UIColor.black.cgColor // 阴影区域颜色</span><br><span class="line">        btn.layer.shadowOffset = CGSize(width: 1, height: 1) //阴影区域范围</span><br><span class="line">        return btn</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    let btn5:UIButton = &#123;</span><br><span class="line">        let btn = UIButton()</span><br><span class="line">        btn.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        btn.backgroundColor = .red</span><br><span class="line">        btn.layer.cornerRadius = 25</span><br><span class="line">        btn.setImage(UIImage(named: &quot;add&quot;), for: .normal)</span><br><span class="line">        btn.layer.shadowOpacity = 0.8 //阴影区域透明度</span><br><span class="line">        btn.layer.shadowColor = UIColor.black.cgColor // 阴影区域颜色</span><br><span class="line">        btn.layer.shadowOffset = CGSize(width: 1, height: 1) //阴影区域范围</span><br><span class="line">        return btn</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    override func viewDidLoad() &#123;</span><br><span class="line">        super.viewDidLoad()</span><br><span class="line">//        view.backgroundColor = CustomColor.brown</span><br><span class="line">        view.addSubview(btn1)</span><br><span class="line">        view.addSubview(btn2)</span><br><span class="line">        view.addSubview(btn3)</span><br><span class="line">        view.addSubview(btn4)</span><br><span class="line">        view.addSubview(btn5)</span><br><span class="line">        view.addSubview(addBtn)</span><br><span class="line">        setUPConstraints()</span><br><span class="line">    &#125;</span><br><span class="line">    func setUPConstraints()&#123;</span><br><span class="line">        NSLayoutConstraint.activate([</span><br><span class="line">            addBtn.heightAnchor.constraint(equalToConstant: 60),</span><br><span class="line">            addBtn.widthAnchor.constraint(equalToConstant: 60),</span><br><span class="line">            addBtn.centerXAnchor.constraint(equalTo: view.centerXAnchor, constant: 0),</span><br><span class="line">            addBtn.centerYAnchor.constraint(equalTo: view.centerYAnchor, constant: 250),</span><br><span class="line">            </span><br><span class="line">            btn1.heightAnchor.constraint(equalToConstant: 50),</span><br><span class="line">            btn1.widthAnchor.constraint(equalToConstant: 50),</span><br><span class="line">            btn1.centerYAnchor.constraint(equalTo: view.centerYAnchor, constant: 250),</span><br><span class="line">            btn1.centerXAnchor.constraint(equalTo: view.centerXAnchor),</span><br><span class="line">            </span><br><span class="line">            btn2.heightAnchor.constraint(equalToConstant: 50),</span><br><span class="line">            btn2.widthAnchor.constraint(equalToConstant: 50),</span><br><span class="line">            btn2.centerYAnchor.constraint(equalTo: view.centerYAnchor, constant: 250),</span><br><span class="line">            btn2.centerXAnchor.constraint(equalTo: view.centerXAnchor),</span><br><span class="line">        </span><br><span class="line">            btn3.heightAnchor.constraint(equalToConstant: 50),</span><br><span class="line">            btn3.widthAnchor.constraint(equalToConstant: 50),</span><br><span class="line">            btn3.centerYAnchor.constraint(equalTo: view.centerYAnchor, constant: 250),</span><br><span class="line">            btn3.centerXAnchor.constraint(equalTo: view.centerXAnchor),</span><br><span class="line">            </span><br><span class="line">            btn4.heightAnchor.constraint(equalToConstant: 50),</span><br><span class="line">            btn4.widthAnchor.constraint(equalToConstant: 50),</span><br><span class="line">            btn4.centerYAnchor.constraint(equalTo: view.centerYAnchor, constant: 250),</span><br><span class="line">            btn4.centerXAnchor.constraint(equalTo: view.centerXAnchor),</span><br><span class="line">            </span><br><span class="line">            btn5.heightAnchor.constraint(equalToConstant: 50),</span><br><span class="line">            btn5.widthAnchor.constraint(equalToConstant: 50),</span><br><span class="line">            btn5.centerYAnchor.constraint(equalTo: view.centerYAnchor, constant: 250),</span><br><span class="line">            btn5.centerXAnchor.constraint(equalTo: view.centerXAnchor),</span><br><span class="line">        ])</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    @objc func addBrnPressed() &#123;</span><br><span class="line">        </span><br><span class="line">        if btnStatr == .close &#123;</span><br><span class="line">            UIView.animate(withDuration: 0.7, delay: 0, usingSpringWithDamping: 1,</span><br><span class="line">                initialSpringVelocity: 0, options: .curveEaseIn, animations: &#123;</span><br><span class="line">                </span><br><span class="line">                self.btn1.center.y += 100</span><br><span class="line">                    </span><br><span class="line">                self.btn2.center.y += 60</span><br><span class="line">                self.btn2.center.x += 90</span><br><span class="line">                    </span><br><span class="line">                self.btn3.center.y += 60</span><br><span class="line">                self.btn3.center.x -= 90</span><br><span class="line">                    </span><br><span class="line">                self.btn4.center.x += 120</span><br><span class="line">                self.btn4.center.y -= 20</span><br><span class="line">                    </span><br><span class="line">                self.btn5.center.x -= 120</span><br><span class="line">                self.btn5.center.y -= 20</span><br><span class="line">                    </span><br><span class="line">                self.addBtn.transform = .identity</span><br><span class="line">                </span><br><span class="line">                self.btnStatr = .open</span><br><span class="line">            &#125;, completion: nil)</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            UIView.animate(withDuration: 0.7, delay: 0, usingSpringWithDamping: 0.7,</span><br><span class="line">                initialSpringVelocity: 0, options: .curveEaseIn, animations: &#123;</span><br><span class="line">                </span><br><span class="line">                self.btn1.center.y -= 100</span><br><span class="line">                    </span><br><span class="line">                self.btn2.center.y -= 60</span><br><span class="line">                self.btn2.center.x -= 90</span><br><span class="line">                    </span><br><span class="line">                self.btn3.center.y -= 60</span><br><span class="line">                self.btn3.center.x += 90</span><br><span class="line">                    </span><br><span class="line">                self.btn4.center.x -= 120</span><br><span class="line">                self.btn4.center.y += 20</span><br><span class="line">                    </span><br><span class="line">                self.btn5.center.x += 120</span><br><span class="line">                self.btn5.center.y += 20</span><br><span class="line">                self.addBtn.transform = CGAffineTransform(rotationAngle: .pi/4)</span><br><span class="line">                    </span><br><span class="line">                self.btnStatr = .close</span><br><span class="line">            &#125;, completion: nil)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Swift版的自定义button的Demo&quot;&gt;&lt;a href=&quot;#Swift版的自定义button的Demo&quot; class=&quot;headerlink&quot; title=&quot;Swift版的自定义button的Demo&quot;&gt;&lt;/a&gt;Swift版的自定义button的Demo&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>模仿微博项目一</title>
    <link href="http://example.com/2019/08/16/%E6%A8%A1%E4%BB%BF%E5%BE%AE%E5%8D%9A%E9%A1%B9%E7%9B%AE%E4%B8%80/"/>
    <id>http://example.com/2019/08/16/%E6%A8%A1%E4%BB%BF%E5%BE%AE%E5%8D%9A%E9%A1%B9%E7%9B%AE%E4%B8%80/</id>
    <published>2019-08-16T05:49:59.000Z</published>
    <updated>2019-08-16T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="项目架构如下："><a href="#项目架构如下：" class="headerlink" title="项目架构如下："></a>项目架构如下：</h2><h2 id><a href="#" class="headerlink" title></a><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/IMG_0985.JPG" alt="IMG_0985"></h2><h2 id="创建项目诸葛微博，导入启动图片，设置应用名诸葛微博"><a href="#创建项目诸葛微博，导入启动图片，设置应用名诸葛微博" class="headerlink" title="创建项目诸葛微博，导入启动图片，设置应用名诸葛微博"></a>创建项目诸葛微博，导入启动图片，设置应用名诸葛微博</h2><h3 id="一般启动图片隐藏状态栏我们需要在info-plist文件里面增加一个键值对"><a href="#一般启动图片隐藏状态栏我们需要在info-plist文件里面增加一个键值对" class="headerlink" title="一般启动图片隐藏状态栏我们需要在info.plist文件里面增加一个键值对"></a>一般启动图片隐藏状态栏我们需要在info.plist文件里面增加一个键值对</h3><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210518132725402.png" alt="image-20210518132725402" style="zoom:50%;"><p>运行程序，正常现实如下</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210518134021835.png" alt="image-20210518134021835" style="zoom: 67%;"><h2 id="设置项目的结构目录"><a href="#设置项目的结构目录" class="headerlink" title="设置项目的结构目录"></a>设置项目的结构目录</h2><h3 id="微博项目的主目录是CIasses，它用于存放所有的类文件，根据MVVM的特点，该文件夹包含4个子文件夹，分别是View、ViewModeI、ModeI、TooIs。"><a href="#微博项目的主目录是CIasses，它用于存放所有的类文件，根据MVVM的特点，该文件夹包含4个子文件夹，分别是View、ViewModeI、ModeI、TooIs。" class="headerlink" title="微博项目的主目录是CIasses，它用于存放所有的类文件，根据MVVM的特点，该文件夹包含4个子文件夹，分别是View、ViewModeI、ModeI、TooIs。"></a>微博项目的主目录是CIasses，它用于存放所有的类文件，根据MVVM的特点，该文件夹包含4个子文件夹，分别是View、ViewModeI、ModeI、TooIs。</h3><p><img src="/Users/zhuguanliang/Downloads/IMG_0986.JPG" alt="IMG_0986"></p><h3 id="在View目录下，还需要创建一些子目录，这些子目录的相关说明如图。"><a href="#在View目录下，还需要创建一些子目录，这些子目录的相关说明如图。" class="headerlink" title="在View目录下，还需要创建一些子目录，这些子目录的相关说明如图。"></a>在View目录下，还需要创建一些子目录，这些子目录的相关说明如图。</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/IMG_0987.JPG" alt="IMG_0987"></p><h2 id="创建各个控制器的模板文件"><a href="#创建各个控制器的模板文件" class="headerlink" title="创建各个控制器的模板文件"></a>创建各个控制器的模板文件</h2><p>底下四个界面都是以表格显示的，因此要使用表视图控制器（UITabIeViewControIIer）</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/IMG_0988.JPG" alt="IMG_0988"></p><p>创建好的文件目录结构：</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210518143347326.png" alt="image-20210518143347326" style="zoom:50%;"><p>删除ViewControIIer.swift文件，在AppDeIegate.swift文件中将标签控制器改为启动控制器，修改方式如下所示。</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210518144057394.png" alt="image-20210518144057394"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var window: UIWindow?</span><br><span class="line"></span><br><span class="line">func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -&gt; Bool &#123;</span><br><span class="line">    </span><br><span class="line">    window?.rootViewController = MainViewController()</span><br><span class="line">    return true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>删掉工程中main.storyboard ,删除plist文件中对应的键值外，还要删除其他的。具体如下</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/20200918164518418.png" alt="20200918164518418"></p><p>删除SceneDelegate.storyboard然后删除plist中Application Scene manifest。这个是iOS13后，在之前AppDelegate的基础上多出了一个SceneDelegate，会将AppDelegate里的lifecycle的那些代理方法转交给SceneDelegate</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/20200918164817835.png" alt="20200918164817835"></p><h2 id="导入TabBar图片，设置底部导航条"><a href="#导入TabBar图片，设置底部导航条" class="headerlink" title="导入TabBar图片，设置底部导航条"></a>导入TabBar图片，设置底部导航条</h2><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210519022109532.png" alt="image-20210519022109532" style="zoom: 67%;"><h3 id="在MainViewControIIer-swift文件中，给该类增加新的方法，用于添加4个控制器。"><a href="#在MainViewControIIer-swift文件中，给该类增加新的方法，用于添加4个控制器。" class="headerlink" title="在MainViewControIIer.swift文件中，给该类增加新的方法，用于添加4个控制器。"></a>在MainViewControIIer.swift文件中，给该类增加新的方法，用于添加4个控制器。</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line">class MainViewController: UITabBarController &#123;</span><br><span class="line">    override func viewDidLoad() &#123;</span><br><span class="line">        super.viewDidLoad()</span><br><span class="line">        // 使用kvc 完成只读属性赋值</span><br><span class="line">        setValue(tabBar, forKey: &quot;tabBar&quot;)</span><br><span class="line">        </span><br><span class="line">        addChildViewController(childController: HomeViewController(), title: &quot;首页&quot;, imgName: &quot;tabbar_home&quot;)</span><br><span class="line">        addChildViewController(childController: MessageViewController(), title: &quot;消息&quot;, imgName: &quot;tabbar_message_center&quot;)</span><br><span class="line">        addChildViewController(childController: DiscoverViewController(), title: &quot;发现&quot;, imgName: &quot;tabbar_discover&quot;)</span><br><span class="line">        addChildViewController(childController: ProfileViewController(), title: &quot;我&quot;, imgName: &quot;tabbar_profile&quot;)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    /// 添加字控制器公共方法</span><br><span class="line">    ///</span><br><span class="line">    /// - Parameters:</span><br><span class="line">    ///   - childController: 字控制器</span><br><span class="line">    ///   - title: 名字</span><br><span class="line">    ///   - imgName: 图片名</span><br><span class="line">    func addChildViewController(childController: UIViewController, title: String, imgName: String) &#123;</span><br><span class="line"></span><br><span class="line">        // 设置title</span><br><span class="line">        childController.navigationItem.title = title</span><br><span class="line">        childController.tabBarItem.title = title</span><br><span class="line">        // 选中的颜色</span><br><span class="line">        childController.tabBarItem.setTitleTextAttributes([NSAttributedString.Key.foregroundColor : UIColor.orange], for: UIControl.State.selected)</span><br><span class="line">        </span><br><span class="line">        // 设置image</span><br><span class="line">        childController.tabBarItem.image = UIImage(named: imgName)?.withRenderingMode(UIImage.RenderingMode.alwaysOriginal)</span><br><span class="line">        // 选中</span><br><span class="line">        // .withRenderingMode(UIImageRenderingMode.alwaysOriginal) 图片渲染</span><br><span class="line">        childController.tabBarItem.selectedImage = UIImage(named: &quot;\(imgName)_selected&quot;)?.withRenderingMode(UIImage.RenderingMode.alwaysOriginal)</span><br><span class="line">        </span><br><span class="line">        // 导航控制器</span><br><span class="line">        let nav = UINavigationController(rootViewController: childController)</span><br><span class="line">        </span><br><span class="line">        // 添加子控制器</span><br><span class="line">        addChild(nav)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加撰写按钮，在main文件下新建TabBar-swift继承自UITabBar"><a href="#添加撰写按钮，在main文件下新建TabBar-swift继承自UITabBar" class="headerlink" title="添加撰写按钮，在main文件下新建TabBar.swift继承自UITabBar"></a>添加撰写按钮，在main文件下新建TabBar.swift继承自UITabBar</h2><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210519023102895.png" alt="image-20210519023102895" style="zoom:67%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class TabBar: UITabBar &#123;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    override init(frame: CGRect) &#123;</span><br><span class="line">        super.init(frame: frame)</span><br><span class="line">        setupUI()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    required init?(coder aDecoder: NSCoder) &#123;</span><br><span class="line">        fatalError(&quot;init(coder:) has not been implemented&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    // 设置视图</span><br><span class="line">    private func setupUI()&#123;</span><br><span class="line">        addSubview(composeButton)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    override func layoutSubviews() &#123;</span><br><span class="line">        super.layoutSubviews()</span><br><span class="line">        // 重写设置UITabBarButton的宽度</span><br><span class="line">        let w = frame.width * 0.2</span><br><span class="line">        // 记录遍历到第几个的标识</span><br><span class="line">        var index: CGFloat = 0</span><br><span class="line">        // 遍历子控件UITabBarButton</span><br><span class="line">        for view in subviews&#123;</span><br><span class="line">            </span><br><span class="line">            // 判断是否是UITabBarButton(系统私有的)</span><br><span class="line">            // NSClassFromString 通过字符串转出得到对应的class</span><br><span class="line">            if view.isKind(of: NSClassFromString(&quot;UITabBarButton&quot;)!) &#123;</span><br><span class="line">                print(view)</span><br><span class="line">                // 宽度</span><br><span class="line">                view.frame.size.width = w</span><br><span class="line">                // x轴</span><br><span class="line">                view.frame.origin.x = w * index</span><br><span class="line">                </span><br><span class="line">                // index 递增</span><br><span class="line">                index += 1</span><br><span class="line">                </span><br><span class="line">                // 如果等于2 需要再加一 给撰写按钮.留位置</span><br><span class="line">                if index == 2 &#123;</span><br><span class="line">                    index += 1</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        // composeButton</span><br><span class="line">        composeButton.center.x = frame.size.width * 0.5</span><br><span class="line">        composeButton.center.y = frame.size.height * 0.35</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // 懒加载控件</span><br><span class="line">    // 撰写按钮</span><br><span class="line">    private lazy var composeButton: UIButton = &#123;</span><br><span class="line">        let btn = UIButton()</span><br><span class="line">        // image 和背景图片</span><br><span class="line">        btn.setBackgroundImage(UIImage(named:&quot;tabbar_compose_button_highlighted&quot;), for: UIControl.State.highlighted)</span><br><span class="line">        btn.setBackgroundImage(UIImage(named:&quot;tabbar_compose_button&quot;), for: UIControl.State.normal)</span><br><span class="line">        btn.setImage(UIImage(named:&quot;tabbar_compose_icon_add_highlighted&quot;), for: UIControl.State.highlighted)</span><br><span class="line">        btn.setImage(UIImage(named:&quot;tabbar_compose_icon_add&quot;), for: UIControl.State.normal)</span><br><span class="line">        btn.sizeToFit()</span><br><span class="line">        return btn</span><br><span class="line">    &#125;()</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="同时在MainViewControIIer-swift，添加上去"><a href="#同时在MainViewControIIer-swift，添加上去" class="headerlink" title="同时在MainViewControIIer.swift，添加上去"></a>同时在MainViewControIIer.swift，添加上去</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210519022956363.png" alt="image-20210519022956363"></p><h3 id="在Tools新建Extensions文件，添加EXT-UIBarButtonItem-swift"><a href="#在Tools新建Extensions文件，添加EXT-UIBarButtonItem-swift" class="headerlink" title="在Tools新建Extensions文件，添加EXT+UIBarButtonItem.swift"></a>在Tools新建Extensions文件，添加EXT+UIBarButtonItem.swift</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">extension UIBarButtonItem &#123;</span><br><span class="line">    </span><br><span class="line">    // 图片名 名字  target action</span><br><span class="line">    convenience init(imgName: String?, title: String?, target: Any?, action: Selector)&#123;</span><br><span class="line"></span><br><span class="line">        // 实例化一个按钮</span><br><span class="line">        let button = UIButton()</span><br><span class="line">        // 监听事件</span><br><span class="line">        button.addTarget(target, action: action, for: UIControl.Event.touchUpInside)</span><br><span class="line">        </span><br><span class="line">        if let img = imgName &#123;</span><br><span class="line">            // 图片</span><br><span class="line">            button.setImage(UIImage(named:img), for: UIControl.State.normal)</span><br><span class="line">            button.setImage(UIImage(named:&quot;\(img)_highlighted&quot;), for: UIControl.State.highlighted)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if let tit = title &#123;</span><br><span class="line">            // 文字</span><br><span class="line">            button.setTitle(tit, for: UIControl.State.normal)</span><br><span class="line">            button.titleLabel?.font = UIFont.systemFont(ofSize: 14)</span><br><span class="line">            button.setTitleColor(UIColor.darkGray, for: UIControl.State.normal)</span><br><span class="line">            button.setTitleColor(UIColor.orange, for: UIControl.State.highlighted)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        button.sizeToFit()</span><br><span class="line">        </span><br><span class="line">        // 调用指定构造函数完成实例化</span><br><span class="line">        self.init(customView: button)</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="访客视图"><a href="#访客视图" class="headerlink" title="访客视图"></a>访客视图</h2><h3 id="添加表视图控制器基类"><a href="#添加表视图控制器基类" class="headerlink" title="添加表视图控制器基类"></a>添加表视图控制器基类</h3><p>上一章搭建项目框架时，添加了四个子控制器，这些控制器都继承自UITabIeView ControIIer。由于这些控制器管理的页面有共同的地方，所以我们可以新建一个表格视图控制器的基类VisitorTabIeViewControIIer，该基类增加用户登录标记，根据用户登录标记判断是否加载默认视图，具体步骤如下。</p><p>（1）在Main目录下创建一个新的文件夹Visitor用来放置访客视图的类。</p><p>（2）在Visitor文件夹下创建一个继承自UITabIeViewControIIer的基类VisitorTabIeView ControIIer，如图所示。</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210519122738098.png" alt="image-20210519122738098"></p><p><strong>同时将前面4个视图HomeViewController.swift、MessageTabIeViewControIIer.swift、DiscoverTabIe ViewControIIer.swift和ProfiIeTabIeViewControIIer.swift这几个类的父类修改为VisitorTabIe ViewControIIer。</strong></p><h3 id="新建的访客视图类VisitorTabIeViewControIIer中，实现根据用户标记切换根视图的代码"><a href="#新建的访客视图类VisitorTabIeViewControIIer中，实现根据用户标记切换根视图的代码" class="headerlink" title="新建的访客视图类VisitorTabIeViewControIIer中，实现根据用户标记切换根视图的代码"></a>新建的访客视图类VisitorTabIeViewControIIer中，实现根据用户标记切换根视图的代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line">class VisitorTableViewController: UITableViewController &#123;</span><br><span class="line">    </span><br><span class="line">    //用户登录标记</span><br><span class="line">    private var userLogon = false</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    override func viewDidLoad() &#123;</span><br><span class="line">        super.viewDidLoad()</span><br><span class="line">        userLogon ? super.loadView() : setupVisitorView()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    //设置访客视图</span><br><span class="line">    private func setupVisitorView ()&#123;</span><br><span class="line">        view = UIView ()</span><br><span class="line">        view.backgroundColor = UIColor.orange</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建访客视图，导入访客视图的图片资源Visitor文件夹拖入Assets.xcassets文件目录中</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210519123405635.png" alt="image-20210519123405635"></p><p>在文件夹CIasses的子文件夹Visitor中新建一个继承自UIView的类VisitorView，创建好的文件如图</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210519123521547.png" alt="image-20210519123521547" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line">class VisitorView: UIView &#123;</span><br><span class="line">    /// 图标，使用 image: 构造函数创建的 imageView 默认就是 image 的大小</span><br><span class="line">    private lazy var iconView: UIImageView = UIImageView (image: UIImage (named: &quot;visitordiscover_feed_image_smallicon&quot;))</span><br><span class="line">    ///// 小房子</span><br><span class="line">    private lazy var homeIconView: UIImageView = UIImageView (image: UIImage (named: &quot;visitordiscover_feed_image_house&quot;))</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    override init(frame: CGRect) &#123;</span><br><span class="line">        super.init(frame: frame)</span><br><span class="line">        setupUI()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // initWithCoder - 使用 StoryBoard &amp; XIB 开发加载的函数</span><br><span class="line">    required init ? (coder aDecoder: NSCoder) &#123;</span><br><span class="line">        super.init(coder:aDecoder)</span><br><span class="line">        setupUI()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">extension VisitorView&#123;</span><br><span class="line">    //设置界面</span><br><span class="line">    private func setupUI() &#123;</span><br><span class="line">        addSubview(iconView)</span><br><span class="line">        addSubview(homeIconView)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210519130734794.png" alt="image-20210519130734794" style="zoom: 25%;"><h3 id="使用自动布局设置图片的位置"><a href="#使用自动布局设置图片的位置" class="headerlink" title="使用自动布局设置图片的位置"></a>使用自动布局设置图片的位置</h3><h3 id="-1"><a href="#-1" class="headerlink" title></a><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210519131849026.png" alt="image-20210519131849026" style="zoom:50%;"></h3><p>我们已经将图片添加到了访客视图上，但是图片都堆在了左上角，所以我们需要对图片添加约束。使用纯代码设置自动布局时，首先需要把transIatesAutoresizingMaskInto Constraints属性设置为faIse，表示支持使用自动布局来设置控件位置。通过循环的方式，在setupUI（）方法中将subviews中的控件的transIatesAutoresizingMaskIntoConstraints属性设置为faIse，代码如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for v in subviews &#123;</span><br><span class="line">    v.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在下方添加自动布局代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//图标</span><br><span class="line">  addConstraint(NSLayoutConstraint (item: iconView, attribute:</span><br><span class="line">                                      .centerX, relatedBy: .equal, toItem: self, attribute: .centerX,</span><br><span class="line">                                      multiplier: 1.0, constant: 0))</span><br><span class="line">  </span><br><span class="line">  addConstraint(NSLayoutConstraint (item: iconView, attribute:</span><br><span class="line">                                      .centerY, relatedBy: .equal, toItem: self, attribute: .centerY,</span><br><span class="line">                                      multiplier: 1.0, constant: -60))</span><br><span class="line">  //房子</span><br><span class="line">  addConstraint(NSLayoutConstraint (item: homeIconView, attribute:</span><br><span class="line">                                      .centerX, relatedBy: .equal, toItem: self, attribute: .centerX,</span><br><span class="line">                                      multiplier: 1.0, constant: 0))</span><br><span class="line">  </span><br><span class="line">  addConstraint(NSLayoutConstraint (item: homeIconView, attribute:</span><br><span class="line">                                      .centerY, relatedBy: .equal, toItem: self, attribute: .centerY,</span><br><span class="line">                                      multiplier: 1.0, constant: -60))</span><br></pre></td></tr></table></figure><h3 id="完成图片的添加后，继续在VisitorView类中添加表示消息文字的懒加载控件IabeI"><a href="#完成图片的添加后，继续在VisitorView类中添加表示消息文字的懒加载控件IabeI" class="headerlink" title="完成图片的添加后，继续在VisitorView类中添加表示消息文字的懒加载控件IabeI"></a>完成图片的添加后，继续在VisitorView类中添加表示消息文字的懒加载控件IabeI</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210519132406319.png" alt="image-20210519132406319"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">private lazy var messageLabel: UILabel = &#123;</span><br><span class="line">    let label = UILabel()</span><br><span class="line">    label.text = &quot;关注一些人，回这里看看有什么惊喜&quot;</span><br><span class="line">    // 界面设计上，避免使用纯黑色</span><br><span class="line">    //设置label文字颜色</span><br><span class="line">    label.textColor = UIColor.darkGray</span><br><span class="line">    //设置label字体大小</span><br><span class="line">    </span><br><span class="line">    //设置label字体大小</span><br><span class="line">    label.font = UIFont.systemFont(ofSize: 14)</span><br><span class="line">    //label文字不限制行数</span><br><span class="line">    label.numberOfLines = 0</span><br><span class="line">    //设置文字的对其方式</span><br><span class="line">    label.textAlignment = NSTextAlignment.center</span><br><span class="line">    return label</span><br><span class="line">&#125;()</span><br></pre></td></tr></table></figure><h3 id="在设置界面方法setupUI（）中，首先通过addSubview方法添加messageLabeI控件，具体代码如下。"><a href="#在设置界面方法setupUI（）中，首先通过addSubview方法添加messageLabeI控件，具体代码如下。" class="headerlink" title="在设置界面方法setupUI（）中，首先通过addSubview方法添加messageLabeI控件，具体代码如下。"></a>在设置界面方法setupUI（）中，首先通过addSubview方法添加messageLabeI控件，具体代码如下。</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">addSubview(messageLabel)</span><br></pre></td></tr></table></figure><h3 id="另外，还需要为messageLabeI添加约束，代码如下。"><a href="#另外，还需要为messageLabeI添加约束，代码如下。" class="headerlink" title="另外，还需要为messageLabeI添加约束，代码如下。"></a>另外，还需要为messageLabeI添加约束，代码如下。</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">addConstraint(NSLayoutConstraint(item: messageLabel, attribute:</span><br><span class="line">.centerX, relatedBy: .equal, toItem: iconView, attribute: .centerX,</span><br><span class="line">multiplier: 1.0, constant: 0))</span><br><span class="line">addConstraint(NSLayoutConstraint(item: messageLabel, attribute:</span><br><span class="line">                                    .top, relatedBy: .equal, toItem: iconView, attribute: .bottom,</span><br><span class="line">multiplier: 1.0, constant: 16))</span><br><span class="line">addConstraint(NSLayoutConstraint(item: messageLabel, attribute:</span><br><span class="line">                                    .width, relatedBy: .equal, toItem: nil, attribute: .notAnAttribute,</span><br><span class="line">multiplier: 1.0, constant: 224))</span><br><span class="line">addConstraint(NSLayoutConstraint(item: messageLabel, attribute:</span><br><span class="line">                                    .height, relatedBy: .equal, toItem: nil, attribute: .notAnAttribute,</span><br><span class="line">multiplier: 1.0, constant: 36))</span><br></pre></td></tr></table></figure><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210519132929023.png" alt="image-20210519132929023" style="zoom:50%;"><h3 id="添加其他控件"><a href="#添加其他控件" class="headerlink" title="添加其他控件"></a>添加其他控件</h3><p>接下来，在消息文字IabeI下面添加“登录”和“注册”按钮，代码如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/// 注册按钮</span><br><span class="line">private lazy var registerButton: UIButton = &#123;</span><br><span class="line">let button = UIButton()</span><br><span class="line">//设置普通状态下按钮文字</span><br><span class="line">    button.setTitle(&quot;注册&quot;, for: UIControl.State.normal)</span><br><span class="line">//设置普通状态下按钮文字颜色</span><br><span class="line">    button.setTitleColor(UIColor.orange, for: UIControl.State.normal)</span><br><span class="line">//设置普通状态下按钮背景图片</span><br><span class="line">    button.setBackgroundImage(UIImage(named: &quot;common_button_white_disable&quot;),</span><br><span class="line">                              for: UIControl.State.normal)</span><br><span class="line">return button</span><br><span class="line">&#125;()</span><br><span class="line">/// 登录按钮</span><br><span class="line">private lazy var loginButton: UIButton = &#123;</span><br><span class="line">let button = UIButton()</span><br><span class="line">    button.setTitle(&quot;登录&quot;, for: UIControl.State.normal)</span><br><span class="line">    button.setTitleColor(UIColor.orange,</span><br><span class="line">                         for: UIControl.State.normal)</span><br><span class="line">    button.setBackgroundImage(UIImage(named: &quot;common_button_white_disable&quot;),</span><br><span class="line">                              for: UIControl.State.normal)</span><br><span class="line">return button</span><br><span class="line">&#125;()</span><br></pre></td></tr></table></figure><p>同样在设置界面方法setupUI()中添加控件,代码如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">addSubview(registerButton)</span><br><span class="line">addSubview(loginButton)</span><br></pre></td></tr></table></figure><p>同样在设置界面方法setupUI()中添加控件,代码如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">addSubview(registerButton)</span><br><span class="line">addSubview(loginButton)</span><br><span class="line">在setupUI()中为注册和登录添加约束,代码如下。</span><br><span class="line">// 4＞ 注册按钮</span><br><span class="line">addConstraint(NSLayoutConstraint(item: registerButton, attribute: .Left,</span><br><span class="line">relatedBy: .equal, toItem: messageLabel, attribute: .Left,</span><br><span class="line">multiplier: 1.0, constant: 0))</span><br><span class="line">addConstraint(NSLayoutConstraint(item: registerButton,</span><br><span class="line">attribute: .Top, relatedBy: .equal, toItem: messageLabel, attribute: .Bottom,</span><br><span class="line">multiplier: 1.0, constant: 16))</span><br><span class="line">addConstraint(NSLayoutConstraint(item: registerButton,</span><br></pre></td></tr></table></figure><p>在setupUI（）中为注册和登录添加约束，代码如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">// 4＞ 注册按钮</span><br><span class="line">addConstraint(NSLayoutConstraint(item: registerButton, attribute: .left,</span><br><span class="line">relatedBy: .equal, toItem: messageLabel, attribute: .left,</span><br><span class="line">multiplier: 1.0, constant: 0))</span><br><span class="line">addConstraint(NSLayoutConstraint(item: registerButton,</span><br><span class="line">attribute: .top, relatedBy: .equal, toItem: messageLabel, attribute: .bottom,</span><br><span class="line">multiplier: 1.0, constant: 16))</span><br><span class="line">addConstraint(NSLayoutConstraint(item: registerButton,</span><br><span class="line">                                 attribute: .width, relatedBy: .equal, toItem: nil, attribute: .notAnAttribute,</span><br><span class="line">multiplier: 1.0, constant: 100))</span><br><span class="line">addConstraint(NSLayoutConstraint(item: registerButton,</span><br><span class="line">                                 attribute: .height, relatedBy: .equal, toItem: nil, attribute: .notAnAttribute,</span><br><span class="line">multiplier: 1.0, constant: 36))</span><br><span class="line"></span><br><span class="line">// 5＞ 登录按钮</span><br><span class="line">addConstraint(NSLayoutConstraint(item: loginButton,</span><br><span class="line">                                 attribute: .right, relatedBy: .equal, toItem: messageLabel, attribute: .right,</span><br><span class="line">multiplier: 1.0, constant: 0))</span><br><span class="line">addConstraint(NSLayoutConstraint(item: loginButton,</span><br><span class="line">attribute: .top, relatedBy: .equal, toItem: messageLabel, attribute: .bottom,</span><br><span class="line">multiplier: 1.0, constant: 16))</span><br><span class="line">addConstraint(NSLayoutConstraint(item: loginButton,</span><br><span class="line">                                 attribute: .width, relatedBy: .equal, toItem: nil, attribute: .notAnAttribute,</span><br><span class="line">multiplier: 1.0, constant: 100))</span><br><span class="line">addConstraint(NSLayoutConstraint(item: loginButton,</span><br><span class="line">                                 attribute: .height, relatedBy: .equal, toItem: nil, attribute: .notAnAttribute,</span><br><span class="line">multiplier: 1.0, constant: 36))</span><br></pre></td></tr></table></figure><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210519135513665.png" alt="image-20210519135513665" style="zoom:50%;"><h3 id="添加遮罩视图，并使用VFL布局位置"><a href="#添加遮罩视图，并使用VFL布局位置" class="headerlink" title="添加遮罩视图，并使用VFL布局位置"></a>添加遮罩视图，并使用VFL布局位置</h3><p>先在懒加载控件处添加遮罩图片控件，代码如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/// 遮罩图像</span><br><span class="line"> private lazy var maskIconView: UIImageView = UIImageView (image: UIImage (named: &quot;visitordiscover_feed_mask_smallicon&quot;))</span><br></pre></td></tr></table></figure><p>接下来在setupUI（）方法中添加遮罩视图控件，需要注意的是，由于添加视图控件时，后添加的视图会位于之前添加的视图之上，这里，我们需要将添加遮罩视图的代码放在添加homeIconView和iconView之间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">addSubview(maskIconView)</span><br></pre></td></tr></table></figure><h3 id="下面使用addConstraints为遮罩视图添加约束，代码如下。"><a href="#下面使用addConstraints为遮罩视图添加约束，代码如下。" class="headerlink" title="下面使用addConstraints为遮罩视图添加约束，代码如下。"></a>下面使用addConstraints为遮罩视图添加约束，代码如下。</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//6.遮罩图像</span><br><span class="line">//view ： 定义VFL中的控件名称和实际名称的映射关系</span><br><span class="line">//metrics   :定义 VFL 中（） 指定常数映射关系</span><br><span class="line">let viewDict = [&quot;maskIconView&quot;: maskIconView,</span><br><span class="line">                &quot;registerButton&quot;: registerButton]</span><br><span class="line">let metrics =  [&quot;spacing&quot;: -35]</span><br><span class="line">addConstraints(NSLayoutConstraint.constraints(</span><br><span class="line">    withVisualFormat: &quot;H:|-0-[maskIconView]-0-|&quot;,</span><br><span class="line">    options: [],</span><br><span class="line">    metrics: nil,</span><br><span class="line">    views: viewDict))</span><br><span class="line">addConstraints(NSLayoutConstraint.constraints(</span><br><span class="line">    withVisualFormat: &quot;V:|-0-[maskIconView]-(spacing)-[registerButton]&quot;,</span><br><span class="line">    options: [],</span><br><span class="line">    metrics: metrics,</span><br><span class="line">    views: viewDict))</span><br></pre></td></tr></table></figure><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210519142012349.png" alt="image-20210519142012349" style="zoom:50%;"><p>在遮罩视图下方会有白色的空白地带，如果调整约束为全屏，会导致遮罩图片无法遮挡圆圈的下半部分，那么在这里，我们可以通过修改访客视图的背景颜色用来达到同样的效果。在遮罩视图约束下面添加修改背景颜色的代码，代码如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 设置背景颜色 - 灰度图 R = G = B，在 UI 元素中，大多数都使用灰度图，或者纯色图（安全色）</span><br><span class="line">backgroundColor = UIColor.cz_color(withHex: 0xEDEDED)</span><br></pre></td></tr></table></figure><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210519142555268.png" alt="image-20210519142555268" style="zoom:50%;"><h3 id="根据前面描述的界面得知，各个控制器的图标和文字各不相同，所以我们需要设置视图信息，在VisitorView类中新建一个设置视图信息的方法setupInfo（），具体代码如下。"><a href="#根据前面描述的界面得知，各个控制器的图标和文字各不相同，所以我们需要设置视图信息，在VisitorView类中新建一个设置视图信息的方法setupInfo（），具体代码如下。" class="headerlink" title="根据前面描述的界面得知，各个控制器的图标和文字各不相同，所以我们需要设置视图信息，在VisitorView类中新建一个设置视图信息的方法setupInfo（），具体代码如下。"></a>根据前面描述的界面得知，各个控制器的图标和文字各不相同，所以我们需要设置视图信息，在VisitorView类中新建一个设置视图信息的方法setupInfo（），具体代码如下。</h3><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210519144041393.png" alt="image-20210519144041393" style="zoom: 50%;"><p>可以通过imageName参数传入每个控制需要显示的图片，通过titIe传入每个控制器需要显示的消息文字。设置视图的方法完成之后，我们可以看到，<strong>setupInfo是准备在VisitorView中的，而VisitorView则是在VisitorTabIeViewControIIer中定义的，所以在别的控制器中无法拿到VisitorView</strong>，那么，接下来修改VisitorTabIeViewControIIer中的代码，修改后的代码如下。</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210519144916442.png" alt="image-20210519144916442" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//访客视图</span><br><span class="line">var visitorView: VisitorView?</span><br><span class="line"></span><br><span class="line">        //替换根视图</span><br><span class="line">    visitorView = VisitorView ()</span><br><span class="line">    view = visitorView</span><br></pre></td></tr></table></figure><p>上面的代码中，首先声明一个访客视图，接下来在接收VisitorView，最后在将view替换成visitorView。接下来分别在其他控制器中访问VisitorView的setupInfo方法设置各个控制器的图片和消息文字。四个控制器中的代码分别如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line">class HomeViewController: VisitorTableViewController &#123;</span><br><span class="line"></span><br><span class="line">    override func viewDidLoad() &#123;</span><br><span class="line">        super.viewDidLoad()</span><br><span class="line"></span><br><span class="line">        visitorView?.setupInfo(imageName: nil, title: &quot;关注一些人,回这里看看有什么惊喜&quot;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line">class MessageViewController: VisitorTableViewController &#123;</span><br><span class="line"></span><br><span class="line">    override func viewDidLoad() &#123;</span><br><span class="line">        super.viewDidLoad()</span><br><span class="line"></span><br><span class="line">        visitorView?.setupInfo(imageName: &quot;visitordiscover_image_message&quot;, title: &quot;登录后,别人评论你的微博,发给你的消息,都会在这里收到通知&quot;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line">class DiscoverViewController: VisitorTableViewController &#123;</span><br><span class="line"></span><br><span class="line">    override func viewDidLoad() &#123;</span><br><span class="line">        super.viewDidLoad()</span><br><span class="line"></span><br><span class="line">        visitorView?.setupInfo(imageName: &quot;visitordiscover_image_message&quot;, title: &quot;登录后,最新、最热微博尽在掌握,不再会与实事潮流擦肩而过&quot;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line">class ProfileViewController: VisitorTableViewController &#123;</span><br><span class="line"></span><br><span class="line">    override func viewDidLoad() &#123;</span><br><span class="line">        super.viewDidLoad()</span><br><span class="line"></span><br><span class="line">        visitorView?.setupInfo(imageName: &quot;visitordiscover_image_profile&quot;, title: &quot;登录后,你的微博、相册、个人资料会显示在这里,展示给别人&quot;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/IMG_1002.JPG" alt="IMG_1002" style="zoom: 67%;"><p>虽然图片已经设置完成，但是后面的界面中仍然显示了小房子图片和遮罩图像，这是因为在VisitorView中默认添加了小房子图片和遮罩图像，所以在这里如果不是首页，可以将小房子图片隐藏，并将遮罩图像移动到底层，在设置视图信息的方法setupInfo（）中，在guard Iet后面添加代码，代码如下。</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210519150515444.png" alt="image-20210519150515444" style="zoom:50%;"><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/IMG_10022.JPG" alt="IMG_10022"></p><h3 id="为首页转轮图片设置动画"><a href="#为首页转轮图片设置动画" class="headerlink" title="为首页转轮图片设置动画"></a>为首页转轮图片设置动画</h3><p>转轮图片会一直转动，这种转动的效果是通过动画来实现的。接下来，在VisitorView类中声明一个开启首页转轮动画的方法startAnim（），代码如下</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210519151157572.png" alt="image-20210519151157572" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//旋转图标动画(首页)</span><br><span class="line">private func startAnimation() &#123;</span><br><span class="line">    let anim = CABasicAnimation(keyPath: &quot;transform.rotation&quot;)</span><br><span class="line">    </span><br><span class="line">    anim.toValue = 2 * Double.pi</span><br><span class="line">    anim.repeatCount = MAXFLOAT</span><br><span class="line">    anim.duration = 15</span><br><span class="line">    </span><br><span class="line">    //动画完成不删除，如果 iconView 被释放，动画一定会被销毁</span><br><span class="line">    //属性在设置连续播放动画非常有用</span><br><span class="line">    anim.isRemovedOnCompletion = false</span><br><span class="line">    </span><br><span class="line">    //将动画添加到图层</span><br><span class="line">    iconView.layer.add(anim, forKey: nil)</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来在setupInfo方法的guard Iet中return之前调用转轮动画的方法，代码如下。</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210519151700070.png" alt="image-20210519151700070" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//播插动画</span><br><span class="line">startAnimation()</span><br></pre></td></tr></table></figure><p>运行发现有动画了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;项目架构如下：&quot;&gt;&lt;a href=&quot;#项目架构如下：&quot; class=&quot;headerlink&quot; title=&quot;项目架构如下：&quot;&gt;&lt;/a&gt;项目架构如下：&lt;/h2&gt;&lt;h2 id&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title&gt;&lt;/a&gt;&lt;img </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>oc版本的新闻App（9）</title>
    <link href="http://example.com/2019/04/22/oc%E7%89%88%E6%9C%AC%E7%9A%84%E6%96%B0%E9%97%BBApp%EF%BC%889%EF%BC%89/"/>
    <id>http://example.com/2019/04/22/oc%E7%89%88%E6%9C%AC%E7%9A%84%E6%96%B0%E9%97%BBApp%EF%BC%889%EF%BC%89/</id>
    <published>2019-04-22T04:49:00.000Z</published>
    <updated>2021-02-01T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Crash的上报技术方案对比"><a href="#Crash的上报技术方案对比" class="headerlink" title="Crash的上报技术方案对比"></a>Crash的上报技术方案对比</h1><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117172131297.png" alt="image-20210117172131297"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;GTStaicTest.h&quot;</span><br><span class="line">#include &lt;execinfo.h&gt;</span><br><span class="line">#import &lt;TencentOpenAPI/TencentOAuth.h&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117172203997.png" alt="image-20210117172203997"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    [self _caughtException];</span><br><span class="line">    [@[].mutableCopy addObject:nil];</span><br><span class="line">//    static库的集成</span><br><span class="line">//    [[GTStaicTest alloc] init];</span><br><span class="line">    </span><br><span class="line">    //framework的集成</span><br><span class="line">    //[[GTFrameworkTest alloc] init];</span><br><span class="line">    </span><br><span class="line">    //测试crash收集</span><br><span class="line">    //[self _caughtException];</span><br><span class="line">    //[@[].mutableCopy addObject:nil];</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117172257202.png" alt="image-20210117172257202"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#pragma mark - CRASH</span><br><span class="line"></span><br><span class="line">- (void)_caughtException&#123;</span><br><span class="line">    //NSexception</span><br><span class="line">    NSSetUncaughtExceptionHandler(HandleNSException);</span><br><span class="line">    </span><br><span class="line">    //signal</span><br><span class="line">    signal(SIGABRT, SignalExceptionHandler);</span><br><span class="line">    signal(SIGILL, SignalExceptionHandler);</span><br><span class="line">    signal(SIGSEGV, SignalExceptionHandler);</span><br><span class="line">    signal(SIGFPE, SignalExceptionHandler);</span><br><span class="line">    signal(SIGBUS, SignalExceptionHandler);</span><br><span class="line">    signal(SIGPIPE, SignalExceptionHandler);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void SignalExceptionHandler(int signal)&#123;</span><br><span class="line">    void* callstack[128];</span><br><span class="line">    int frames = backtrace(callstack, 128);</span><br><span class="line">    char **strs = backtrace_symbols(callstack, frames);</span><br><span class="line">    NSMutableArray *backtrace = [NSMutableArray arrayWithCapacity:frames];</span><br><span class="line">    for (int i = 0; i &lt; frames; i++) &#123;</span><br><span class="line">        [backtrace addObject:[NSString stringWithUTF8String:strs[i]]];</span><br><span class="line">    &#125;</span><br><span class="line">    free(strs);</span><br><span class="line">    //存储crash信息。</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HandleNSException(NSException *exception)&#123;</span><br><span class="line">    __unused NSString *reason = [exception reason];</span><br><span class="line">    __unused NSString *name = [exception name];</span><br><span class="line">    //存储crash信息。</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="定位和请求位置权限"><a href="#定位和请求位置权限" class="headerlink" title="定位和请求位置权限"></a>定位和请求位置权限</h1><p>新建GTLocation(NSObject)</p><h2 id="完成了单例的类"><a href="#完成了单例的类" class="headerlink" title="完成了单例的类"></a>完成了单例的类</h2><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514122910276.png" alt="image-20210514122910276"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;GTLocation.h&quot;</span><br><span class="line"></span><br><span class="line">@interface GTLocation()</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation GTLocation</span><br><span class="line"></span><br><span class="line">+ (GTLocation *)locationManager&#123;</span><br><span class="line">    static GTLocation *location;</span><br><span class="line">    static dispatch_once_t onceToken;</span><br><span class="line">    dispatch_once(&amp;onceToken, ^&#123;</span><br><span class="line">        location = [[GTLocation alloc] init];</span><br><span class="line">    &#125;);</span><br><span class="line">    return location;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (instancetype)init&#123;</span><br><span class="line">    self = [super init];</span><br><span class="line">    if (self) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    return self;</span><br><span class="line">&#125;</span><br><span class="line">@end</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117182054304.png" alt="image-20210117182054304"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_BEGIN</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> App中统一的位置信息管理</span><br><span class="line"> */</span><br><span class="line">@interface GTLocation : NSObject</span><br><span class="line"></span><br><span class="line">+ (GTLocation *)locationManager;</span><br><span class="line"></span><br><span class="line">- (void)checkLocationAuthorization;</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_END</span><br></pre></td></tr></table></figure><h3 id="首次安装请求位置权限的获取"><a href="#首次安装请求位置权限的获取" class="headerlink" title="首次安装请求位置权限的获取"></a>首次安装请求位置权限的获取</h3><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117183431199.png" alt="image-20210117183431199" style="zoom:50%;"><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117182925438.png" alt="image-20210117182925438"></p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117185026565.png" alt="image-20210117185026565" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;CoreLocation/CoreLocation.h&gt;</span><br><span class="line"></span><br><span class="line">@interface GTLocation()&lt;CLLocationManagerDelegate&gt;</span><br><span class="line">@property(nonatomic, strong, readwrite) CLLocationManager *manager;</span><br><span class="line"></span><br><span class="line">        self.manager = [[CLLocationManager alloc] init];</span><br><span class="line">        self.manager.delegate = self;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">//判断APP相应的状态</span><br><span class="line">- (void)checkLocationAuthorization&#123;</span><br><span class="line">    </span><br><span class="line">    //判断系统是否开启</span><br><span class="line">    if(![CLLocationManager locationServicesEnabled])&#123;</span><br><span class="line">        //引导弹窗</span><br><span class="line">        //</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    if([CLLocationManager authorizationStatus] == kCLAuthorizationStatusNotDetermined)&#123;</span><br><span class="line">        [self.manager requestWhenInUseAuthorization];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">#pragma mark - delegate</span><br><span class="line"></span><br><span class="line">- (void)locationManager:(CLLocationManager *)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status&#123;</span><br><span class="line">    if (status == kCLAuthorizationStatusAuthorizedWhenInUse) &#123;</span><br><span class="line">        //</span><br><span class="line">        [self.manager startUpdatingLocation];</span><br><span class="line">        </span><br><span class="line">    &#125;else if (status == kCLAuthorizationStatusDenied)&#123;</span><br><span class="line">        //</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117185924011.png" alt="image-20210117185924011"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117185938825.png" alt="image-20210117185938825"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;GTLocation.h&quot;</span><br><span class="line"></span><br><span class="line">[[GTLocation locationManager] checkLocationAuthorization];</span><br></pre></td></tr></table></figure><h3 id="获取当前位置信息"><a href="#获取当前位置信息" class="headerlink" title="获取当前位置信息"></a><em>获取当前位置信息</em></h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514123220586.png" alt="image-20210514123220586"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">- (void)locationManager:(CLLocationManager *)manager</span><br><span class="line">     didUpdateLocations:(NSArray&lt;CLLocation *&gt; *)locations &#123;</span><br><span class="line">    </span><br><span class="line">    //地理信息</span><br><span class="line">    CLLocation *location = [locations firstObject];</span><br><span class="line">    </span><br><span class="line">    CLGeocoder *coder = [[CLGeocoder alloc] init];</span><br><span class="line">    </span><br><span class="line">    [coder reverseGeocodeLocation:location completionHandler:^(NSArray&lt;CLPlacemark *&gt; * _Nullable placemarks, NSError * _Nullable error) &#123;</span><br><span class="line">        //地标信息</span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">     [self.manager stopUpdatingLocation];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="推送"><a href="#推送" class="headerlink" title="推送"></a>推送</h1><h2 id="新建单例GTNotification-NSObject"><a href="#新建单例GTNotification-NSObject" class="headerlink" title="新建单例GTNotification(NSObject)"></a>新建单例GTNotification(NSObject)</h2><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117224357716.png" alt="image-20210117224357716"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;GTNotification.h&quot;</span><br><span class="line">#import &lt;UserNotifications/UserNotifications.h&gt;</span><br><span class="line"></span><br><span class="line">@interface GTNotification ()&lt;UNUserNotificationCenterDelegate&gt;</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation GTNotification</span><br><span class="line">+ (GTNotification *)notificationManager&#123;</span><br><span class="line">    static GTNotification *manager;</span><br><span class="line">    static dispatch_once_t onceToken;</span><br><span class="line">    dispatch_once(&amp;onceToken, ^&#123;</span><br><span class="line">        manager = [[GTNotification alloc] init];</span><br><span class="line">    &#125;);</span><br><span class="line">    return manager;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)checkNotificationAuthorization&#123;</span><br><span class="line">    </span><br><span class="line">    UNUserNotificationCenter *center = [UNUserNotificationCenter currentNotificationCenter];</span><br><span class="line">    center.delegate = self;</span><br><span class="line">    [center requestAuthorizationWithOptions:UNAuthorizationOptionBadge | UNAuthorizationOptionSound completionHandler:^(BOOL granted, NSError * _Nullable error) &#123;</span><br><span class="line">        NSLog(@&quot;&quot;);</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117224431147.png" alt="image-20210117224431147"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_BEGIN</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> APP 推送管理</span><br><span class="line"> */</span><br><span class="line">@interface GTNotification : NSObject</span><br><span class="line"></span><br><span class="line">+ (GTNotification *)notificationManager;</span><br><span class="line"></span><br><span class="line">- (void)checkNotificationAuthorization;//效验权限的方法</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_END</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117224516134.png" alt="image-20210117224516134"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117224553185.png" alt="image-20210117224553185"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;GTNotification.h&quot;</span><br><span class="line"></span><br><span class="line">[[GTNotification notificationManager] checkNotificationAuthorization];</span><br></pre></td></tr></table></figure><h2 id="实现本地推送"><a href="#实现本地推送" class="headerlink" title="实现本地推送"></a>实现本地推送</h2><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514123601280.png" alt="image-20210514123601280"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117231013306.png" alt="image-20210117231013306"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117231031479.png" alt="image-20210117231031479"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">if (granted) &#123;</span><br><span class="line">            //本地推送</span><br><span class="line">            [self _pushLocalNotification];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark -</span><br><span class="line"></span><br><span class="line">- (void)_pushLocalNotification&#123;</span><br><span class="line">    </span><br><span class="line">    UNMutableNotificationContent *content = [[UNMutableNotificationContent alloc] init];</span><br><span class="line">    content.badge = @(1);</span><br><span class="line">    content.title = @&quot;北京时间&quot;;</span><br><span class="line">    content.body = @&quot;这是一款iOS App&quot;;</span><br><span class="line">    content.sound = [UNNotificationSound defaultSound];</span><br><span class="line">    </span><br><span class="line">    UNTimeIntervalNotificationTrigger *trigger = [UNTimeIntervalNotificationTrigger triggerWithTimeInterval:30.f repeats:NO];</span><br><span class="line">    </span><br><span class="line">    UNNotificationRequest *request = [UNNotificationRequest requestWithIdentifier:@&quot;_pushLocalNotification&quot; content:content trigger:trigger];</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    [[UNUserNotificationCenter currentNotificationCenter] addNotificationRequest:request withCompletionHandler:^(NSError * _Nullable error) &#123;</span><br><span class="line">        //</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">  2      </span><br><span class="line">#pragma mark -</span><br><span class="line"></span><br><span class="line">- (void)userNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(void (^)(UNNotificationPresentationOptions options))completionHandler&#123;</span><br><span class="line">    completionHandler(UNNotificationPresentationOptionBanner);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void(^)(void))completionHandler &#123;</span><br><span class="line">    </span><br><span class="line">    //处理badge展示逻辑</span><br><span class="line">    //点击之后根据业务逻辑处理</span><br><span class="line">    //[UIApplication sharedApplication].applicationIconBadgeNumber = 100;</span><br><span class="line"></span><br><span class="line">    //处理业务逻辑</span><br><span class="line">    completionHandler();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Crash的上报技术方案对比&quot;&gt;&lt;a href=&quot;#Crash的上报技术方案对比&quot; class=&quot;headerlink&quot; title=&quot;Crash的上报技术方案对比&quot;&gt;&lt;/a&gt;Crash的上报技术方案对比&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://gite</summary>
      
    
    
    
    
  </entry>
  
</feed>
