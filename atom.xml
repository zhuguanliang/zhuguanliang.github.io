<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我不是诸葛亮</title>
  
  <subtitle>宁可碌碌，不可无为</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-02-22T06:49:00.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>zhuguanliang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>适合学习——swift版基于MVVM模式的网络API调用Demo</title>
    <link href="http://example.com/2021/02/22/MVVM%E7%9A%84%E7%BD%91%E7%BB%9CAPI%E8%B0%83%E7%94%A8Demo/"/>
    <id>http://example.com/2021/02/22/MVVM%E7%9A%84%E7%BD%91%E7%BB%9CAPI%E8%B0%83%E7%94%A8Demo/</id>
    <published>2021-02-22T04:49:00.000Z</published>
    <updated>2021-02-22T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="学习目标："><a href="#学习目标：" class="headerlink" title="学习目标："></a>学习目标：</h3><ul><li>以纯代码方式构建完整的应用，使用 NSCache 缓存图像</li><li>学习网络API的调用</li><li>学习MVVM设计模式</li><li>学习构建可重用视图</li><li>自定义带阴影的图像视图</li></ul><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/May-27-2021%2000-41-52.gif" alt="May-27-2021 00-41-52" style="zoom:50%;"><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/May-27-2021%2000-44-06.gif" alt="May-27-2021 00-44-06" style="zoom:50%;"></p><p>API取自<strong><a href="https://newsapi.org/">https://newsapi.org</a></strong>，自己申请下APIKey，完全免费，如上不了网页请用科学方法试试</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527005243522.png" alt="image-20210527005243522" style="zoom:50%;"><p>项目目录结构如下</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527010103004.png" alt="image-20210527010103004" style="zoom:33%;"><h3 id="以纯代码方式创建应用"><a href="#以纯代码方式创建应用" class="headerlink" title="以纯代码方式创建应用"></a>以纯代码方式创建应用</h3><p>SceneDelegate的代码进行修改，定义下初始视图控制器</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527004641210.png" alt="image-20210527004641210"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">guard let windowScene = (scene as? UIWindowScene) else &#123; return &#125;</span><br><span class="line"></span><br><span class="line">window = UIWindow(windowScene: windowScene)</span><br><span class="line">window = UIWindow(frame: UIScreen.main.bounds)</span><br><span class="line">window?.windowScene = windowScene</span><br><span class="line">let viewController = ViewController()</span><br><span class="line">window?.rootViewController = viewController</span><br><span class="line">window?.makeKeyAndVisible()</span><br></pre></td></tr></table></figure><p>同时删除main与Main.storyboard</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210525220551653.png" alt="image-20210525220551653" style="zoom:50%;"><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527004836452.png" alt="image-20210527004836452"></p><h3 id="创建视图模型"><a href="#创建视图模型" class="headerlink" title="创建视图模型"></a>创建视图模型</h3><h3 id="创建APIkey"><a href="#创建APIkey" class="headerlink" title="创建APIkey"></a>创建APIkey</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527005111733.png" alt="image-20210527005111733"></p><h3 id="创建模型"><a href="#创建模型" class="headerlink" title="创建模型"></a>创建模型</h3><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527005332523.png" alt="image-20210527005332523" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import Foundation</span><br><span class="line"></span><br><span class="line">struct News: Decodable &#123;</span><br><span class="line">    let author : String?</span><br><span class="line">    let title : String?</span><br><span class="line">    let description : String?</span><br><span class="line">    let url : String?</span><br><span class="line">    let urlToImage : String?</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">struct NewsEnvelope: Decodable &#123;</span><br><span class="line">    let Status : String?</span><br><span class="line">    let totalResuls : String?</span><br><span class="line">    let articles : [News]</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h3 id="创建网络服务NetworkManager-swift"><a href="#创建网络服务NetworkManager-swift" class="headerlink" title="创建网络服务NetworkManager.swift"></a>创建网络服务NetworkManager.swift</h3><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527005423935.png" alt="image-20210527005423935" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">import Foundation</span><br><span class="line"></span><br><span class="line">class NetworkManager &#123;</span><br><span class="line">    let imageCache = NSCache&lt;NSString,NSData&gt;()</span><br><span class="line">    static let shared = NetworkManager()</span><br><span class="line">    private init () &#123;&#125;</span><br><span class="line">    </span><br><span class="line">    private let baseUrlString = &quot;https://newsapi.org/v2/&quot;</span><br><span class="line">    private let USTopHeadline = &quot;top-headlines?country=us&quot;</span><br><span class="line">    </span><br><span class="line">    func getNews(Completion: @escaping ([News]?) -&gt; Void) &#123;</span><br><span class="line">        </span><br><span class="line">        let urlString = &quot;\(baseUrlString)\(USTopHeadline)&amp;apikey=\(APIKey.key)&quot;</span><br><span class="line">        guard let url = URL(string: urlString) else &#123;</span><br><span class="line">            return</span><br><span class="line">        &#125;</span><br><span class="line">        URLSession.shared.dataTask(with: url) &#123; (date, response, error) in</span><br><span class="line">            guard error == nil, let data = date else&#123;</span><br><span class="line">                Completion(nil)</span><br><span class="line">                return</span><br><span class="line">            &#125;</span><br><span class="line">            let newsEnvelope = try? JSONDecoder().decode(NewsEnvelope.self, from: data)</span><br><span class="line">            newsEnvelope == nil ? Completion(nil) : Completion(newsEnvelope!.articles)</span><br><span class="line">        &#125;.resume()</span><br><span class="line">    &#125;</span><br><span class="line">    func getImage(urlString: String,Completion: @escaping (Data?) -&gt; Void) &#123;</span><br><span class="line">        guard let url = URL(string: urlString) else &#123;</span><br><span class="line">            Completion(nil)</span><br><span class="line">            return</span><br><span class="line">        &#125;</span><br><span class="line">        if let cachedImage = imageCache.object(forKey: NSString(string: urlString)) &#123;</span><br><span class="line">            Completion(cachedImage as Data)</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            URLSession.shared.dataTask(with: url) &#123; (date, response, error) in</span><br><span class="line">                guard error == nil, let data = date else&#123;</span><br><span class="line">                    Completion(nil)</span><br><span class="line">                    return</span><br><span class="line">                &#125;</span><br><span class="line">                self.imageCache.setObject(date as! NSData, forKey: NSString(string: urlString))</span><br><span class="line">                Completion(date)</span><br><span class="line">                </span><br><span class="line">            &#125;.resume()</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建网络服务NewViewModel.swift</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">import Foundation</span><br><span class="line"></span><br><span class="line">struct NewsViewModel &#123;</span><br><span class="line">    let news : News</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    var author : String &#123;</span><br><span class="line">        return news.author ?? &quot;Unknown&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    var title : String &#123;</span><br><span class="line">        return news.title ?? &quot;&quot;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    var description : String &#123;</span><br><span class="line">        return news.description ?? &quot;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    var url : String &#123;</span><br><span class="line">        return news.url ?? &quot;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    var urlToImage : String &#123;</span><br><span class="line">        return news.urlToImage ?? &quot;https://www.kindpng.com/picc/m/182-1827064_breaking-news-banner-png-transparent-background-breaking-news.png&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="创建NewsListViewModel-swift"><a href="#创建NewsListViewModel-swift" class="headerlink" title="创建NewsListViewModel.swift"></a>创建NewsListViewModel.swift</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import Foundation</span><br><span class="line"></span><br><span class="line">class  NewsListViewModel &#123;</span><br><span class="line">    var newsVM = [NewsViewModel]()</span><br><span class="line">    </span><br><span class="line">    let reauseID = &quot;news&quot;</span><br><span class="line">    func getNews(Completion: @escaping ([NewsViewModel]) -&gt; Void) &#123;</span><br><span class="line">        NetworkManager.shared.getNews &#123; (news) in</span><br><span class="line">            guard let news = news else &#123;  return &#125;</span><br><span class="line">            let newsVM = news.map(NewsViewModel.init)</span><br><span class="line">            DispatchQueue.main.async &#123;</span><br><span class="line">                self.newsVM = newsVM</span><br><span class="line">                Completion(newsVM)</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建NewsTableViewCell-swift"><a href="#创建NewsTableViewCell-swift" class="headerlink" title="创建NewsTableViewCell.swift"></a>创建NewsTableViewCell.swift</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line">final class NewsTableViewCell : UITableViewCell &#123;</span><br><span class="line">    var newsVM: NewsViewModel? &#123;</span><br><span class="line">        didSet&#123;</span><br><span class="line">            if let newsVM = newsVM &#123;</span><br><span class="line">                titleLabel.text = newsVM.title</span><br><span class="line">                </span><br><span class="line">                NetworkManager.shared.getImage(urlString: newsVM.urlToImage) &#123; (data) in</span><br><span class="line">                    guard let data = data else &#123; return &#125;</span><br><span class="line">                    DispatchQueue.main.async &#123;</span><br><span class="line">                        self.newsImage.image = UIImage(data: data)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    var newsImageData: Data? &#123;</span><br><span class="line">        didSet&#123;</span><br><span class="line">            if let data = newsImageData &#123;</span><br><span class="line">                newsImage.image = UIImage(data: data)</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private lazy var newsImage: ShadowImageView = &#123;</span><br><span class="line">        let v = ShadowImageView()</span><br><span class="line">        v.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        return v</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    private lazy var titleLabel: UILabel = &#123;</span><br><span class="line">        let v = UILabel()</span><br><span class="line">        v.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        v.numberOfLines = 0</span><br><span class="line">        return v</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    override init(style: UITableViewCell.CellStyle, reuseIdentifier: String?) &#123;</span><br><span class="line">        super.init(style: style, reuseIdentifier : reuseIdentifier)</span><br><span class="line">        selectionStyle = .none</span><br><span class="line">        setupView()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    required init?(coder: NSCoder) &#123;</span><br><span class="line">        fatalError(&quot;init(coder:) has not been implemented&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    func setupView() &#123;</span><br><span class="line">        addSubview(titleLabel)</span><br><span class="line">        addSubview(newsImage)</span><br><span class="line">        setupConstraints()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    func setupConstraints() &#123;</span><br><span class="line">        </span><br><span class="line">        //news image</span><br><span class="line">        NSLayoutConstraint.activate([</span><br><span class="line">            newsImage.leadingAnchor.constraint(equalTo: leadingAnchor),</span><br><span class="line">            newsImage.trailingAnchor.constraint(equalTo: trailingAnchor),</span><br><span class="line">            newsImage.topAnchor.constraint(equalTo: topAnchor),</span><br><span class="line">            newsImage.heightAnchor.constraint(equalToConstant: 200)</span><br><span class="line">        ])</span><br><span class="line">        //title</span><br><span class="line">        NSLayoutConstraint.activate([</span><br><span class="line">            titleLabel.leadingAnchor.constraint(equalTo: leadingAnchor, constant: 16),</span><br><span class="line">            titleLabel.trailingAnchor.constraint(equalTo: trailingAnchor, constant: -16),</span><br><span class="line">            titleLabel.topAnchor.constraint(equalTo: newsImage.bottomAnchor, constant: 8),</span><br><span class="line">            titleLabel.bottomAnchor.constraint(equalTo: bottomAnchor, constant: -16)</span><br><span class="line">        ])</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建阴影ShadowImageView-swift"><a href="#创建阴影ShadowImageView-swift" class="headerlink" title="创建阴影ShadowImageView.swift"></a>创建阴影ShadowImageView.swift</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line">final class ShadowImageView : UIView &#123;</span><br><span class="line">    var image: UIImage? &#123;</span><br><span class="line">        didSet&#123;</span><br><span class="line">            imageView.image = image</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private lazy var imageView : UIImageView = &#123;</span><br><span class="line">        let v = UIImageView()</span><br><span class="line">        v.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        v.contentMode = .scaleAspectFill</span><br><span class="line">        v.layer.cornerRadius = 20</span><br><span class="line">        v.clipsToBounds = true</span><br><span class="line">        return v</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    private lazy var baseView : UIView = &#123;</span><br><span class="line">        let v = UIView()</span><br><span class="line">        v.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        v.backgroundColor = .clear</span><br><span class="line">        v.layer.shadowColor = UIColor.black.cgColor</span><br><span class="line">        v.layer.shadowOffset = CGSize(width: 5, height: 5)</span><br><span class="line">        v.layer.shadowOpacity = 0.7</span><br><span class="line">        v.layer.cornerRadius = 10</span><br><span class="line">        return v</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    init() &#123;</span><br><span class="line">        super.init(frame: .zero)</span><br><span class="line">        </span><br><span class="line">        setupView()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    required init?(coder: NSCoder) &#123;</span><br><span class="line">        fatalError(&quot;init(coder:) has not been implemented&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    func setupView()  &#123;</span><br><span class="line">        </span><br><span class="line">        addSubview(baseView)</span><br><span class="line">        baseView.addSubview(imageView)</span><br><span class="line">        setupConstraints()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    func setupConstraints()  &#123;</span><br><span class="line">        [baseView, imageView].forEach &#123; (v) in</span><br><span class="line">            NSLayoutConstraint.activate([</span><br><span class="line">            v.leadingAnchor.constraint(equalTo: leadingAnchor, constant: 16),</span><br><span class="line">            v.trailingAnchor.constraint(equalTo: trailingAnchor, constant: -16),</span><br><span class="line">            v.topAnchor.constraint(equalTo: topAnchor, constant: 16),</span><br><span class="line">            v.bottomAnchor.constraint(equalTo: bottomAnchor, constant: -16)</span><br><span class="line">            ])</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        func  layoutSubviews() &#123;</span><br><span class="line">        super.layoutSubviews()</span><br><span class="line">        baseView.layer.shadowPath = UIBezierPath(roundedRect: baseView.bounds, cornerRadius: 10).cgPath</span><br><span class="line">        baseView.layer.shouldRasterize = true</span><br><span class="line">        baseView.layer.rasterizationScale = UIScreen.main.scale</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建HeaderView-swift"><a href="#创建HeaderView-swift" class="headerlink" title="创建HeaderView.swift"></a>创建HeaderView.swift</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">final class HeaderView : UIView &#123;</span><br><span class="line">    </span><br><span class="line">    private var fontSize: CGFloat</span><br><span class="line">    </span><br><span class="line">    private lazy var headinglabel : UILabel = &#123;</span><br><span class="line">        let v = UILabel()</span><br><span class="line">        v.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        v.text = &quot;新闻&quot;</span><br><span class="line">        v.font = UIFont.boldSystemFont(ofSize: fontSize)</span><br><span class="line">        return v</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    private lazy var headingCircImage : UIImageView = &#123;</span><br><span class="line">        let v = UIImageView()</span><br><span class="line">        v.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        v.contentMode = .scaleAspectFit</span><br><span class="line">        let config = UIImage.SymbolConfiguration(pointSize: fontSize, weight: .bold)</span><br><span class="line">        v.image = UIImage(systemName: &quot;btn_live_selected.png&quot;, withConfiguration: config)?.withRenderingMode(.alwaysOriginal)</span><br><span class="line">        return v</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    private lazy var plusImage: UIImageView = &#123;</span><br><span class="line">        let v = UIImageView()</span><br><span class="line">        v.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        let config = UIImage.SymbolConfiguration(pointSize: fontSize, weight: .bold)</span><br><span class="line">        v.image = UIImage(systemName: &quot;plus&quot;, withConfiguration: config)?.withRenderingMode(.alwaysOriginal)</span><br><span class="line">        return v</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    private lazy var subheadlineLabel: UILabel = &#123;</span><br><span class="line">        let v = UILabel()</span><br><span class="line">        v.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        v.font = v.font.withSize(fontSize)</span><br><span class="line">        v.text = &quot;Top Headlines&quot;</span><br><span class="line">        v.textColor = .gray</span><br><span class="line">        return v</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    private lazy var headerStackView: UIStackView = &#123;</span><br><span class="line">        let v = UIStackView(arrangedSubviews: [headingCircImage, headinglabel, plusImage])</span><br><span class="line">        v.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        v.axis = .horizontal</span><br><span class="line">        return v</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    init(fontSize: CGFloat)&#123;</span><br><span class="line">        self.fontSize = fontSize</span><br><span class="line">        super.init(frame: .zero)</span><br><span class="line">        translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        setupView()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    required init?(coder: NSCoder) &#123;</span><br><span class="line">        fatalError(&quot;init(coder:) has not been implemented&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    func setupView()  &#123;</span><br><span class="line">        </span><br><span class="line">        addSubview(headerStackView)</span><br><span class="line">        addSubview(subheadlineLabel)</span><br><span class="line">        setupConstraints()</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    func setupConstraints()  &#123;</span><br><span class="line">        //new header</span><br><span class="line">        NSLayoutConstraint.activate([</span><br><span class="line">            headerStackView.leadingAnchor.constraint(equalTo: leadingAnchor),</span><br><span class="line">            headerStackView.topAnchor.constraint(equalTo: topAnchor)</span><br><span class="line">        ])</span><br><span class="line">        </span><br><span class="line">        //subheadline</span><br><span class="line">        NSLayoutConstraint.activate([</span><br><span class="line">            subheadlineLabel.leadingAnchor.constraint(equalTo: leadingAnchor),</span><br><span class="line">            subheadlineLabel.topAnchor.constraint(equalTo: headerStackView.bottomAnchor, constant: 8),</span><br><span class="line">            subheadlineLabel.bottomAnchor.constraint(equalTo: bottomAnchor)</span><br><span class="line">        ])</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;学习目标：&quot;&gt;&lt;a href=&quot;#学习目标：&quot; class=&quot;headerlink&quot; title=&quot;学习目标：&quot;&gt;&lt;/a&gt;学习目标：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;以纯代码方式构建完整的应用，使用 NSCache 缓存图像&lt;/li&gt;
&lt;li&gt;学习网络API的调用&lt;/l</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>线程之间的通信</title>
    <link href="http://example.com/2021/01/28/%E4%BD%BF%E7%94%A8%20GCD%20%E5%AE%9E%E7%8E%B0%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%89%AF%E6%9C%AC/"/>
    <id>http://example.com/2021/01/28/%E4%BD%BF%E7%94%A8%20GCD%20%E5%AE%9E%E7%8E%B0%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%89%AF%E6%9C%AC/</id>
    <published>2021-01-28T09:15:13.000Z</published>
    <updated>2021-05-27T09:42:43.855Z</updated>
    
    <content type="html"><![CDATA[<p>线程之间的通信</p><p>1)从子线程回到主线程</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="type">DispatchQueue</span>.global().async&#123;</span><br><span class="line"><span class="comment">//执行耗时的异步操作. </span></span><br><span class="line">   <span class="type">DispatchQueue</span>.main.async(</span><br><span class="line"><span class="comment">//回到主线程，执行 UI 刷新操作</span></span><br><span class="line">     <span class="built_in">print</span>(<span class="string">&quot;done&quot;</span>)</span><br></pre></td></tr></table></figure><p>2)线程之间通信的具体实现实例</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> imageView: <span class="type">UIlmageView</span>? <span class="function"><span class="keyword">func</span> <span class="title">queuesCommunication</span>()</span>&#123;</span><br><span class="line">    <span class="comment">//创建异步全局并发队列 DispatchQueue.global().async!</span></span><br><span class="line">    <span class="comment">//图片的网络路径</span></span><br><span class="line">    <span class="keyword">let</span> imageUrl <span class="operator">=</span> <span class="type">URL</span>(string: <span class="string">&quot;http://xxx.jpg&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> url <span class="operator">=</span> imageUrl (</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">        <span class="comment">//加载图片</span></span><br><span class="line">        <span class="keyword">let</span> data <span class="operator">=</span> <span class="keyword">try</span> <span class="type">Data</span>(contentsOf: url)</span><br><span class="line">        <span class="comment">//生成图片</span></span><br><span class="line">        <span class="keyword">let</span> image <span class="operator">=</span> <span class="type">UImage</span>(data: data)</span><br><span class="line">        <span class="comment">//回到主线程设置图片</span></span><br><span class="line">        <span class="type">DispatchQueue</span>.main.async</span><br><span class="line">        selfimageView<span class="operator">?</span>.image <span class="operator">=</span> image</span><br><span class="line">        </span><br><span class="line">        ) <span class="keyword">catch</span> &#123; &#125;</span><br><span class="line">        </span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;线程之间的通信&lt;/p&gt;
&lt;p&gt;1)从子线程回到主线程&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>使用 GCD 实现多线程</title>
    <link href="http://example.com/2021/01/27/%E4%BD%BF%E7%94%A8%20GCD%20%E5%AE%9E%E7%8E%B0%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    <id>http://example.com/2021/01/27/%E4%BD%BF%E7%94%A8%20GCD%20%E5%AE%9E%E7%8E%B0%E5%A4%9A%E7%BA%BF%E7%A8%8B/</id>
    <published>2021-01-27T09:15:13.000Z</published>
    <updated>2021-05-27T09:37:30.564Z</updated>
    
    <content type="html"><![CDATA[<p><strong>使用 GCD 实现多线程</strong></p><p> GCD(Grand Central Dispatch)是苹果公司开发的一种旨在优化多核环境中的并发操作，以取代传统多线程技术的编程模式。它是基于C语言的线程管理方案，使用者无需过多参与线程的管理，只需要将想要执行的代码添加到调度队列即可。<br> GCD的工作原理如下:<br>(1)让程序平行排队的特定任务，根据可用的处理资源，安排它们在任何可用的处理器核心上执行任务。<br>(2)要执行的任务可以是一个函数或者一个Block<br>(3)GCD中的FIFO队列称为 Dispatch Queue，可以保证先进来的任务先得到执行。(4)notify()方法可以实现监听一组任务是否完成，完成后得到通知。</p><p> GCD的底层依然是用线程实现，不过我们可以不用关注实现的细节。Dispatch Queue(调度队列)可以是并发的或串行的，也可以异步或同步执行。</p><p>(1)GCD队列:并发队列和串行队列。<br>并发队列:可以让多个任务并发执行(自动开启多个线程同时执行任务)。并发功能只有在异步函数下才有效。<br>串行队列:让多个任务一个接一个执行(一个任务执行完，再执行下一个任务)。(2)GCD任务的执行方式:异步操作和同步操作。<br>异步操作:在其他线程执行任务，会开启新的线程;异步方法无法确定任务的执行顺序。<br>同步操作:在当前线程执行任务，不开启新的线程;同步方法与队列无关，它会依次执行，能够决定任务的执行顺序;更新 UI时，最好使用同步方法。</p><p>1.创建队列的方法<br>(1)创建一个串行队列。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> serialQueue <span class="operator">=</span> <span class="type">DispatchQueue</span>(label: <span class="string">&quot;serial&quot;</span>, atributes: .<span class="keyword">init</span>(rawValue: <span class="number">0</span>))</span><br></pre></td></tr></table></figure><p>(2)创建一个并发队列。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> conQueue <span class="operator">=</span> <span class="type">DispatchQueue</span>(label: <span class="string">&quot;concurrent&quot;</span>, attributes: .concurrent)</span><br></pre></td></tr></table></figure><p>(3)获得全局并发队列。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> globalQueue <span class="operator">=</span> <span class="type">DispatchQueue</span>.globalo</span><br></pre></td></tr></table></figure><p>(4)获得主队列。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> mainQueue <span class="operator">=</span> <span class="type">DispatchOueue</span>.main</span><br></pre></td></tr></table></figure><p>主队列即在主线程里执行的队列。因为主线程只有一个，所以它属于串行队列。与 UI有关的操作必须放在主线程中执行。</p><p>2.同步/异步+串行/并发队列的组合</p><p>1)同步+串行队列<br>同步+串行队列不会开启新的线程，在当前线程(主线程)执行任务。任务是串行的，执行完一个任务，再执行下一个任务。示例代码如下:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sync_serial</span>()</span></span><br><span class="line"><span class="comment">//创建一个串行队列</span></span><br><span class="line"> <span class="keyword">let</span> serialQueue <span class="operator">=</span> <span class="type">DispatchQueue</span>(label: <span class="string">&quot;serial&quot;</span>, attributes: .<span class="keyword">init</span>(rawValue: <span class="number">0</span>))<span class="comment">//同步执行三个任务</span></span><br><span class="line"> serialQueue.sync (</span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&quot;1 +<span class="subst">\(Thread.current)</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"> serialQueue.sync</span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&quot;2 +<span class="subst">\(Thread.current)</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"> serialQueue.sync(</span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&quot;3 +<span class="subst">\(Thread.current)</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"> sync_serial)</span><br></pre></td></tr></table></figure><p>示例代码的输出日志如图<br><img src="https://gitee.com/zhu565615430/images/raw/master/dyzb/image-20210527172731259.png" alt="image-20210527172731259"><br>2)异步+串行队列<br>异步+串行队列将开启新的线程，但只开启一条子线程，并在子线程中串行执行任务。示例代码如下:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">func</span> <span class="title">async</span> </span>serial()(</span><br><span class="line"><span class="comment">//创建一个串行队列</span></span><br><span class="line"> <span class="keyword">let</span> serialQueue <span class="operator">=</span> <span class="type">DispatchQueue</span>(label: <span class="string">&quot;serial&quot;</span>, attributes: .<span class="keyword">init</span>(rawValue: <span class="number">0</span>))<span class="comment">//异步执行三个任务</span></span><br><span class="line"> serialQueue.async<span class="operator">!</span></span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&quot;1 +<span class="subst">\(Thread.current)</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"> serialQueue.async(</span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&quot;2+<span class="subst">\(Thread.current)</span>&quot;</span>)</span><br><span class="line">   serialQueue.async</span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&quot;3 +<span class="subst">\(Thread.current)</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"> asyne_serial()</span><br></pre></td></tr></table></figure><p>3)示例代码的输出日志如图<br><img src="https://gitee.com/zhu565615430/images/raw/master/dyzb/image-20210527173002192.png" alt="image-20210527173002192"><br>同步+并发队列<br>同步+并发队列不开启新线程，在主线程中顺序执行任务。示例代码如下:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">func</span> <span class="title">sync_concurrent</span>()</span>&#123;</span><br><span class="line"><span class="comment">//创建一个全局队列</span></span><br><span class="line"> <span class="keyword">let</span> globalQueue <span class="operator">=</span> <span class="type">DispatchQueue</span>.global()<span class="comment">//同步执行三个任务</span></span><br><span class="line"> globalQueue.sync &#123;</span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&quot;1 +<span class="subst">\(Thread.current)</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"> globalQueue.sync&#123;</span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&quot;2 +<span class="subst">\(Thread.current)</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"> globalQueue.sync f</span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&quot;3 +<span class="subst">\(Thread.current)</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"> sync concurrent()</span><br></pre></td></tr></table></figure><p>同步+并发队列示例输出日志</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/dyzb/image-20210527173020801.png" alt="image-20210527173020801"></p><p>4)异步+并发队列<br>异步+并发队列同时开启多条线程，并发执行任务。示例代码如下:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">func</span> <span class="title">async_concurrent</span>()</span>&#123;</span><br><span class="line"><span class="comment">//创建一个全局队列</span></span><br><span class="line"> <span class="keyword">let</span> globalQueue <span class="operator">=</span> <span class="type">DispatchQueue</span>.global(<span class="comment">//异步执行三个任务</span></span><br><span class="line"> globalQueue.async(</span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&quot;1 +<span class="subst">\(Thread.current)</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"> globalQueue.async&#123;</span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&quot;2 +<span class="subst">\(Thread.current)</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"> globalQueue.async <span class="operator">!</span></span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&quot;3+<span class="subst">\(Thread.current)</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"> async_concurrent()</span><br></pre></td></tr></table></figure><p>示例代码的输出日志如图</p><img src="https://gitee.com/zhu565615430/images/raw/master/dyzb/image-20210527173341630.png" alt="image-20210527173341630" style="zoom: 67%;">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;使用 GCD 实现多线程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; GCD(Grand Central Dispatch)是苹果公司开发的一种旨在优化多核环境中的并发操作，以取代传统多线程技术的编程模式。它是基于C语言的线程管理方案，使用者无需过多参与线程的管理，只</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>在原项目基础上使用SwiftUI</title>
    <link href="http://example.com/2021/01/27/%E5%9C%A8%E5%8E%9F%E9%A1%B9%E7%9B%AE%E5%9F%BA%E7%A1%80%E4%B8%8A%E4%BD%BF%E7%94%A8SwiftUI/"/>
    <id>http://example.com/2021/01/27/%E5%9C%A8%E5%8E%9F%E9%A1%B9%E7%9B%AE%E5%9F%BA%E7%A1%80%E4%B8%8A%E4%BD%BF%E7%94%A8SwiftUI/</id>
    <published>2021-01-27T09:15:13.000Z</published>
    <updated>2021-05-27T09:16:41.103Z</updated>
    
    <content type="html"><![CDATA[<p>首先判断是否为iOS 13，只有iOS 13+才能支持SwiftUI；</p><p>Swift跳转到SwiftUI；以Push为例，present一样的，只不过是需要用UIHostingController初始化你的SwiftUIView。初始化出来的就是一个正常的UIViewController，正儿八经的控制器，怎么用都行。</p><p>示例代码：</p><pre><code> if #available(iOS 13, *) &#123;      let testSwiftUIView = UIHostingController(rootView: TestSwiftUIView())        navigationController?.pushViewController(testSwiftUIView, animated: true)    &#125;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;首先判断是否为iOS 13，只有iOS 13+才能支持SwiftUI；&lt;/p&gt;
&lt;p&gt;Swift跳转到SwiftUI；以Push为例，present一样的，只不过是需要用UIHostingController初始化你的SwiftUIView。初始化出来的就是一个正常的UIV</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ios开发的多线程技术</title>
    <link href="http://example.com/2021/01/17/ios%E5%BC%80%E5%8F%91%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%8A%80%E6%9C%AF/"/>
    <id>http://example.com/2021/01/17/ios%E5%BC%80%E5%8F%91%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%8A%80%E6%9C%AF/</id>
    <published>2021-01-17T09:10:31.000Z</published>
    <updated>2021-05-27T09:14:15.883Z</updated>
    
    <content type="html"><![CDATA[<h3 id="iOS-的3种多线程技术"><a href="#iOS-的3种多线程技术" class="headerlink" title="iOS 的3种多线程技术"></a>iOS 的3种多线程技术</h3><h4 id="iOS常用的多线程开发技术主要有以下3种。"><a href="#iOS常用的多线程开发技术主要有以下3种。" class="headerlink" title="iOS常用的多线程开发技术主要有以下3种。"></a>iOS常用的多线程开发技术主要有以下3种。</h4><p> <strong>Thread:每个Thread 对象对应一个线程，量级较轻(真正的多线程)。</strong></p><p> <strong>Operation/OperationQueue:面向对象的线程技术。</strong></p><p> <strong>GCD(Grand Central Dispatch):基于C语言的框架，它可以充分利用多核处理技术，是苹果公司推荐使用的多线程技术。</strong></p><p>  以上这3种多线程技术，从上到下对比，抽象度层次是从低到高的，抽象度越高的使用越简单，也是苹果公司最推荐使用的。但是就目前而言，我们需要了解3种多线程技术的基本使用过程，因为很多框架技术分别使用了不同的多线程技术。<br>现对3种多线程技术对比如下。</p><p><strong>1) Thread</strong><br>1Thread 比其他两个轻量级使用简单;2需要自己管理线程的生命周期、线程同步、加锁、睡眠及唤醒等，线程同步对数据的加锁会有一定的系统开销。<br><strong>2)Operation/OperationQueue</strong><br>1 不需要关心线程管理、数据同步的事情，可以把精力放在自己需要执行的操作上面;2 Operation/OperationQueue 是面向对象的。<br><strong>3)GCD</strong><br>1GCD是由苹果公司开发的一个多核编程的技术方案，iOS4.0以上才能使用，是替代 Thread、Operation/OperationQueue的高效而强大的技术;2GCD是基于C语言的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;iOS-的3种多线程技术&quot;&gt;&lt;a href=&quot;#iOS-的3种多线程技术&quot; class=&quot;headerlink&quot; title=&quot;iOS 的3种多线程技术&quot;&gt;&lt;/a&gt;iOS 的3种多线程技术&lt;/h3&gt;&lt;h4 id=&quot;iOS常用的多线程开发技术主要有以下3种。&quot;&gt;&lt;a</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>记录下开发过程遇到的坑与笔记</title>
    <link href="http://example.com/2021/01/02/%E8%AE%B0%E5%BD%95%E4%B8%8B%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
    <id>http://example.com/2021/01/02/%E8%AE%B0%E5%BD%95%E4%B8%8B%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</id>
    <published>2021-01-02T09:05:29.000Z</published>
    <updated>2021-05-27T09:07:55.465Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1.badgeVaule气泡提示,self.navigationController.tabBarItem.badgeValue</strong></p><p><strong>2.git终端命令方法&gt; pwd查看全部 &gt;cd&gt;ls &gt;之后桌面找到文件夹内容,以cd xxxx ,ls格式&gt;git status查看&gt;git pull origin master从网上储存库中下下来。 返回上一级地址命令cd ..</strong></p><p><strong>3.全球最大开源代码托管平台——SourceForge</strong></p><p><strong>4.sections更改数量可使tableview分量</strong></p><p><strong>5.static cells静态tableview</strong></p><p><strong>6.nothing to commit, working directory clean 表示上传Git成功</strong></p><p><strong>7.git提交步骤</strong></p><ul><li>git add . //此处add后加空格.</li><li>git commit -m “xxx”</li><li>git pull origin master //更新代码</li><li>git push origin master //提交</li></ul><p><strong>8.Identifier是写在navigation上边的</strong></p><p><strong>9.AF的方法中全部属于异步下载。</strong></p><p><strong>10.无论使用collectionView还是tableView的自定义cell，都需要先在viewDidLoad中注册cell</strong></p><p><strong>11.可以使用mac自带的数码测色计来获取颜色的RGB值</strong></p><p><strong>12.例子：</strong><br>indexPath.row==0 &amp;&amp; indexPath.section==1<br>不同的section中的indexpath的row是会归0重置的，从0开始重头计</p><p><strong>13.代理协议写在m文件即可，不用过多的暴露在头文件中</strong></p><p><strong>14.radioButton的图片更改方法，不用代码实现，在button的State 。cc。oo。nn。ff。ll。gg。中选择Default为未点击时状态，可赋予图片，选择selected为选中时状态，可赋予图片，直接使用imageView的方法是不专业的</strong></p><p><strong>15.在button的中选择Default为未点击时状态，，直接使用imageView的方法是不专业的。</strong></p><p><strong>16.textView加边框</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;QuartzCore/QuartzCore.h&gt;    </span><br><span class="line">textview对象.layer.borderColor = UIColor.grayColor.CGColor;</span><br><span class="line">textview对象.layer.borderWidth = 5;</span><br><span class="line">self.textView.layer.masksToBounds = YES;</span><br><span class="line">self.textView.layer.cornerRadius = 5;</span><br></pre></td></tr></table></figure><p><strong>17.ruby -e “$(curl -fsSL <a href="https://raw.githubusercontent.com/Homebrew/install/master/install">https://raw.githubusercontent…</a>)” //下载安装git插件</strong></p><p><strong>18.scrollView可以专门用来自动处理键盘布局，但需要嵌入代码</strong></p><p><strong>19.有造好的轮子就要用，不要傻乎乎的想要自己去造，理解就可以了，闲暇时间自己研究，工作当中效率进度第一</strong></p><p><strong>20.alloc之后几乎全是init方法</strong></p><p><strong>21. if(indexPath.row==2 &amp;&amp; indexPath.section==0){//row表示在一个section下顺序第几个，section表示第几个section</strong></p><p><strong>22.区别：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-(void)viewDidLoad//加载后调用</span><br><span class="line">-(id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil//进入后就调用</span><br></pre></td></tr></table></figure><p><strong>23.git比svn要强大</strong></p><p><strong>24.@property (assign,nonatomic) BOOL hONG; //bool型只能用于状态判断，只有yes和no，非黑即白 assign表示弱类型的赋值 nonatomic会有先后顺序 简单变量是assign，指针变量是strong</strong><br><strong>//@property的意思是属性，类似于c++的一个成员变量，在oc中成为一个类的属性</strong><br><strong>@implementation具体方法的实现</strong></p><p><strong>25.来记个方法，这是针对不同类型的初始化方法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//push界面之前的初始化方法，该方法是在push  xib类型界面之前进行初始化的方法</span><br><span class="line">LSIntegralShopViewController * integrelShopViewController =[[LSIntegralShopViewController alloc]initWithNibName:@&quot;LSIntegralShopViewController&quot; bundle:nil];  //这里那个nibName是写的那个controller的对应的那个类</span><br><span class="line"></span><br><span class="line">//针对toryboard的初始化方法</span><br><span class="line">[WPUtil getViewControllerWithIdentifier: storyboardName:]  //此处Identifier是storyboard上的Identifier ID,而UINavigationController * homeNavigationController = [WPUtil getViewControllerWithIdentifier:@&quot;homeNavigation&quot; storyboardName:@&quot;Home&quot;];这里的Identifier则是Navigation上的ID，注意区分</span><br></pre></td></tr></table></figure><p><strong>26.上下bar的地方切图使用时，后缀加上@2x，注意是在.png前使用，同时图盘拖到2x那格中</strong></p><p><strong>27.2x图片清晰度更高</strong></p><p><strong>28.已经在界面上都配置好了，代码里面就不需要这些设置了</strong><br><strong>只需处理点击事件，比如选中第一个，第一个button.selected = YES，其他两个button.selected = NO</strong></p><p><strong>29.UIButton的edge可以调整image和title</strong></p><p><strong>30.[self.view endEditing:YES]; //直接撤销键盘的方法</strong></p><p><strong>31.manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@”text/html”, nil];//默认为json格式，若为json可省略这行代码</strong></p><p><strong>32.+方法写在头文件中，谁都可以调用，只要引用其头文件名称，如viewController是可以在任何地方初始化任意次的</strong></p><p><strong>33.使用最底部或最上部的UIButton或某个控件来支撑住scrollview，来让scrollview知晓其最大距离</strong></p><p><strong>34.NSUInteger表示无符号整型，即非负数</strong></p><p><strong>35.严格按照流程来，先在外边，比如说美工发给你的图片，把名字改好，<a href="mailto:&#120;&#x78;&#x78;&#x40;&#50;&#x78;&#x2e;&#112;&#x6e;&#x67;">&#120;&#x78;&#x78;&#x40;&#50;&#x78;&#x2e;&#112;&#x6e;&#x67;</a>,然后再拖进去,还有，文件名不要出现空格，这些有空格的通通改掉,把有问题的全部删了，重新加</strong></p><p><strong>36.至于重写set和get方法，简要说明一下</strong>，当我们使用@property这用法之后，系统便会自动给我们定义的变量以一个默认的set和get方法。插一句，_any和self.any的区别，_any就是只指_any本身，是系统会生成的，而如果我们重写了any的set方法后，self.any会调用我们重写的set方法中的内容，而_any不是，比如这句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-(void)setCount:(NSUInteger)count</span><br><span class="line">&#123;</span><br><span class="line">    _count = count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里表示的是将系统默认给我们生成的count变成我们自定义的count，达到我们想要的目的。<br>_any就是单单指当我们使用@property后系统给我自动生成的一个any，而self.any不同，它会自动调用（set和get方法本身就包含在其中，也可以理解为就是它自身的一个属性一部分）我们重写后的set方法，当我们self.any的时候，其中重写的set方法中的任何内容都会被我们使用，所以即使我们只self.any，也可实现许多只要set方法中写出的效果，大致是这个意思</p><p><strong>37.推荐使用代理传值，通知的观察者模式效率低下</strong></p><p><strong>38.cell控制视图显示，controller负责网络解析</strong></p><p><strong>39.取数据的时候，要看返回的数据是什么样子的，需要两个就两个，需要一个就一个</strong>，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">data =     &#123;</span><br><span class="line">    CurrentPageIndex = 1;</span><br><span class="line">    PageSize = 10;</span><br><span class="line">    TotalItemCount = 1;</span><br><span class="line">    TotalPageCount = 1;</span><br><span class="line">    data =         (</span><br><span class="line">                    &#123;</span><br><span class="line">            ClickNumber = 0;</span><br><span class="line">            ID = 1796;</span><br><span class="line">            Norm = &quot;\U6876&quot;;</span><br><span class="line">            Picture = &quot;/upload/goods/default.jpg&quot;;</span><br><span class="line">            SellerRetailPrice = 10;</span><br><span class="line">            TheSorting = 12500000;</span><br><span class="line">            TypeID = 22;</span><br><span class="line">            goodsName = &quot;\U51b0\U51b0\U4e50&quot;;</span><br><span class="line">            goodsTypeName = &quot;\U7eaf\U51c0\U6c34&quot;;</span><br><span class="line">            sellerId = 125;</span><br><span class="line">            sellerName = &quot;\U51e4\U51f0\U57ce\U6c34\U5e97&quot;;</span><br><span class="line">            sellerState = 1;</span><br><span class="line">        &#125;</span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br><span class="line">    msg = &quot;&lt;null&gt;&quot;;</span><br><span class="line">    result = ok;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一个data取的是里面的一大堆即一个字典，第二个data才是个数组，@”data”这个大体是指前一个data是拿到一个字典的数据，第二个data是那里面的数组咯</p><p><strong>40.不要直接用button或控件push到下一个界面，尤其是在tableView的cell上</strong></p><p><strong>41</strong>.shopTVC.delegate = self;//<strong>上一个界面的代理设为这个界面自身</strong>，在上一个见面中调用代理的时候，因为上一个界面的代理已经被设置为这个界面，所以在上一个见面中调用其自身代理时，实际上是这个界面在执行</p><p><strong>42.没有了summary,但是原来的summary的功能可以在targets的general里面找到</strong></p><p><strong>43.关于尝试新方法</strong>，比如：将字典中的值赋值给一个float，有时候.不行可以换( ) 或 ]试试看有没有其方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">float left= [aaa[@&quot;abc&quot;] floatValue];</span><br></pre></td></tr></table></figure><p><strong>44</strong>.else if (self.btnOfAddress.selected){ //<strong>点了之后立马又弹回去了</strong>，当执行的时候按钮状态已经弹回去了，如果需要一直是点击状态那么你需要设置selected=YES，这是状态是需要设置的，不然就不会有效果，需要是选中状态，那么你就要在合适的位置设置起，btn.selected = YES</p><p><strong>45.总之，要看他数据需要什么，保存的是哪里</strong></p><p><strong>46.本着，谁分配谁管理的原则</strong></p><p><strong>47.thread:breakpoint 1.2，在该行最左侧的蓝色矩形区域右键，选择delete breakpoint即可。</strong></p><p><strong>48.逻辑步骤关系，所有异步都要先完成数据的请求，成功后，返回数据信息后才开始跳转界面，换句话说，需要将需要提交的数据全部获取到之后，再做统一提交处理</strong></p><p><strong>49.所有网络请求都用异步,上传提交也叫下载，只不过下载的内容可能就是个提示性的东西，提示你提交成功没有</strong></p><p><strong>50.字符串比较用isEqualToString，不用等号， ]是调方法 ( )是优先级</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;1.badgeVaule气泡提示,self.navigationController.tabBarItem.badgeValue&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.git终端命令方法&amp;gt; pwd查看全部 &amp;gt;cd&amp;gt;ls &amp;gt</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>斗鱼直播Demo(一)</title>
    <link href="http://example.com/2020/05/16/%E6%96%97%E9%B1%BC%E7%9B%B4%E6%92%ADDemo/"/>
    <id>http://example.com/2020/05/16/%E6%96%97%E9%B1%BC%E7%9B%B4%E6%92%ADDemo/</id>
    <published>2020-05-16T05:49:59.000Z</published>
    <updated>2020-12-30T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527155457748.png" alt="image-20210527155457748"></p><p>项目开始（主框架搭建）</p><h2 id="导入图片，设置启动图片，App图标"><a href="#导入图片，设置启动图片，App图标" class="headerlink" title="导入图片，设置启动图片，App图标"></a><strong>导入图片</strong>，设置启动图片，App图标</h2><h4 id="导入启动图片，项目图标，并给项目做好文档管理"><a href="#导入启动图片，项目图标，并给项目做好文档管理" class="headerlink" title="导入启动图片，项目图标，并给项目做好文档管理"></a>导入启动图片，项目图标，并给项目做好文档管理</h4><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222204617627.png" alt="image-20201222204617627" style="zoom: 25%;"><h2 id="视图控制器的设置"><a href="#视图控制器的设置" class="headerlink" title="视图控制器的设置"></a>视图控制器的设置</h2><h3 id="在项目里设置，设置默认启动控制器为main，添加别的视图控制器"><a href="#在项目里设置，设置默认启动控制器为main，添加别的视图控制器" class="headerlink" title="在项目里设置，设置默认启动控制器为main，添加别的视图控制器"></a>在项目里设置，设置默认启动控制器为main，添加别的视图控制器</h3><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527150712661.png" alt="image-20210527150712661" style="zoom:50%;"><p>添加UITab Bar Controller视图控制器，然后分别选择两个视图控制器，分别为其添加Navigation Controller（导航控制器）。</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527150726189.png" alt="image-20210527150726189" style="zoom: 33%;"><p>复制两个一样的，一个四个，并连接</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527150748148.png" alt="image-20210527150748148" style="zoom: 33%;"><p>分别修改item名称，首页、关注、直播、我的，然后添加tabbar图片到Assets.在分别设置好每个的图片</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527150826067.png" alt="image-20210527150826067" style="zoom: 33%;"><p>修复黑屏</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527150850144.png" alt="image-20210527150850144" style="zoom:33%;"><h3 id="修改TABbar图标为橙色的代码，在AppDelegate下添加"><a href="#修改TABbar图标为橙色的代码，在AppDelegate下添加" class="headerlink" title="修改TABbar图标为橙色的代码，在AppDelegate下添加"></a>修改TABbar图标为橙色的代码，在AppDelegate下添加</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UITabBar.appearance().tintColor = UIColor.orange</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222205305599.png" alt="image-20201222205305599"></p><p>视图太多，容易混乱。新建home故事版，如下图</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527150927776.png" alt="image-20210527150927776" style="zoom:33%;"><p>将各个功能模块拆分出来  ，并且放入自己模块中</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222212753838.png" alt="image-20201222212753838" style="zoom:25%;"><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222213411750.png" alt="image-20201222213411750" style="zoom:25%;"><p>为了适配低版本，删连线，用代码方式连接</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222214157900.png" alt="image-20201222214157900" style="zoom:25%;"><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210107235033730.png" alt="image-20210107235033730" style="zoom: 33%;"><p>新建视图控制器MainViewController，继承自UITabBarController，然后到故事版将class修改MainViewController（图略）</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222214430463.png" alt="image-20201222214430463" style="zoom: 25%;"><p>给MainViewController添加新的方法，全部代码如下，这样就获取得子控制器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line"></span><br><span class="line">class MainViewController: UITabBarController &#123;</span><br><span class="line"></span><br><span class="line">    override func viewDidLoad() &#123;</span><br><span class="line">        super.viewDidLoad()</span><br><span class="line">        </span><br><span class="line">        addChildVc(StoryName: &quot;Home&quot;)</span><br><span class="line">        addChildVc(StoryName: &quot;Live&quot;)</span><br><span class="line">        addChildVc(StoryName: &quot;Follow&quot;)</span><br><span class="line">        addChildVc(StoryName: &quot;Profile&quot;)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private func addChildVc(StoryName: String) &#123;</span><br><span class="line">        //        1.通过Storyboard获取控制器</span><br><span class="line">        let ChildVc = UIStoryboard(name: StoryName, bundle: nil).instantiateInitialViewController()!</span><br><span class="line">       //        2.将childVC作为子控制器</span><br><span class="line">        addChild(ChildVc)</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/IMG_02F353E7087B-1.jpeg" alt="IMG_02F353E7087B-1" style="zoom: 33%;"><h2 id="设置布局"><a href="#设置布局" class="headerlink" title="设置布局"></a>设置布局</h2><h3 id="首页搭建"><a href="#首页搭建" class="headerlink" title="首页搭建"></a>首页搭建</h3><p>对模块进行mvc的划分，在fider添加M、V、C文件夹,拉到项目里</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222223657634.png" alt="image-20201222223657634" style="zoom:33%;"><p>创建单独的控制器来管理它，将class修改HomeViewController（图略）cocoa</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222223940626.png" alt="image-20201222223940626" style="zoom: 33%;"><p>添加<strong>extension</strong>,抽取方法调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  override func viewDidLoad() &#123;</span><br><span class="line">    super.viewDidLoad()</span><br><span class="line">      SetupUI()</span><br><span class="line"></span><br><span class="line">  &#125;&#125;</span><br><span class="line"></span><br><span class="line">// Mark:-设置UI界面</span><br><span class="line"></span><br><span class="line">extension HomeViewController &#123;</span><br><span class="line"></span><br><span class="line">  private func SetupUI() &#123;</span><br><span class="line"></span><br><span class="line">  &#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="导航栏的设置"><a href="#导航栏的设置" class="headerlink" title="导航栏的设置"></a>导航栏的设置</h3><h4 id="左侧导航栏"><a href="#左侧导航栏" class="headerlink" title="左侧导航栏"></a>左侧导航栏</h4><p>添加左侧导航栏的方法，因为button有点击变灰，我们要自定义customView，不能使用一张图片上去</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222225741531.png" alt="image-20201222225741531" style="zoom: 50%;"><p>继续在SetupUI方法下面添加代码，并且在<strong>SetupUI</strong>方法中调用</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222230152058.png" alt="image-20201222230152058" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">private  func setupNavigationBar()&#123;</span><br><span class="line"></span><br><span class="line">     let btn = UIButton()</span><br><span class="line"> </span><br><span class="line">   btn.setImage(UIImage(named: &quot;logo&quot;), for: .normal)</span><br><span class="line"></span><br><span class="line">   btn.sizeToFit() //根据图片大小自适应</span><br><span class="line"></span><br><span class="line">   navigationItem.leftBarButtonItem = UIBarButtonItem(customView: btn)//customView自定义button</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="右侧导航栏"><a href="#右侧导航栏" class="headerlink" title="右侧导航栏"></a>右侧导航栏</h4><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222232828554.png"></p><p>1.搜索历史Item点进去有高亮的效果，要设置两个图标，所以用自定义customView，继续在下方添加代码</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222233021498.png" alt="image-20201222233021498" style="zoom:33%;"><p>出现问题，3个图标太近，需要设置sizeToFit，添加</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> size <span class="operator">=</span> <span class="type">CGSize</span>(width: <span class="number">40</span>, height: <span class="number">40</span>)</span><br></pre></td></tr></table></figure><p>修改代码</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">btn.sizeToFit() <span class="comment">//根据图片大小自适应</span></span><br></pre></td></tr></table></figure><p>为</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">historyBtn.frame <span class="operator">=</span> <span class="type">CGRect</span>(origin: <span class="type">CGPoint</span>.zero, size: size) <span class="comment">//根据图片大小自适应</span></span><br></pre></td></tr></table></figure><p>添加的代码如下</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> size <span class="operator">=</span> <span class="type">CGSize</span>(width: <span class="number">40</span>, height: <span class="number">40</span>)</span><br><span class="line"><span class="keyword">let</span> historyBtn <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">historyBtn.setImage(<span class="type">UIImage</span>(named: <span class="string">&quot;image_my_history&quot;</span>), for: .normal)<span class="comment">//正常</span></span><br><span class="line">historyBtn.setImage(<span class="type">UIImage</span>(named: <span class="string">&quot;Image_my_history_click&quot;</span>), for: .highlighted)<span class="comment">//高亮</span></span><br><span class="line">historyBtn.frame <span class="operator">=</span> <span class="type">CGRect</span>(origin: <span class="type">CGPoint</span>.zero, size: size) <span class="comment">//根据图片大小自适应</span></span><br><span class="line"><span class="keyword">let</span> historyItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(customView: historyBtn) <span class="comment">//搜索历史Item</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> searchIBtn <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">searchIBtn.setImage(<span class="type">UIImage</span>(named: <span class="string">&quot;btn_search&quot;</span>), for: .normal)<span class="comment">//正常</span></span><br><span class="line">searchIBtn.setImage(<span class="type">UIImage</span>(named: <span class="string">&quot;btn_search_clicked&quot;</span>), for: .highlighted)<span class="comment">//高亮</span></span><br><span class="line">searchIBtn.frame <span class="operator">=</span> <span class="type">CGRect</span>(origin: <span class="type">CGPoint</span>.zero, size: size) <span class="comment">//根据图片大小自适应</span></span><br><span class="line"><span class="keyword">let</span> searchItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(customView: searchIBtn)  <span class="comment">//搜索Item</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> qrcodeBtn <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">qrcodeBtn.setImage(<span class="type">UIImage</span>(named: <span class="string">&quot;Image_scan&quot;</span>), for: .normal)<span class="comment">//正常</span></span><br><span class="line">qrcodeBtn.setImage(<span class="type">UIImage</span>(named: <span class="string">&quot;Image_scan_click&quot;</span>), for: .highlighted)<span class="comment">//高亮</span></span><br><span class="line">qrcodeBtn.frame <span class="operator">=</span> <span class="type">CGRect</span>(origin: <span class="type">CGPoint</span>.zero, size: size) <span class="comment">//根据图片大小自适应</span></span><br><span class="line"><span class="keyword">let</span> qrcodeItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(customView: qrcodeBtn ) <span class="comment">//二维码Item</span></span><br><span class="line">navigationItem.rightBarButtonItems <span class="operator">=</span> [historyItem, searchItem, qrcodeItem]<span class="comment">//设置数组</span></span><br></pre></td></tr></table></figure><p>修改后Item，距离变大了</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201222234406681.png" alt="image-20201222234406681"></p><h4 id="对系统类进行扩展"><a href="#对系统类进行扩展" class="headerlink" title="对系统类进行扩展"></a>对系统类进行扩展</h4><p> 以上发现代码重复太多，需要抽取，扩展，在Tools在Fidder打开新建Extension，拖到项目Tools，创建个UIBarButtonItem-Extension.swift 纯swift文件的扩展</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201223000904164.png" alt="image-20201223000904164" style="zoom:33%;"><p>添加如下代码</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UIBarButtonItem</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">createItem</span>(<span class="title">ImageName</span> : <span class="title">String</span>, <span class="title">highImageName</span> : <span class="title">String</span>, <span class="title">size</span> : <span class="title">CGSize</span>) -&gt; <span class="title">UIBarButtonItem</span> </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> btn <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">        btn.setImage(<span class="type">UIImage</span>(named: <span class="type">ImageName</span>), for: .normal)</span><br><span class="line">        btn.setImage(<span class="type">UIImage</span>(named: <span class="type">ImageName</span>), for: .highlighted)</span><br><span class="line">        btn.frame <span class="operator">=</span> <span class="type">CGRect</span>(origin: <span class="type">CGPoint</span>.zero, size: size)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">UIBarButtonItem</span>(customView: btn)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>修改HomeVC代码，删掉不需要的，修改后：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//        2.设置右侧导航栏</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> size <span class="operator">=</span> <span class="type">CGSize</span>(width: <span class="number">40</span>, height: <span class="number">40</span>)</span><br><span class="line">        <span class="keyword">let</span> historyItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>.createItem(ImageName: <span class="string">&quot;image_my_history&quot;</span>, highImageName: <span class="string">&quot;Image_my_history_click&quot;</span>, size:size)<span class="comment">//搜索历史Item</span></span><br><span class="line">        <span class="keyword">let</span> searchItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>.createItem(ImageName: <span class="string">&quot;btn_search&quot;</span>, highImageName: <span class="string">&quot;btn_search_clicked&quot;</span>, size: size)  <span class="comment">//搜索Item</span></span><br><span class="line">        <span class="keyword">let</span> qrcodeItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>.createItem(ImageName: <span class="string">&quot;Image_scan&quot;</span>, highImageName: <span class="string">&quot;Image_scan_click&quot;</span>, size: size)  <span class="comment">//二维码Item </span></span><br><span class="line">        navigationItem.rightBarButtonItems <span class="operator">=</span> [historyItem, searchItem, qrcodeItem]<span class="comment">//设置数组</span></span><br></pre></td></tr></table></figure><p>以上是类方法，但不太好，我们</p><h4 id="改用构造函数init-，构造函数不需要写返回值"><a href="#改用构造函数init-，构造函数不需要写返回值" class="headerlink" title="改用构造函数init()，构造函数不需要写返回值"></a>改用构造函数<strong>init</strong>()，构造函数不需要写返回值</h4><p>修改UIBarButtonItem-Extension.swift 代码</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">convenience</span> <span class="function"><span class="keyword">init</span>(<span class="params">ImageName</span> : <span class="type">String</span>, <span class="params">highImageName</span> : <span class="type">String</span>, <span class="params">size</span> : <span class="type">CGSize</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> btn <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">    btn.setImage(<span class="type">UIImage</span>(named: <span class="type">ImageName</span>), for: .normal)</span><br><span class="line">    btn.setImage(<span class="type">UIImage</span>(named: <span class="type">ImageName</span>), for: .highlighted)</span><br><span class="line">    btn.frame <span class="operator">=</span> <span class="type">CGRect</span>(origin: <span class="type">CGPoint</span>.zero, size: size)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.<span class="keyword">init</span>(customView : btn)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201223003721088.png" alt="image-20201223003721088" style="zoom:33%;"><p>修改HomeVC如下</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> size <span class="operator">=</span> <span class="type">CGSize</span>(width: <span class="number">40</span>, height: <span class="number">40</span>)</span><br><span class="line"><span class="keyword">let</span> historyItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(ImageName: <span class="string">&quot;image_my_history&quot;</span>, highImageName: <span class="string">&quot;Image_my_history_click&quot;</span>, size: size)<span class="comment">//搜索历史Item</span></span><br><span class="line"><span class="keyword">let</span> searchItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(ImageName: <span class="string">&quot;btn_search&quot;</span>, highImageName: <span class="string">&quot;btn_search_clicked&quot;</span>, size: size)<span class="comment">//搜索Item</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> qrcodeItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(ImageName: <span class="string">&quot;Image_scan&quot;</span>, highImageName: <span class="string">&quot;Image_scan_click&quot;</span>, size: size)<span class="comment">//二维码Item</span></span><br><span class="line"></span><br><span class="line">navigationItem.rightBarButtonItems <span class="operator">=</span> [historyItem, searchItem, qrcodeItem]<span class="comment">//设置数组</span></span><br></pre></td></tr></table></figure><p>同时把左侧的也抽取进行</p><p>因为只需要传一个logo,可以使用默认参数</p><p>UIBarButtonItem-Extension.swift 里</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">convenience</span> <span class="function"><span class="keyword">init</span>(<span class="params">ImageName</span> : <span class="type">String</span>, <span class="params">highImageName</span> : <span class="type">String</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>, <span class="params">size</span> : <span class="type">CGSize</span> <span class="operator">=</span> <span class="type">CGSize</span>.zero)</span></span><br></pre></td></tr></table></figure><p>添加条件语句</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">convenience</span> <span class="function"><span class="keyword">init</span>(<span class="params">ImageName</span> : <span class="type">String</span>, <span class="params">highImageName</span> : <span class="type">String</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>, <span class="params">size</span> : <span class="type">CGSize</span> <span class="operator">=</span> <span class="type">CGSize</span>.zero)</span> &#123;</span><br><span class="line">        <span class="comment">//1.创建UIButton</span></span><br><span class="line">        <span class="keyword">let</span> btn <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">        btn.setImage(<span class="type">UIImage</span>(named: <span class="type">ImageName</span>), for: .normal)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//2.设置btn图片</span></span><br><span class="line">        <span class="keyword">if</span> highImageName <span class="operator">!=</span> <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">            btn.setImage(<span class="type">UIImage</span>(named: <span class="type">ImageName</span>), for: .highlighted)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//3.设置btn尺寸</span></span><br><span class="line">        <span class="keyword">if</span> size <span class="operator">==</span> <span class="type">CGSize</span>.zero &#123;</span><br><span class="line">            btn.sizeToFit()</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            btn.frame <span class="operator">=</span> <span class="type">CGRect</span>(origin: <span class="type">CGPoint</span>.zero, size: size)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//4.创建UIbarbuttonItem</span></span><br><span class="line">        <span class="keyword">self</span>.<span class="keyword">init</span>(customView : btn)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>同时修改home VC代码后前对比</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201223005759321.png" alt="image-20201223005759321" style="zoom:50%;"><h3 id="导航栏的总结"><a href="#导航栏的总结" class="headerlink" title="导航栏的总结"></a>导航栏的总结</h3><h4 id="在扩展里UIBarButtonItem-Extension使用构造函数init"><a href="#在扩展里UIBarButtonItem-Extension使用构造函数init" class="headerlink" title="在扩展里UIBarButtonItem-Extension使用构造函数init"></a>在扩展里UIBarButtonItem-Extension使用构造函数<strong>init</strong></h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UIBarButtonItem</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 便利构造函数: 1&gt; convenience开头 2&gt; 在构造函数中必须明确调用一个设计的构造函数(self)</span></span><br><span class="line">    <span class="keyword">convenience</span> <span class="function"><span class="keyword">init</span>(<span class="params">ImageName</span> : <span class="type">String</span>, <span class="params">highImageName</span> : <span class="type">String</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>, <span class="params">size</span> : <span class="type">CGSize</span> <span class="operator">=</span> <span class="type">CGSize</span>.zero)</span> &#123;</span><br><span class="line">        <span class="comment">//1.创建UIButton</span></span><br><span class="line">        <span class="keyword">let</span> btn <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">        btn.setImage(<span class="type">UIImage</span>(named: <span class="type">ImageName</span>), for: .normal)  </span><br><span class="line">        <span class="comment">//2.设置btn图片</span></span><br><span class="line">        <span class="keyword">if</span> highImageName <span class="operator">!=</span> <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">            btn.setImage(<span class="type">UIImage</span>(named: <span class="type">ImageName</span>), for: .highlighted)</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="comment">//3.设置btn尺寸</span></span><br><span class="line">        <span class="keyword">if</span> size <span class="operator">==</span> <span class="type">CGSize</span>.zero &#123;</span><br><span class="line">            btn.sizeToFit()</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            btn.frame <span class="operator">=</span> <span class="type">CGRect</span>(origin: <span class="type">CGPoint</span>.zero, size: size)</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="comment">//4.创建UIbarbuttonItem</span></span><br><span class="line">        <span class="keyword">self</span>.<span class="keyword">init</span>(customView : btn)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在视图控制器处，设置导航栏"><a href="#在视图控制器处，设置导航栏" class="headerlink" title="在视图控制器处，设置导航栏"></a>在视图控制器处，设置导航栏</h4><p>添加<strong>extension</strong>然后分别设置左右导航栏样式,设置数组，给其添加上</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Mark:-设置UI界面</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">HomeViewController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">SetupUI</span>()</span> &#123;</span><br><span class="line"><span class="comment">//        1.设置导航栏</span></span><br><span class="line">        setupNavigationBar()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">setupNavigationBar</span>()</span>&#123;</span><br><span class="line"><span class="comment">//        1.设置左侧导航栏</span></span><br><span class="line">        navigationItem.leftBarButtonItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(ImageName:<span class="string">&quot;logo&quot;</span> )<span class="comment">//customView自定义button</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">//        2.设置右侧导航栏      </span></span><br><span class="line">        <span class="keyword">let</span> size <span class="operator">=</span> <span class="type">CGSize</span>(width: <span class="number">40</span>, height: <span class="number">40</span>)</span><br><span class="line">        <span class="keyword">let</span> historyItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(ImageName: <span class="string">&quot;image_my_history&quot;</span>, highImageName: <span class="string">&quot;Image_my_history_click&quot;</span>, size: size)<span class="comment">//搜索历史Item</span></span><br><span class="line">        <span class="keyword">let</span> searchItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(ImageName: <span class="string">&quot;btn_search&quot;</span>, highImageName: <span class="string">&quot;btn_search_clicked&quot;</span>, size: size)<span class="comment">//搜索Item</span></span><br><span class="line">        <span class="keyword">let</span> qrcodeItem <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(ImageName: <span class="string">&quot;Image_scan&quot;</span>, highImageName: <span class="string">&quot;Image_scan_click&quot;</span>, size: size)<span class="comment">//二维码Item</span></span><br><span class="line">        </span><br><span class="line">        navigationItem.rightBarButtonItems <span class="operator">=</span> [historyItem, searchItem, qrcodeItem]<span class="comment">//设置数组</span></span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="首页框架搭建"><a href="#首页框架搭建" class="headerlink" title="首页框架搭建"></a>首页框架搭建</h2><h3 id="对标题栏与下方内容进行封装"><a href="#对标题栏与下方内容进行封装" class="headerlink" title="对标题栏与下方内容进行封装"></a>对标题栏与下方内容进行封装</h3><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/IMG_F2A62D563CE9-1.jpeg" alt="IMG_F2A62D563CE9-1" style="zoom:50%;"><p>标题栏的封装</p><p>标题栏用lable来做，监听手势点击，内容用UIconnetionView进行封装，</p><h4 id="封装PageTitleView（标签栏）"><a href="#封装PageTitleView（标签栏）" class="headerlink" title="封装PageTitleView（标签栏）"></a>封装PageTitleView（标签栏）</h4><ul><li><p>在view新建PageTitleView.swift</p></li><li><p>封装构造函数，让别人在创建对象时，就传入真实需要显示的内容</p><ul><li>frame：创建对象时确定了frame就可以直接设置子控件的位置和尺寸</li><li>titles：显示的所有标题</li></ul></li></ul><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201223095739279.png" alt="image-20201223095739279" style="zoom: 33%;"><h5 id="抽取常量"><a href="#抽取常量" class="headerlink" title="抽取常量"></a>抽取常量</h5><p>在Extension新建Common.swift，并修改为以下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import UIKit</span><br><span class="line">let KStatusBarH: CGFloat = 20 //状态栏高度</span><br><span class="line">let kNavigationBarH: CGFloat = 44</span><br><span class="line">let kScreenW = UIScreen.main.bounds.width//屏幕的宽度</span><br><span class="line">let kScreenH = UIScreen.main.bounds.height//屏幕的高度</span><br></pre></td></tr></table></figure><p>在homevc添加代码，并添加到视图界面</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201223104540169.png" alt="image-20201223104540169" style="zoom: 33%;"><p>主要添加代码如下</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">let</span> <span class="type">KTitleViewH</span> : <span class="type">CGFloat</span> <span class="operator">=</span> <span class="number">40</span>  <span class="comment">//屏幕高度40</span></span><br><span class="line"><span class="comment">//  Mark:-懒加载属性</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lazy</span> <span class="keyword">var</span> pageTitleView : <span class="type">PageTitleView</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> titleFrame <span class="operator">=</span> <span class="type">CGRect</span>(x: <span class="number">0</span>, y:<span class="type">KStatusBarH</span> <span class="operator">+</span> kNavigationBarH , width:kScreenW, height: <span class="type">KTitleViewH</span>)<span class="comment">//导航栏位置的设置</span></span><br><span class="line">        <span class="keyword">let</span> titles <span class="operator">=</span> [<span class="string">&quot;推荐&quot;</span>,<span class="string">&quot;游戏&quot;</span>,<span class="string">&quot;娱乐&quot;</span>,<span class="string">&quot;趣玩&quot;</span>]</span><br><span class="line">        <span class="keyword">let</span> titleView <span class="operator">=</span> <span class="type">PageTitleView</span>(frame: titleFrame, titles: titles)</span><br><span class="line">        titleView.backgroundColor <span class="operator">=</span> <span class="type">UIColor</span>.purple</span><br><span class="line">        <span class="keyword">return</span> titleView</span><br><span class="line">        </span><br><span class="line">    &#125;()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view.addSubview(pageTitleView)</span><br></pre></td></tr></table></figure><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/IMG_A737A89F44B3-1.jpeg" alt="IMG_A737A89F44B3-1" style="zoom:50%;"><h3 id="添加UIscrollView"><a href="#添加UIscrollView" class="headerlink" title="添加UIscrollView"></a>添加UIscrollView</h3><p>在PageTitleView.swift，添加scrollView懒加载，然后添加到视图</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201223111112774.png" alt="image-20201223111112774" style="zoom: 33%;"><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MARk: - 懒加载属性    </span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">lazy</span> <span class="keyword">var</span> scrollView : <span class="type">UIScrollView</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> scrollView <span class="operator">=</span> <span class="type">UIScrollView</span>()</span><br><span class="line">        scrollView.showsHorizontalScrollIndicator <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        scrollView.scrollsToTop <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        scrollView.bounces <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        <span class="keyword">return</span> scrollView</span><br><span class="line">    &#125;()</span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MARk: - 设置UI界面</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">PageTitleView</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">setupUI</span>()</span> &#123;</span><br><span class="line"><span class="comment">//        1.添加UIscrollView</span></span><br><span class="line">        addSubview(scrollView)</span><br><span class="line">        scrollView.frame <span class="operator">=</span> bounds</span><br><span class="line"><span class="comment">//        2.添加title对应的label</span></span><br><span class="line">              setupTitleLabels()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>lable的设置，继续添加代码</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201223114120598.png" alt="image-20201223114120598"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527152906864.png" alt="image-20210527152906864"></p><p>代码如下：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">let</span> kScrollLineH : <span class="type">CGFloat</span> <span class="operator">=</span> <span class="number">2</span> <span class="comment">//滚动条高度</span></span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">setupTitleLabels</span>()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (index, title) <span class="keyword">in</span> titles.enumerated() &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 0.确定label的一些frame的值</span></span><br><span class="line">        <span class="keyword">let</span> labelW : <span class="type">CGFloat</span> <span class="operator">=</span> frame.width <span class="operator">/</span> <span class="type">CGFloat</span>(titles.count)</span><br><span class="line">        <span class="keyword">let</span> labelH : <span class="type">CGFloat</span> <span class="operator">=</span> frame.height <span class="operator">-</span> kScrollLineH</span><br><span class="line">        <span class="keyword">let</span> labelY : <span class="type">CGFloat</span> <span class="operator">=</span> <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 1.创建UILabel</span></span><br><span class="line">        <span class="keyword">let</span> label <span class="operator">=</span> <span class="type">UILabel</span>()</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 2.设置Label的属性</span></span><br><span class="line">        label.text <span class="operator">=</span> title</span><br><span class="line">        label.tag <span class="operator">=</span> index</span><br><span class="line">        label.font <span class="operator">=</span> <span class="type">UIFont</span>.systemFont(ofSize: <span class="number">16.0</span>)<span class="comment">//默认字体大小17</span></span><br><span class="line">        label.textColor <span class="operator">=</span> <span class="type">UIColor</span>.darkGray<span class="comment">//默认文字颜色</span></span><br><span class="line">        label.textAlignment <span class="operator">=</span> .center</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 3.设置label的frame</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> labelX : <span class="type">CGFloat</span> <span class="operator">=</span> labelW <span class="operator">*</span> <span class="type">CGFloat</span>(index)</span><br><span class="line">        label.frame <span class="operator">=</span> <span class="type">CGRect</span>(x: labelX, y: labelY, width: labelW, height: labelH)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 4.将label添加到scrollView中</span></span><br><span class="line">        scrollView.addSubview(label)</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>回调home VC，不需要调整UIScrollView的内边距</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201223114538296.png" alt="image-20201223114538296" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">automaticallyAdjustsScrollViewInsets = **false**</span><br></pre></td></tr></table></figure><p>PageTitleView.swift里添加  setupUI()到构造函数内</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MARk: - 自定义构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">init</span>(<span class="params">frame</span>: <span class="type">CGRect</span>, <span class="params">titles</span> : [<span class="type">String</span>])</span> &#123;</span><br><span class="line">    <span class="keyword">self</span>.titles <span class="operator">=</span> titles</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">super</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置UI界面</span></span><br><span class="line">    setupUI() <span class="comment">//----------添加此行</span></span><br></pre></td></tr></table></figure><p>运行项目</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527153022489.png" alt="image-20210527153022489"></p><p>在homeVC删掉 ，去掉紫色</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201224154532416.png" alt="image-20201224154532416" style="zoom: 33%;"><h5 id="加滚动条和底部的线"><a href="#加滚动条和底部的线" class="headerlink" title="加滚动条和底部的线"></a>加滚动条和底部的线</h5><p>PageTitleView 懒加载创建滚动条，创建个UIlable的数组</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527153104970.png" alt="image-20210527153104970" style="zoom:50%;"><p>接着把lable添加到数组里面</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527153137678.png" alt="image-20210527153137678"></p><p>设置底线和滚动滑块</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210108143824450.png" alt="image-20210108143824450" style="zoom:50%;"><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MARk: - 设置UI界面</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">PageTitleView</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">setupUI</span>()</span> &#123;</span><br><span class="line"><span class="comment">//        1.添加UIscrollView</span></span><br><span class="line">        addSubview(scrollView)</span><br><span class="line">        scrollView.frame <span class="operator">=</span> bounds</span><br><span class="line"><span class="comment">//        2.添加title对应的label</span></span><br><span class="line">        setupTitleLabels()</span><br><span class="line">        <span class="comment">// 3.设置底线和滚动的滑块</span></span><br><span class="line">        setupBottomLineAndScrollLine()</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>添加UIScrollView ，加scrollLine方法，setupBottomLineAndScrollLine方法<img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527153332769.png" alt="image-20210527153332769"></p><p>  把字体的颜色也和下方一样</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20201224215013619.png" alt="image-20201224215013619"></p><p>运行效果</p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/IMG_99AF8C6FA944-1.jpeg" alt="IMG_99AF8C6FA944-1" style="zoom:67%;"><p>用的代码如下</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">lazy</span> <span class="keyword">var</span> titleLabels : [<span class="type">UILabel</span>] <span class="operator">=</span> [<span class="type">UILabel</span>]()</span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">lazy</span> <span class="keyword">var</span> scrollLine : <span class="type">UIView</span> <span class="operator">=</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> scrollLine <span class="operator">=</span> <span class="type">UIView</span>()</span><br><span class="line">    scrollLine.backgroundColor <span class="operator">=</span> <span class="type">UIColor</span>.orange</span><br><span class="line">    <span class="keyword">return</span> scrollLine</span><br><span class="line">&#125;()</span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fileprivate</span> <span class="function"><span class="keyword">func</span> <span class="title">setupBottomLineAndScrollLine</span>()</span> &#123;</span><br><span class="line">    <span class="comment">// 1.添加底线</span></span><br><span class="line">    <span class="keyword">let</span> bottomLine <span class="operator">=</span> <span class="type">UIView</span>()</span><br><span class="line">    bottomLine.backgroundColor <span class="operator">=</span> <span class="type">UIColor</span>.lightGray<span class="comment">//颜色</span></span><br><span class="line">    <span class="keyword">let</span> lineH : <span class="type">CGFloat</span> <span class="operator">=</span> <span class="number">0.5</span></span><br><span class="line">    bottomLine.frame <span class="operator">=</span> <span class="type">CGRect</span>(x: <span class="number">0</span>, y: frame.height <span class="operator">-</span> lineH, width: frame.width, height: lineH)</span><br><span class="line">    addSubview(bottomLine)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2.添加scrollLine</span></span><br><span class="line">    <span class="comment">// 2.1.获取第一个Label</span></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> firstLabel <span class="operator">=</span> titleLabels.first <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">    firstLabel.textColor <span class="operator">=</span> <span class="type">UIColor</span>.orange <span class="comment">//  把字体的颜色也和下方一样</span></span><br><span class="line">    <span class="comment">// 2.2.设置scrollLine的属性</span></span><br><span class="line">    scrollView.addSubview(scrollLine)</span><br><span class="line">    scrollLine.frame <span class="operator">=</span> <span class="type">CGRect</span>(x: firstLabel.frame.origin.x, y: frame.height <span class="operator">-</span> kScrollLineH, width: firstLabel.frame.width, height: kScrollLineH)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210527155457748.png&quot; alt=&quot;image-20210527155457748&quot;&gt;&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Runtime消息发送机制</title>
    <link href="http://example.com/2020/04/22/iOS%E8%B0%83%E7%94%A8%E4%B8%80%E4%B8%AA%E6%96%B9%E6%B3%95%E6%97%B6/"/>
    <id>http://example.com/2020/04/22/iOS%E8%B0%83%E7%94%A8%E4%B8%80%E4%B8%AA%E6%96%B9%E6%B3%95%E6%97%B6/</id>
    <published>2020-04-22T04:49:00.000Z</published>
    <updated>2020-04-22T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Runtime消息发送机制"><a href="#Runtime消息发送机制" class="headerlink" title="Runtime消息发送机制"></a>Runtime消息发送机制</h2><p>1）iOS调用一个方法时，实际上会调用objc_msgSend(receiver, selector, arg1, arg2, …)，该方法第一个参数是消息接收者，第二个参数是方法名，剩下的参数是方法参数；<br>2）iOS调用一个方法时，会先去该类的方法缓存列表里面查找是否有该方法，如果有直接调用，否则走第3）步；<br>3）去该类的方法列表里面找，找到直接调用，把方法加入缓存列表；否则走第4）步；<br>4）沿着该类的继承链继续查找，找到直接调用，把方法加入缓存列表；否则消息转发流程；</p><p>如下图：</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514140320354.png" alt="image-20210514140320354"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Runtime消息发送机制&quot;&gt;&lt;a href=&quot;#Runtime消息发送机制&quot; class=&quot;headerlink&quot; title=&quot;Runtime消息发送机制&quot;&gt;&lt;/a&gt;Runtime消息发送机制&lt;/h2&gt;&lt;p&gt;1）iOS调用一个方法时，实际上会调用objc_ms</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>YYModel不能读取model类属性变量无法解析返回空解决</title>
    <link href="http://example.com/2020/03/14/%E5%88%9B%E5%BB%BAModel%E7%B1%BB%E6%97%B6%E5%B1%9E%E6%80%A7%E5%8F%98%E9%87%8F%E5%89%8D%E9%9C%80%E5%8A%A0-objc/"/>
    <id>http://example.com/2020/03/14/%E5%88%9B%E5%BB%BAModel%E7%B1%BB%E6%97%B6%E5%B1%9E%E6%80%A7%E5%8F%98%E9%87%8F%E5%89%8D%E9%9C%80%E5%8A%A0-objc/</id>
    <published>2020-03-14T05:45:45.000Z</published>
    <updated>2020-03-14T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用-Swift-创建Model类时属性变量前需加-objc-，否则-YYModel-将不能读取-model-类属性变量，即无法解析返回空。"><a href="#使用-Swift-创建Model类时属性变量前需加-objc-，否则-YYModel-将不能读取-model-类属性变量，即无法解析返回空。" class="headerlink" title="使用 Swift 创建Model类时属性变量前需加@objc ，否则 YYModel 将不能读取 model 类属性变量，即无法解析返回空。"></a>使用 Swift 创建Model类时属性变量前需加@objc ，否则 YYModel 将不能读取 model 类属性变量，即无法解析返回空。</h2><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514134704537.png" alt="image-20210514134704537"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;使用-Swift-创建Model类时属性变量前需加-objc-，否则-YYModel-将不能读取-model-类属性变量，即无法解析返回空。&quot;&gt;&lt;a href=&quot;#使用-Swift-创建Model类时属性变量前需加-objc-，否则-YYModel-将不能读取-m</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Swift闭包的参数改变</title>
    <link href="http://example.com/2020/02/14/Swift%E9%97%AD%E5%8C%85%E7%9A%84%E5%8F%82%E6%95%B0%E6%94%B9%E5%8F%98/"/>
    <id>http://example.com/2020/02/14/Swift%E9%97%AD%E5%8C%85%E7%9A%84%E5%8F%82%E6%95%B0%E6%94%B9%E5%8F%98/</id>
    <published>2020-02-14T05:49:59.000Z</published>
    <updated>2020-02-14T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514135106543.png" alt="image-20210514135106543"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514135106543.png&quot; alt=&quot;image-20210514135106543&quot;&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>swiftui初探（5）</title>
    <link href="http://example.com/2020/01/20/swiftui%E5%88%9D%E6%8E%A2%EF%BC%885%EF%BC%89/"/>
    <id>http://example.com/2020/01/20/swiftui%E5%88%9D%E6%8E%A2%EF%BC%885%EF%BC%89/</id>
    <published>2020-01-20T04:49:00.000Z</published>
    <updated>2021-02-22T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="窗体和控制"><a href="#窗体和控制" class="headerlink" title="窗体和控制"></a>窗体和控制</h2><p>新建Settings(SwiftUiView),为其设计样式</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514092208356.png" alt="image-20210514092208356"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">struct Settings: View &#123;</span><br><span class="line">    @State var reeive = false</span><br><span class="line">    @State var number = 1</span><br><span class="line">    @State var selection = 1</span><br><span class="line">    @State var date = Date()</span><br><span class="line">    </span><br><span class="line">    var body: some View &#123;</span><br><span class="line">        NavigationView &#123;</span><br><span class="line">            Form &#123;</span><br><span class="line">                Toggle(isOn: $reeive) &#123;</span><br><span class="line">                    Text(&quot;接收通知&quot;)</span><br><span class="line">                &#125;</span><br><span class="line">                Stepper(value: $number, in: 1...10) &#123;</span><br><span class="line">                    Text(&quot;\(number) Notification\(number &gt; 1 ? &quot;s&quot; : &quot;&quot;) per  week&quot;)</span><br><span class="line">                &#125;</span><br><span class="line">                Picker(selection: $selection, label: Text(&quot;最喜欢的课程&quot;)) &#123;</span><br><span class="line">                    Text(&quot;SwiftUI&quot;).tag(1)</span><br><span class="line">                    Text(&quot;React&quot;).tag(2)</span><br><span class="line">                &#125;</span><br><span class="line">                DatePicker(selection: $date, label: &#123;</span><br><span class="line">                    Text(&quot;日期&quot;)</span><br><span class="line">                    </span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">            .navigationBarTitle(&quot;设置&quot;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加你的邮件标签"><a href="#添加你的邮件标签" class="headerlink" title="添加你的邮件标签"></a>添加你的邮件标签</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514094314959.png" alt="image-20210514094314959"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@State var email = &quot;&quot;</span><br><span class="line"></span><br><span class="line">TextField(&quot;你的邮件&quot;, text: $email)</span><br><span class="line">                    .textFieldStyle(RoundedBorderTextFieldStyle())</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>TextField inside HStack然后改为Section，添加提交按钮</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203212130255.png" alt="image-20210203212130255"></p><h3 id="将设置添加到TabBar中"><a href="#将设置添加到TabBar中" class="headerlink" title="将设置添加到TabBar中"></a>将设置添加到TabBar中</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203212446653.png" alt="image-20210203212446653"></p><h3 id="修复左侧按钮"><a href="#修复左侧按钮" class="headerlink" title="修复左侧按钮"></a>修复左侧按钮</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203214205699.png" alt="image-20210203214205699"></p><h2 id="滚动动画"><a href="#滚动动画" class="headerlink" title="滚动动画"></a>滚动动画</h2><h3 id="CourseView-inside-HStack然后改为GeometryReader"><a href="#CourseView-inside-HStack然后改为GeometryReader" class="headerlink" title="CourseView inside HStack然后改为GeometryReader"></a>CourseView inside HStack然后改为GeometryReader</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203223956684.png" alt="image-20210203223956684"></p><h3 id="设置卡片动画并添加几张卡片"><a href="#设置卡片动画并添加几张卡片" class="headerlink" title="设置卡片动画并添加几张卡片"></a>设置卡片动画并添加几张卡片</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203225850886.png" alt="image-20210203225850886"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203225946633.png" alt="image-20210203225946633"></p><p> 新建CertificateRows(SwiftUiView),为其设计样式</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203230752697.png" alt="image-20210203230752697"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import SwiftUI</span><br><span class="line"></span><br><span class="line">struct CertificateRows: View &#123;</span><br><span class="line">    var body: some View &#123;</span><br><span class="line">        CertificateView()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">struct CertificateRows_Previews: PreviewProvider &#123;</span><br><span class="line">    static var previews: some View &#123;</span><br><span class="line">        CertificateRows()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">struct Certificate: Identifiable &#123;</span><br><span class="line">    var id = UUID()</span><br><span class="line">    var title: String</span><br><span class="line">    var image: String</span><br><span class="line">    var width: CGFloat</span><br><span class="line">    var height: CGFloat</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">let certificateData = [</span><br><span class="line">    Certificate(title: &quot;OC&quot;, image: &quot;Certificate1&quot;, width: 230, height: 150),</span><br><span class="line">    Certificate(title: &quot;Swift&quot;, image: &quot;Certificate2&quot;, width: 230, height: 150),</span><br><span class="line">    Certificate(title: &quot;Java&quot;, image: &quot;Certificate3&quot;, width: 230, height: 150),</span><br><span class="line">    Certificate(title: &quot;GO&quot;, image: &quot;Certificate4&quot;, width: 230, height: 150),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="设置数据，循环出现"><a href="#设置数据，循环出现" class="headerlink" title="设置数据，循环出现"></a>设置数据，循环出现</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203231007100.png" alt="image-20210203231007100"></p><h3 id="回去绑定数据"><a href="#回去绑定数据" class="headerlink" title="回去绑定数据"></a>回去绑定数据</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203232220207.png" alt="image-20210203232220207"></p><h3 id="设置卡片内图片大小"><a href="#设置卡片内图片大小" class="headerlink" title="设置卡片内图片大小"></a>设置卡片内图片大小</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203232706802.png" alt="image-20210203232706802"></p><h3 id="修改卡片样式，添加滚动视图"><a href="#修改卡片样式，添加滚动视图" class="headerlink" title="修改卡片样式，添加滚动视图"></a>修改卡片样式，添加滚动视图</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203233454078.png" alt="image-20210203233454078"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203233559826.png" alt="image-20210203233559826"></p><h3 id="到HomeList，把滚动视图添加上，调整下布局"><a href="#到HomeList，把滚动视图添加上，调整下布局" class="headerlink" title="到HomeList，把滚动视图添加上，调整下布局"></a>到HomeList，把滚动视图添加上，调整下布局</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204164006165.png" alt="image-20210204164006165"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204164030817.png" alt="image-20210204164030817"></p><h3 id="调整卡片布局"><a href="#调整卡片布局" class="headerlink" title="调整卡片布局"></a>调整卡片布局</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204164853286.png" alt="image-20210204164853286"></p><h2 id="iPad与小屏幕适配"><a href="#iPad与小屏幕适配" class="headerlink" title="iPad与小屏幕适配"></a>iPad与小屏幕适配</h2><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204172819307.png" alt="image-20210204172819307"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204172841134.png" alt="image-20210204172841134"></p><h3 id="按钮颜色适配与侧边栏"><a href="#按钮颜色适配与侧边栏" class="headerlink" title="按钮颜色适配与侧边栏"></a>按钮颜色适配与侧边栏</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204173903507.png" alt="image-20210204173903507"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204174015944.png" alt="image-20210204174015944"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204174057140.png" alt="image-20210204174057140"></p><p>顶部遮挡适配</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204180951736.png" alt="image-20210204180951736"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let statusBarHeight = UIApplication.shared.windows[0].windowScene?.statusBarManager?.statusBarFrame.height ?? 0</span><br><span class="line">let screen = UIScreen.main.bounds</span><br></pre></td></tr></table></figure><h3 id="修复铃声按钮打开是更新"><a href="#修复铃声按钮打开是更新" class="headerlink" title="修复铃声按钮打开是更新"></a>修复铃声按钮打开是更新</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204183207492.png" alt="image-20210204183207492"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    @State var showUpdate = false</span><br><span class="line"></span><br><span class="line">Button(action: &#123;</span><br><span class="line">                       self.showUpdate.toggle()</span><br><span class="line">                   </span><br><span class="line">               &#125;) &#123;</span><br><span class="line">                   CircleButton(icon: &quot;bell&quot;)</span><br><span class="line">               &#125;.sheet(isPresented: $showUpdate) &#123;</span><br><span class="line">                   UpdateList()</span><br><span class="line">               &#125;</span><br></pre></td></tr></table></figure><h3 id="左侧设置按钮的设置"><a href="#左侧设置按钮的设置" class="headerlink" title="左侧设置按钮的设置"></a>左侧设置按钮的设置</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514094249786.png" alt="image-20210514094249786"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">.foregroundColor(.primary)</span><br><span class="line"></span><br><span class="line">@State var showUpdate = false </span><br><span class="line">          </span><br><span class="line">          </span><br><span class="line">          </span><br><span class="line">          </span><br><span class="line">          if (item.title == &quot;设置&quot;) &#123;</span><br><span class="line">                        Button(action: &#123;</span><br><span class="line">                            self.showUpdate.toggle()</span><br><span class="line">                        &#125;) &#123;</span><br><span class="line">                            MenuRow(image: item.icon, text: item.title)</span><br><span class="line">                        &#125;.sheet(isPresented: self.$showUpdate) &#123;</span><br><span class="line">                            Settings()</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        MenuRow(image: item.icon, text: item.title)</span><br><span class="line">                    &#125;</span><br></pre></td></tr></table></figure><p>修改主页为home</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210204190121377.png" alt="image-20210204190121377"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;窗体和控制&quot;&gt;&lt;a href=&quot;#窗体和控制&quot; class=&quot;headerlink&quot; title=&quot;窗体和控制&quot;&gt;&lt;/a&gt;窗体和控制&lt;/h2&gt;&lt;p&gt;新建Settings(SwiftUiView),为其设计样式&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gi</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>swiftui初探（4）</title>
    <link href="http://example.com/2020/01/19/swiftui%E5%88%9D%E6%8E%A2%EF%BC%884%EF%BC%89/"/>
    <id>http://example.com/2020/01/19/swiftui%E5%88%9D%E6%8E%A2%EF%BC%884%EF%BC%89/</id>
    <published>2020-01-19T04:49:00.000Z</published>
    <updated>2021-02-22T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="导航和传递数据"><a href="#导航和传递数据" class="headerlink" title="导航和传递数据"></a>导航和传递数据</h2><h3 id="VStack-inside-HStack"><a href="#VStack-inside-HStack" class="headerlink" title="VStack inside HStack"></a>VStack inside HStack</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202171506669.png" alt="image-20210202171506669" style="zoom:50%;"><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202173428207.png" alt="image-20210202173428207"></p><h3 id="显示添加图片"><a href="#显示添加图片" class="headerlink" title="显示添加图片"></a>显示添加图片</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202171506669.png" alt="image-20210202171506669" style="zoom:50%;"><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202173428207.png" alt="image-20210202173428207"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Image(item.image)</span><br><span class="line">     .resizable()</span><br><span class="line">     .aspectRatio(contentMode: .fit)//图片设置自适应不改变长款</span><br><span class="line">     .frame(width: 80, height: 80)</span><br><span class="line">     .background(Color(&quot;background&quot;))</span><br><span class="line">     .cornerRadius(20)</span><br></pre></td></tr></table></figure><h3 id="新建UpdateDetail-SwiftUiView-为其设计样式"><a href="#新建UpdateDetail-SwiftUiView-为其设计样式" class="headerlink" title="新建UpdateDetail(SwiftUiView),为其设计样式"></a>新建UpdateDetail(SwiftUiView),为其设计样式</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202174444547.png" alt="image-20210202174444547"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">struct UpdateDetail: View &#123;</span><br><span class="line">    var title = &quot;Swiftui&quot;</span><br><span class="line">    var text = &quot;Loading&quot;</span><br><span class="line">    var image = &quot;Illustration1&quot;</span><br><span class="line">    </span><br><span class="line">    var body: some View &#123;</span><br><span class="line">        VStack(spacing: 20.0) &#123;</span><br><span class="line">            Text(title)</span><br><span class="line">                .font(.largeTitle)</span><br><span class="line">                .fontWeight(.heavy)</span><br><span class="line">            </span><br><span class="line">            Image(image)</span><br><span class="line">                .resizable()</span><br><span class="line">                .aspectRatio(contentMode: .fit)</span><br><span class="line">                .frame(height: 200)</span><br><span class="line">            </span><br><span class="line">            Text(text)</span><br><span class="line">                .lineLimit(nil)</span><br><span class="line">            Spacer()</span><br><span class="line">        &#125;</span><br><span class="line">        .padding(30.0)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回到UpdateList，添加视图到点击<img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202181632454.png" alt="image-20210202181632454"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NavigationLink(destination: UpdateDetail(title: item.title, text: item.text, image: item.image)) </span><br></pre></td></tr></table></figure><h3 id="调整文字适应对齐"><a href="#调整文字适应对齐" class="headerlink" title="调整文字适应对齐"></a>调整文字适应对齐</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202183313954.png" alt="image-20210202183313954"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.frame(minWidth: 0, maxWidth:</span><br><span class="line">               .infinity, alignment: .leading)</span><br></pre></td></tr></table></figure><h2 id="合并和编辑数据"><a href="#合并和编辑数据" class="headerlink" title="合并和编辑数据"></a>合并和编辑数据</h2><h3 id="新建UpdateStore-SwiftUiView-为其设计样式"><a href="#新建UpdateStore-SwiftUiView-为其设计样式" class="headerlink" title="新建UpdateStore(SwiftUiView),为其设计样式"></a>新建UpdateStore(SwiftUiView),为其设计样式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import SwiftUI</span><br><span class="line">import Combine</span><br><span class="line"></span><br><span class="line">class UpdateStore: ObservableObject &#123;</span><br><span class="line">    let didChange = PassthroughSubject&lt;Void, Never&gt;()</span><br><span class="line">    </span><br><span class="line">    @Published var updates: [Update] &#123;</span><br><span class="line">        didSet &#123;</span><br><span class="line">            didChange.send()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    init(updates: [Update] = []) &#123;</span><br><span class="line">        self.updates = updates</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203141323725.png" alt="image-20210203141323725"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@ObservedObject var store = UpdateStore(updates: updateData)// 声明 UpdateStore 类对象</span><br></pre></td></tr></table></figure><h3 id="新建一个按钮，方便添加数据"><a href="#新建一个按钮，方便添加数据" class="headerlink" title="新建一个按钮，方便添加数据"></a>新建一个按钮，方便添加数据</h3><p>List inside VStack</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203154553673.png" alt="image-20210203154553673"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">func addUpdate() &#123;</span><br><span class="line">    store.updates.append(Update(image: &quot;Illustration1&quot;, title: &quot;落梅&quot;, text: &quot;这个女子，曾经走过人间四月，又与连开的夏季有过相濡以沫的约定&quot;, date: &quot;JUN 1&quot;))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">                Button(action: addUpdate) &#123;</span><br><span class="line">                Text(&quot;添加&quot;)</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h3 id="修改下布局"><a href="#修改下布局" class="headerlink" title="修改下布局"></a>修改下布局</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203154703311.png" alt="image-20210203154703311"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203155046293.png" alt="image-20210203155046293"></p><h3 id="添加删除按钮"><a href="#添加删除按钮" class="headerlink" title="添加删除按钮"></a>添加删除按钮</h3><h3 id><a href="#" class="headerlink" title></a><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203155741490.png" alt="image-20210203155741490"></h3><p>添加删除后排序方法与编辑按钮</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/Feb-03-2021%2016-09-42-2-20210514091333519.gif"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203160426320.png" alt="image-20210203160426320"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203160444308.png" alt="image-20210203160444308"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">func move(from source: IndexSet, to destination: Int) &#123;</span><br><span class="line">    store.updates.swapAt(source.first!, destination)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>给按钮添加样式</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203162206580.png" alt="image-20210203162206580"></p><h2 id="标签栏与测试"><a href="#标签栏与测试" class="headerlink" title="标签栏与测试"></a>标签栏与测试</h2><h3 id="新建TabBar-SwiftUiView-为其设计样式"><a href="#新建TabBar-SwiftUiView-为其设计样式" class="headerlink" title="新建TabBar(SwiftUiView),为其设计样式"></a>新建TabBar(SwiftUiView),为其设计样式</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203165630153.png" alt="image-20210203165630153"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">struct TabBar: View &#123;</span><br><span class="line">    @State var selectedView = 1</span><br><span class="line">    </span><br><span class="line">    var body: some View &#123;</span><br><span class="line">        TabView(selection: .constant(1)) &#123;</span><br><span class="line">            Home().tabItem &#123;</span><br><span class="line">                VStack &#123;</span><br><span class="line">                    Image(&quot;IconHome&quot;)</span><br><span class="line">                    Text(&quot;首页&quot;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            .tag(1)</span><br><span class="line">            ContentView().tabItem &#123;</span><br><span class="line">                VStack &#123;</span><br><span class="line">                    Image(&quot;IconCards&quot;)</span><br><span class="line">                    Text(&quot;证书&quot;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            .tag(2)</span><br><span class="line">            UpdateList().tabItem &#123;</span><br><span class="line">                VStack &#123;</span><br><span class="line">                    Image(&quot;IconSettings&quot;)</span><br><span class="line">                    Text(&quot;最新&quot;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            .tag(3)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改模拟器首页视图"><a href="#修改模拟器首页视图" class="headerlink" title="修改模拟器首页视图"></a>修改模拟器首页视图</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514091034806.png" alt="image-20210514091034806"></p><h2 id="暗黑模式和辅助功能（无障碍模式）"><a href="#暗黑模式和辅助功能（无障碍模式）" class="headerlink" title="暗黑模式和辅助功能（无障碍模式）"></a>暗黑模式和辅助功能（无障碍模式）</h2><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203184545098.png" alt="image-20210203184545098"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203184611447.png" alt="image-20210203184611447"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203184635336.png" alt="image-20210203184635336"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203184652566.png" alt="image-20210203184652566"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BlurView(style: .systemThinMaterial)</span><br><span class="line"></span><br><span class="line">.environment(\.colorScheme, .dark)</span><br><span class="line">.environment(\.sizeCategory, .extraExtraLarge)</span><br></pre></td></tr></table></figure><h3 id="TabBar-inside-HStack"><a href="#TabBar-inside-HStack" class="headerlink" title="TabBar() inside HStack"></a>TabBar() inside HStack</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203185623837.png" alt="image-20210203185623837"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;导航和传递数据&quot;&gt;&lt;a href=&quot;#导航和传递数据&quot; class=&quot;headerlink&quot; title=&quot;导航和传递数据&quot;&gt;&lt;/a&gt;导航和传递数据&lt;/h2&gt;&lt;h3 id=&quot;VStack-inside-HStack&quot;&gt;&lt;a href=&quot;#VStack-inside</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>swiftui初探（3）</title>
    <link href="http://example.com/2020/01/18/swiftui%E5%88%9D%E6%8E%A2%EF%BC%883%EF%BC%89/"/>
    <id>http://example.com/2020/01/18/swiftui%E5%88%9D%E6%8E%A2%EF%BC%883%EF%BC%89/</id>
    <published>2020-01-18T04:49:00.000Z</published>
    <updated>2021-02-22T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="滚动视图"><a href="#滚动视图" class="headerlink" title="滚动视图"></a>滚动视图</h2><h3 id="新建HomeList-swift-SwiftUiView-为其设计卡片样式"><a href="#新建HomeList-swift-SwiftUiView-为其设计卡片样式" class="headerlink" title="新建HomeList.swift(SwiftUiView),为其设计卡片样式"></a>新建HomeList.swift(SwiftUiView),为其设计卡片样式</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514085528334.png" alt="image-20210514085528334"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    var body: some View &#123;</span><br><span class="line">        VStack(alignment: .leading) &#123;</span><br><span class="line">            Text(&quot;设计一个应用非常棒&quot;)</span><br><span class="line">                .font(/*@START_MENU_TOKEN@*/.title/*@END_MENU_TOKEN@*/)</span><br><span class="line">                .fontWeight(/*@START_MENU_TOKEN@*/.bold/*@END_MENU_TOKEN@*/)</span><br><span class="line">                .foregroundColor(Color.white)</span><br><span class="line">                .padding(20)</span><br><span class="line">                .lineLimit(4)</span><br><span class="line">                .frame(width: 150)</span><br><span class="line">            Spacer()</span><br><span class="line">            Image(&quot;Illustration1&quot;)</span><br><span class="line">        &#125;</span><br><span class="line">        .background(Color(&quot;background3&quot;))</span><br><span class="line">        .cornerRadius(30)</span><br><span class="line">        .frame(width: 246, height: 360)</span><br><span class="line">        .shadow(color: Color(red: 0.27058823529411763, green: 0.23529411764705882, blue: 0.788235294117647, opacity: 0.3), radius: 20, x: 0, y: 20)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="将颜色3和颜色4复制处理为背景3和背景4，不透明30"><a href="#将颜色3和颜色4复制处理为背景3和背景4，不透明30" class="headerlink" title="将颜色3和颜色4复制处理为背景3和背景4，不透明30"></a>将颜色3和颜色4复制处理为背景3和背景4，不透明30</h3><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202113152709.png" alt="image-20210202113152709" style="zoom:50%;"><p>点击VStack,选择in HStack，然后提取子视图，点击VStack，subView为CourseView（）</p><p>点击VStack,选择repeat,重复3次</p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202120559746.png" alt="image-20210202120559746" style="zoom:50%;"><p>点击HStack,选择Group，改为ScrollView</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514085119337.png" alt="image-20210514085119337"></p><h3 id="滚动视图的设置"><a href="#滚动视图的设置" class="headerlink" title="滚动视图的设置"></a>滚动视图的设置</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202123458539.png" alt="image-20210202123458539"></p><h2 id="模态"><a href="#模态" class="headerlink" title="模态"></a>模态</h2><img src="https://gitee.com/zhu565615430/images/raw/master/imas/555-2.gif" alt="555-2" style="zoom:67%;"><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514085556160.png" alt="image-20210514085556160"><img src="/Users/zhuguanliang/Library/Application Support/typora-user-images/image-20210202135415951.png" alt="image-20210202135415951" style="zoom:50%;"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">@State var showContentView: Bool = false</span><br><span class="line">var body: some View &#123;</span><br><span class="line">    ScrollView(.horizontal, showsIndicators: false) &#123;</span><br><span class="line">        VStack &#123;</span><br><span class="line">            HStack &#123;</span><br><span class="line">                ForEach(0 ..&lt; 3) &#123; item in</span><br><span class="line">                    Button(action: &#123;</span><br><span class="line">                        self.showContentView = true</span><br><span class="line">                    &#125;) &#123;</span><br><span class="line">                        CourseView()</span><br><span class="line">                    &#125;.sheet(isPresented: self.$showContentView) &#123;</span><br><span class="line">                        ContentView()</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="创建数据模型"><a href="#创建数据模型" class="headerlink" title="创建数据模型"></a>创建数据模型</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514084651827.png" alt="image-20210514084651827"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">struct Courses: Identifiable &#123;</span><br><span class="line">    var id = UUID()</span><br><span class="line">    var title : String</span><br><span class="line">    var image : String</span><br><span class="line">    var backgroundColor: Color</span><br><span class="line">    var shadowColor : Color</span><br><span class="line">&#125;</span><br><span class="line">let CourseData = [</span><br><span class="line">    Courses(</span><br><span class="line">        title: &quot;设计一个非常棒应用&quot;,</span><br><span class="line">        image: &quot;Illustration1&quot;,</span><br><span class="line">        backgroundColor: Color(&quot;background3&quot;),</span><br><span class="line">        shadowColor: Color(&quot;backgroundShadow3&quot;)</span><br><span class="line">    ),</span><br><span class="line">    Courses(</span><br><span class="line">        title: &quot;课程设计&quot;,</span><br><span class="line">        image: &quot;Illustration2&quot;,</span><br><span class="line">        backgroundColor: Color(&quot;background4&quot;),</span><br><span class="line">        shadowColor: Color(&quot;backgroundShadow4&quot;)</span><br><span class="line">    )</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="使用数据模型"><a href="#使用数据模型" class="headerlink" title="使用数据模型"></a>使用数据模型</h3><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202140433327.png" alt="image-20210202140433327" style="zoom:50%;"><h3 id="绑定数据模型"><a href="#绑定数据模型" class="headerlink" title="绑定数据模型"></a>绑定数据模型</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514084742188.png" alt="image-20210514084742188"></p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202141423229.png" alt="image-20210202141423229" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">    var title = &quot;设计一个非常棒应用&quot;</span><br><span class="line">    var image : String = &quot;Illustration1&quot;</span><br><span class="line">    var color = Color(&quot;background3&quot;)</span><br><span class="line">    var shadowColor = Color(&quot;backgroundshadow3&quot;)</span><br><span class="line">    </span><br><span class="line">CourseView(title: item.title, image: item.image, color: item.backgroundColor, shadowColor: item.shadowColor)</span><br></pre></td></tr></table></figure><p>调整页面大小，调整文字大小一样适应</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202141840469.png" alt="image-20210202141840469"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202142336572.png" alt="image-20210202142336572"></p><h3 id="调整设计间距"><a href="#调整设计间距" class="headerlink" title="调整设计间距"></a>调整设计间距</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202142742256.png" alt="image-20210202142742256"></p><h2 id="模糊背景"><a href="#模糊背景" class="headerlink" title="模糊背景"></a>模糊背景</h2><h3 id="新建BlurView-swift-SwiftUiView-为其设计样式"><a href="#新建BlurView-swift-SwiftUiView-为其设计样式" class="headerlink" title="新建BlurView.swift(SwiftUiView),为其设计样式"></a>新建BlurView.swift(SwiftUiView),为其设计样式</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514084840096.png" alt="image-20210514084840096"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">struct BlurView: UIViewRepresentable &#123;</span><br><span class="line">    </span><br><span class="line">    let style: UIBlurEffect.Style</span><br><span class="line">    </span><br><span class="line">    func makeUIView(context: UIViewRepresentableContext&lt;BlurView&gt;) -&gt; UIView &#123;</span><br><span class="line">        let view = UIView(frame: .zero)</span><br><span class="line">        view.backgroundColor = .clear</span><br><span class="line">        let blurEffect = UIBlurEffect(style: style)</span><br><span class="line">        let blurView = UIVisualEffectView(effect: blurEffect)</span><br><span class="line">        blurView.translatesAutoresizingMaskIntoConstraints = false</span><br><span class="line">        view.insertSubview(blurView, at: 0)</span><br><span class="line">        NSLayoutConstraint.activate([</span><br><span class="line">            blurView.heightAnchor.constraint(equalTo: view.heightAnchor),</span><br><span class="line">            blurView.widthAnchor.constraint(equalTo: view.widthAnchor)</span><br><span class="line">        ])</span><br><span class="line">        return view</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    func updateUIView(_ uiView: UIView, context: UIViewRepresentableContext&lt;BlurView&gt;) &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回到ContentView中，使用模糊背景</p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202144315388.png" alt="image-20210202144315388" style="zoom:50%;"><p>回到ContentView中，将HomeList视图添加上去</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202151920190.png" alt="image-20210202151920190"></p><h3 id="重新设计布局"><a href="#重新设计布局" class="headerlink" title="重新设计布局"></a>重新设计布局</h3><p>标题在滚动视图之上</p><p>回到HomeList中，修改视图</p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202152207911.png" alt="image-20210202152207911" style="zoom:50%;"><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202154610027.png" alt="image-20210202154610027"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202154717118.png" alt="image-20210202154717118"></p><h3 id="添加模糊与动画效果"><a href="#添加模糊与动画效果" class="headerlink" title="添加模糊与动画效果"></a>添加模糊与动画效果</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210203163000374.png" alt="image-20210203163000374"></p><h2 id="导航视图和列表"><a href="#导航视图和列表" class="headerlink" title="导航视图和列表"></a>导航视图和列表</h2><h3 id="新建UpdateList-swift-SwiftUiView-为其设计样式"><a href="#新建UpdateList-swift-SwiftUiView-为其设计样式" class="headerlink" title="新建UpdateList.swift(SwiftUiView),为其设计样式"></a>新建UpdateList.swift(SwiftUiView),为其设计样式</h3><p>从工具栏添加一个NavigationView，</p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202160320233.png" alt="image-20210202160320233" style="zoom: 33%;"><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202164959469.png" alt="image-20210202164959469" style="zoom:33%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">    @State var present = false</span><br><span class="line">    var body: some View &#123;</span><br><span class="line">        NavigationView &#123;</span><br><span class="line">                  List(0 ..&lt; 20) &#123; item in</span><br><span class="line">                      NavigationLink(destination: Text(&quot;1&quot;)) &#123;</span><br><span class="line">                        Text(&quot;Navigate 1&quot;) &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">                  .navigationBarTitle(Text(&quot;更新&quot;))</span><br><span class="line">                  .navigationBarItems(trailing:</span><br><span class="line">                     Button(action: &#123;</span><br><span class="line">                       self.present.toggle()</span><br><span class="line">                    &#125;) &#123;</span><br><span class="line">                         Image(systemName: &quot;gear&quot;)</span><br><span class="line">                    &#125;</span><br><span class="line">                    .sheet(isPresented: $present, content: &#123;</span><br><span class="line">                        Text(&quot;Settings&quot;)</span><br><span class="line">                    &#125;)</span><br><span class="line">                  )</span><br><span class="line">              &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在底部创建数据模型"><a href="#在底部创建数据模型" class="headerlink" title="在底部创建数据模型"></a>在底部创建数据模型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">struct Update: Identifiable &#123;</span><br><span class="line">    var id = UUID()</span><br><span class="line">    var image: String</span><br><span class="line">    var title: String</span><br><span class="line">    var text: String</span><br><span class="line">    var date: String</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">let updateDate = [</span><br><span class="line">    Update(image: &quot;Illustration1&quot;, title: &quot;swiftui&quot;, text: &quot;大家忽视覅偶尔回复而韩国is的hi多少个is多个收到货IGis个his读后感is多个hi韩国ID深V出魔抗VBUI欧盟是的归属感就是 属地化工is多个hi是个 是个hi第三帝国会死哦低功耗is电话公司工会&quot;, date: &quot;JUN 26&quot;),</span><br><span class="line">    Update(image: &quot;Illustration2&quot;, title: &quot;swiftui&quot;, text: &quot;大家忽视覅偶尔回复而韩国is的hi多少个is多个收到货IGis个his读后感is多个hi韩国ID深V出魔抗VBUI欧盟是的归属感就是 属地化工is多个hi是个 是个hi第三帝国会死哦低功耗is电话公司工会&quot;, date: &quot;JUN 26&quot;),</span><br><span class="line">    Update(image: &quot;Illustration3&quot;, title: &quot;swiftui&quot;, text: &quot;大家忽视覅偶尔回复而韩国is的hi多少个is多个收到货IGis个his读后感is多个hi韩国ID深V出魔抗VBUI欧盟是的归属感就是 属地化工is多个hi是个 是个hi第三帝国会死哦低功耗is电话公司工会&quot;, date: &quot;JUN 26&quot;),</span><br><span class="line">    Update(image: &quot;Illustration4&quot;, title: &quot;swiftui&quot;, text: &quot;大家忽视覅偶尔回复而韩国is的hi多少个is多个收到货IGis个his读后感is多个hi韩国ID深V出魔抗VBUI欧盟是的归属感就是 属地化工is多个hi是个 是个hi第三帝国会死哦低功耗is电话公司工会&quot;, date: &quot;JUN 26&quot;),</span><br><span class="line">    Update(image: &quot;Certificate1&quot;, title: &quot;swiftui&quot;, text: &quot;大家忽视覅偶尔回复而韩国is的hi多少个is多个收到货IGis个his读后感is多个hi韩国ID深V出魔抗VBUI欧盟是的归属感就是 属地化工is多个hi是个 是个hi第三帝国会死哦低功耗is电话公司工会&quot;, date: &quot;JUN 26&quot;),</span><br><span class="line">    Update(image: &quot;Certificate2&quot;, title: &quot;swiftui&quot;, text: &quot;大家忽视覅偶尔回复而韩国is的hi多少个is多个收到货IGis个his读后感is多个hi韩国ID深V出魔抗VBUI欧盟是的归属感就是 属地化工is多个hi是个 是个hi第三帝国会死哦低功耗is电话公司工会&quot;, date: &quot;JUN 26&quot;),</span><br><span class="line">    Update(image: &quot;Certificate3&quot;, title: &quot;swiftui&quot;, text: &quot;大家忽视覅偶尔回复而韩国is的hi多少个is多个收到货IGis个his读后感is多个hi韩国ID深V出魔抗VBUI欧盟是的归属感就是 属地化工is多个hi是个 是个hi第三帝国会死哦低功耗is电话公司工会&quot;, date: &quot;JUN 26&quot;),</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="显示数据"><a href="#显示数据" class="headerlink" title="显示数据"></a>显示数据</h3><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202171235647.png" alt="image-20210202171235647" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">var updates = updateDate</span><br><span class="line"></span><br><span class="line">@State var present = false</span><br><span class="line">var body: some View &#123;</span><br><span class="line">    NavigationView &#123;</span><br><span class="line">              List(updates) &#123; item in</span><br><span class="line">                  NavigationLink(destination: Text(&quot;1&quot;)) &#123;</span><br><span class="line">                    VStack(alignment: .leading) &#123;</span><br><span class="line">                        Text(item.title)</span><br><span class="line">                            .font(.headline)</span><br><span class="line">                        Text(item.text)</span><br><span class="line">                            .lineLimit(/*@START_MENU_TOKEN@*/2/*@END_MENU_TOKEN@*/)</span><br><span class="line">                            .lineSpacing(4)</span><br><span class="line">                            .font(.subheadline)</span><br><span class="line">                            .frame(height: 50.0)</span><br><span class="line">                        </span><br><span class="line">                        Text(item.date)</span><br><span class="line">                            .font(.caption)</span><br><span class="line">                            .fontWeight(.bold)</span><br><span class="line">                            .foregroundColor(Color.gray)</span><br><span class="line">                            </span><br><span class="line">                    &#125;</span><br><span class="line">                    </span><br><span class="line">                  &#125;</span><br></pre></td></tr></table></figure><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202171527102.png" alt="image-20210202171527102" style="zoom: 33%;">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;滚动视图&quot;&gt;&lt;a href=&quot;#滚动视图&quot; class=&quot;headerlink&quot; title=&quot;滚动视图&quot;&gt;&lt;/a&gt;滚动视图&lt;/h2&gt;&lt;h3 id=&quot;新建HomeList-swift-SwiftUiView-为其设计卡片样式&quot;&gt;&lt;a href=&quot;#新建HomeLi</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>swiftui初探（2）</title>
    <link href="http://example.com/2020/01/17/swiftui%E5%88%9D%E6%8E%A2%EF%BC%882%EF%BC%89/"/>
    <id>http://example.com/2020/01/17/swiftui%E5%88%9D%E6%8E%A2%EF%BC%882%EF%BC%89/</id>
    <published>2020-01-17T04:49:00.000Z</published>
    <updated>2020-01-18T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建侧边菜单栏"><a href="#创建侧边菜单栏" class="headerlink" title="创建侧边菜单栏"></a>创建侧边菜单栏</h2><h3 id="新建Home（SwiftUIView），添加我的账户标题与图片"><a href="#新建Home（SwiftUIView），添加我的账户标题与图片" class="headerlink" title="新建Home（SwiftUIView），添加我的账户标题与图片"></a>新建Home（SwiftUIView），添加我的账户标题与图片</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201233226589.png" alt="image-20210201233226589"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">        VStack &#123;</span><br><span class="line">            HStack &#123;</span><br><span class="line">                Image(systemName: &quot;creditcard&quot;)</span><br><span class="line">                    .imageScale(.large)</span><br><span class="line">                    .foregroundColor(Color(&quot;icons&quot;))</span><br><span class="line">                    .frame(width: 32, height: 32)</span><br><span class="line">                Text(&quot;我的账户&quot;)</span><br><span class="line">                    .font(.headline)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201233322123.png" alt="image-20210201233322123"></p><h3 id="添加完整四个标签"><a href="#添加完整四个标签" class="headerlink" title="添加完整四个标签"></a>添加完整四个标签</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201234418862.png" alt="image-20210201234418862"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">import SwiftUI</span><br><span class="line"></span><br><span class="line">struct Home: View &#123;</span><br><span class="line">    var body: some View &#123;</span><br><span class="line">        VStack(alignment: .leading) &#123;</span><br><span class="line">            MenuRow(image: &quot;person.crop.circle&quot;, text: &quot;我的账户&quot;)</span><br><span class="line">            MenuRow(image: &quot;creditcard&quot;, text: &quot;记账&quot;)</span><br><span class="line">            MenuRow(image: &quot;person.and.person&quot;, text: &quot;团队&quot;)</span><br><span class="line">            MenuRow(image: &quot;arrow.uturn.down&quot;, text: &quot;退出&quot;)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">struct Home_Previews: PreviewProvider &#123;</span><br><span class="line">    static var previews: some View &#123;</span><br><span class="line">        Home()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">struct MenuRow: View &#123;</span><br><span class="line">    var image = &quot;creditcard&quot;</span><br><span class="line">    var text = &quot;我的账户&quot;</span><br><span class="line">    var body: some View &#123;</span><br><span class="line">        HStack &#123;</span><br><span class="line">            Image(systemName: image)</span><br><span class="line">                .imageScale(.large)</span><br><span class="line">                .foregroundColor(Color(&quot;icons&quot;))</span><br><span class="line">                .frame(width: 32, height: 32)</span><br><span class="line">            Text(text)</span><br><span class="line">                .font(.headline)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="靠左处理"><a href="#靠左处理" class="headerlink" title="靠左处理"></a>靠左处理</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201235203766.png" alt="image-20210201235203766"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">VStack(alignment: .leading , spacing : 20) &#123;</span><br><span class="line">    MenuRow(image: &quot;person.crop.circle&quot;, text: &quot;我的账户&quot;)</span><br><span class="line">    MenuRow(image: &quot;creditcard&quot;, text: &quot;记账&quot;)</span><br><span class="line">    MenuRow(image: &quot;person.and.person&quot;, text: &quot;团队&quot;)</span><br><span class="line">    MenuRow(image: &quot;arrow.uturn.down&quot;, text: &quot;退出&quot;)</span><br><span class="line">    Spacer()</span><br><span class="line">&#125;</span><br><span class="line">.padding(.top, 20)//顶边添加20</span><br><span class="line">.padding(30)//边距30</span><br><span class="line">.frame(minWidth: 0, maxWidth: .infinity)</span><br><span class="line">.background(Color.white)</span><br><span class="line">.cornerRadius(30)</span><br><span class="line">.padding(.trailing, 60)//左边缘处理</span><br><span class="line">.shadow(radius: 20)</span><br></pre></td></tr></table></figure><h3 id="左对齐"><a href="#左对齐" class="headerlink" title="左对齐"></a>左对齐</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514082157862.png" alt="image-20210514082157862"></p><h2 id="使用数据创建列表"><a href="#使用数据创建列表" class="headerlink" title="使用数据创建列表"></a>使用数据创建列表</h2><h3 id="使用数组创建模型对象"><a href="#使用数组创建模型对象" class="headerlink" title="使用数组创建模型对象"></a>使用数组创建模型对象</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202000320367.png" alt="image-20210202000320367"></p><p>创建模型，进行拆分</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202001623021.png" alt="image-20210202001623021"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202001558218.png" alt="image-20210202001558218"></p><p>菜单动画与其绑定</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202001737567.png" alt="image-20210202001737567"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202003014167.png" alt="image-20210202003014167"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/Feb-02-2021%2000-31-19.gif" alt="Feb-02-2021 00-31-19" style="zoom:50%;"><img src="https://gitee.com/zhu565615430/images/raw/master/imas/Feb-02-2021%2000-37-38.gif" alt="Feb-02-2021 00-37-38" style="zoom:50%;"></p><h3 id="插入3d动画"><a href="#插入3d动画" class="headerlink" title="插入3d动画"></a>插入3d动画</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202003708338.png" alt="image-20210202003708338"></p><h3 id="将其变为MenuView（）"><a href="#将其变为MenuView（）" class="headerlink" title="将其变为MenuView（）"></a>将其变为MenuView（）</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202004014460.png" alt="image-20210202004014460"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202004855971.png" alt="image-20210202004855971"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202004914752.png" alt="image-20210202004914752"></p><h2 id="创建漂浮按钮"><a href="#创建漂浮按钮" class="headerlink" title="创建漂浮按钮"></a>创建漂浮按钮</h2><h3 id="创建按钮"><a href="#创建按钮" class="headerlink" title="创建按钮"></a>创建按钮</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202005904354.png" alt="image-20210202005904354"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514080743123.png" alt="image-20210514080743123"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">HStack &#123;</span><br><span class="line">    Spacer()</span><br><span class="line">    Image(systemName: &quot;list.dash&quot;)</span><br><span class="line">        .foregroundColor(.black)</span><br><span class="line">&#125;</span><br><span class="line">.padding(.trailing, 20)</span><br><span class="line">.frame(width: 90, height: 60, alignment: /*@START_MENU_TOKEN@*/.center/*@END_MENU_TOKEN@*/)</span><br><span class="line">.background(Color.white)</span><br><span class="line">.cornerRadius(30)</span><br><span class="line">.shadow(color:Color(&quot;buttonShadow&quot;), radius: 10, x: 0, y: 10)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202010054884.png" alt="image-20210202010054884"></p><h3 id="让按钮靠边栏"><a href="#让按钮靠边栏" class="headerlink" title="让按钮靠边栏"></a>让按钮靠边栏</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202011922525.png" alt="image-20210202011922525"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.frame(minWidth: 0, maxWidth: .infinity, minHeight: 0, maxHeight: .infinity, alignment: .topLeading)</span><br></pre></td></tr></table></figure><h3 id="将其变为CircleButton（）"><a href="#将其变为CircleButton（）" class="headerlink" title="将其变为CircleButton（）"></a>将其变为CircleButton（）</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202012031731.png" alt="image-20210202012031731"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202091035645.png" alt="image-20210202091035645"></p><p>提取变量</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202091324973.png" alt="image-20210202091324973"></p><p>第二个图标显示</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202091452735.png" alt="image-20210202091452735"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202091947984.png" alt="image-20210202091947984"></p><h3 id="将其变为MenuButton（）"><a href="#将其变为MenuButton（）" class="headerlink" title="将其变为MenuButton（）"></a>将其变为MenuButton（）</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202091920496.png" alt="image-20210202091920496"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202092209983.png" alt="image-20210202092209983"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202092531713.png" alt="image-20210202092531713"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202092708191.png" alt="image-20210202092708191"></p><p>移动到此与右边按钮修复</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202095552477.png" alt="image-20210202095552477"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202095745303.png" alt="image-20210202095745303"></p><p>将home带到主页</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202095914699.png" alt="image-20210202095914699"></p><h3 id="添加动画"><a href="#添加动画" class="headerlink" title="添加动画"></a>添加动画</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/Feb-02-2021%2010-57-52.gif" alt="Feb-02-2021 10-57-52"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210202105633364.png" alt="image-20210202105633364"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;创建侧边菜单栏&quot;&gt;&lt;a href=&quot;#创建侧边菜单栏&quot; class=&quot;headerlink&quot; title=&quot;创建侧边菜单栏&quot;&gt;&lt;/a&gt;创建侧边菜单栏&lt;/h2&gt;&lt;h3 id=&quot;新建Home（SwiftUIView），添加我的账户标题与图片&quot;&gt;&lt;a href=&quot;#新建</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>swiftui初探（1）</title>
    <link href="http://example.com/2020/01/16/swiftui%E5%88%9D%E6%8E%A2%EF%BC%881%EF%BC%89/"/>
    <id>http://example.com/2020/01/16/swiftui%E5%88%9D%E6%8E%A2%EF%BC%881%EF%BC%89/</id>
    <published>2020-01-16T04:49:00.000Z</published>
    <updated>2020-01-18T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前言：在这系列文章你可以学到swiftUI</strong></p><h1 id="SWIFT——UI"><a href="#SWIFT——UI" class="headerlink" title="SWIFT——UI"></a>SWIFT——UI</h1><h2 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h2><h2 id><a href="#" class="headerlink" title></a><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210131004320381.png" alt="image-20210131004320381"></h2><h2 id="添加启动图片，和色彩背景等"><a href="#添加启动图片，和色彩背景等" class="headerlink" title="添加启动图片，和色彩背景等"></a>添加启动图片，和色彩背景等</h2><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514075504407.png" alt="image-20210514075504407"></p><h3 id="设置第一张卡片"><a href="#设置第一张卡片" class="headerlink" title="设置第一张卡片 "></a>设置第一张卡片 <img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514075711609.png" alt="image-20210514075711609"></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    var body: some View &#123;</span><br><span class="line">        VStack &#123;</span><br><span class="line">            VStack &#123;•</span><br><span class="line">                Text(&quot;UI 设计&quot;)</span><br><span class="line">                    .font(.title)</span><br><span class="line">                    .fontWeight(.bold)</span><br><span class="line">                    .foregroundColor(Color(&quot;accent&quot;))</span><br><span class="line">                    .padding(.top)</span><br><span class="line">                Text(/*@START_MENU_TOKEN@*/&quot;合格证书&quot;/*@END_MENU_TOKEN@*/)</span><br><span class="line">                    .foregroundColor(Color(.white))</span><br><span class="line">            &#125;</span><br><span class="line">            Image(&quot;Background&quot;)</span><br><span class="line">        &#125;</span><br><span class="line">        .background(Color.black).cornerRadius(10)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="布局和和堆栈"><a href="#布局和和堆栈" class="headerlink" title="布局和和堆栈"></a>布局和和堆栈</h3><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201001257114.png" style="zoom: 33%;"><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514000722734.png" alt="image-20210514000722734"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    HStack &#123;</span><br><span class="line">        VStack(alignment: .leading) &#123;•</span><br><span class="line">            Text(&quot;UI 设计&quot;)</span><br><span class="line">                .font(.title)</span><br><span class="line">                .fontWeight(.bold)</span><br><span class="line">                .foregroundColor(Color(&quot;accent&quot;))</span><br><span class="line">                .padding(.top)</span><br><span class="line">            Text(/*@START_MENU_TOKEN@*/&quot;合格证书&quot;/*@END_MENU_TOKEN@*/)</span><br><span class="line">                .foregroundColor(Color(.white))</span><br><span class="line">        &#125;</span><br><span class="line">        .padding(.horizontal)</span><br><span class="line">        Spacer()//推动到屏幕宽度</span><br><span class="line">        Image(&quot;Logo&quot;)</span><br><span class="line">            .resizable()</span><br><span class="line">            .frame(width: 30.0, height: 30.0)</span><br><span class="line">    &#125;</span><br><span class="line">    Image(&quot;Background&quot;)</span><br><span class="line">&#125;.frame(width: 340.0, height: 220.0)</span><br></pre></td></tr></table></figure><h3 id="设置第二章卡片"><a href="#设置第二章卡片" class="headerlink" title="设置第二章卡片"></a>设置第二章卡片</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201003759295.png" alt="image-20210201003759295"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201003830438.png" alt="image-20210201003830438"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">ZStack &#123;</span><br><span class="line">    </span><br><span class="line">    VStack &#123;</span><br><span class="line">        Text(&quot;背后的卡&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    .padding()</span><br><span class="line">    .frame(width: 300.0, height: 220.0)</span><br><span class="line">    .background(Color.blue)</span><br><span class="line">    .cornerRadius(10)</span><br><span class="line">    .shadow(radius: 20)</span><br><span class="line">    .offset(x: 0, y: -20)</span><br><span class="line"></span><br><span class="line">    VStack &#123;</span><br><span class="line">        HStack &#123;</span><br><span class="line">            VStack(alignment: .leading) &#123;•</span><br><span class="line">                Text(&quot;UI 设计&quot;)</span><br><span class="line">                    .font(.headline)</span><br><span class="line">                    .fontWeight(.bold)</span><br><span class="line">                    .foregroundColor(Color(&quot;accent&quot;))</span><br><span class="line">                    .padding(.top)</span><br><span class="line">                Text(/*@START_MENU_TOKEN@*/&quot;合格证书&quot;/*@END_MENU_TOKEN@*/)</span><br><span class="line">                    .foregroundColor(Color(.white))</span><br><span class="line">            &#125;</span><br><span class="line">            Spacer()//推动到屏幕宽度</span><br><span class="line">            Image(&quot;Logo&quot;)</span><br><span class="line">                .resizable()</span><br><span class="line">                .frame(width: 30.0, height: 30.0)</span><br><span class="line">        &#125;</span><br><span class="line">        .padding(.horizontal)</span><br><span class="line">        Spacer()</span><br><span class="line">        Image(&quot;Background&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    .frame(width: 340.0, height: 220.0)</span><br><span class="line">    .background(Color.black)</span><br><span class="line">    .cornerRadius(10)</span><br><span class="line">    .shadow(radius: 20)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514000805186.png" alt="image-20210514000805186"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514000824813.png" alt="image-20210514000824813"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/May-14-2021%2000-38-30.gif" alt="May-14-2021 00-38-30"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514003658268.png" alt="image-20210514003658268"></p><h3 id="添加标题，动画，图片"><a href="#添加标题，动画，图片" class="headerlink" title="添加标题，动画，图片"></a>添加标题，动画，图片</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    VStack &#123;</span><br><span class="line">        HStack &#123;</span><br><span class="line">            Text(&quot;合格证书&quot;)</span><br><span class="line">                .font(.largeTitle)</span><br><span class="line">                .fontWeight(.heavy)</span><br><span class="line">            Spacer()</span><br><span class="line">        &#125;</span><br><span class="line">        Image(&quot;Illustration5&quot;)</span><br><span class="line">        Spacer()</span><br><span class="line">    &#125;.padding()//边距</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    CardView()</span><br><span class="line">        .offset(x: 0, y: -40)</span><br><span class="line">        .scaleEffect(0.85)</span><br><span class="line">        .rotationEffect(Angle(degrees: 15))</span><br><span class="line">        .rotation3DEffect(Angle(degrees: 50), axis: /*@START_MENU_TOKEN@*/(x: 10.0, y: 10.0, z: 10.0)/*@END_MENU_TOKEN@*/)</span><br><span class="line">        .blendMode(.hardLight)</span><br><span class="line">    </span><br><span class="line">    CardView()</span><br><span class="line">        .offset(x: 0, y: -20)</span><br><span class="line">        .scaleEffect(0.9)</span><br><span class="line">        .rotationEffect(Angle(degrees: 10))</span><br><span class="line">        .rotation3DEffect(Angle(degrees: 40), axis: /*@START_MENU_TOKEN@*/(x: 10.0, y: 10.0, z: 10.0)/*@END_MENU_TOKEN@*/)</span><br><span class="line">        .blendMode(.hardLight)</span><br><span class="line">    </span><br><span class="line">    CertificateView()</span><br><span class="line">        .scaleEffect(0.95)</span><br><span class="line">        .rotationEffect(Angle(degrees: 5))</span><br><span class="line">        .rotation3DEffect(Angle(degrees: 30), axis: /*@START_MENU_TOKEN@*/(x: 10.0, y: 10.0, z: 10.0)/*@END_MENU_TOKEN@*/)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加正方形在中间"><a href="#添加正方形在中间" class="headerlink" title="添加正方形在中间"></a>添加正方形在中间</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201181352144.png" alt="image-20210201181352144"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">VStack(spacing: 20.0) &#123;</span><br><span class="line">     Rectangle()//添加正方形在中间</span><br><span class="line">         .frame(width: 60, height: 6)</span><br><span class="line">         .cornerRadius(30)</span><br><span class="line">         .opacity(0.1)//模糊度</span><br><span class="line">     Text(&quot;各个国家有各个国家的国歌，和某地的语言像极了鸟语。方言太多了，所以要统一语言，说出的话大家理解的都是同一份意思，这是小的，对于全球这么多国家，需要的是尊重各个国家的文化和历史，所以语言也是喽。&quot;)</span><br><span class="line">         .lineLimit(10)</span><br><span class="line">     Spacer()</span><br><span class="line"> &#125;</span><br><span class="line"> .padding()</span><br><span class="line"> .background(Color.blue)</span><br><span class="line"> .cornerRadius(30)</span><br></pre></td></tr></table></figure><h3 id="底部卡片向下移动"><a href="#底部卡片向下移动" class="headerlink" title="底部卡片向下移动"></a>底部卡片向下移动</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201184006996.png" alt="image-20210201184006996"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201184108062.png" alt="image-20210201184108062"></p><h3 id="并将新设置的给提到下面"><a href="#并将新设置的给提到下面" class="headerlink" title="并将新设置的给提到下面"></a>并将新设置的给提到下面</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201185543080.png" alt="image-20210201185543080" style="zoom:50%;"><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201184443568.png" alt="image-20210201184443568"></p><h2 id="设置动画效果"><a href="#设置动画效果" class="headerlink" title="设置动画效果"></a>设置动画效果</h2><h2 id="模糊效果"><a href="#模糊效果" class="headerlink" title="模糊效果"></a>模糊效果</h2><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201190055683.png" alt="image-20210201190055683"></p><h3 id="添加动画"><a href="#添加动画" class="headerlink" title="添加动画"></a>添加动画</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/1620924657941.GIF" alt="1620924657941"></p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201220556076.png" alt="image-20210201220556076" style="zoom: 33%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">    @State var show = false</span><br><span class="line">    </span><br><span class="line">    var body: some View &#123;</span><br><span class="line">        ZStack &#123;</span><br><span class="line">           TitleView()</span><br><span class="line">                .blur(radius: show ? 20 : 0)//模糊效果</span><br><span class="line">                .animation(.default)</span><br><span class="line">            </span><br><span class="line">            CarBottomView()</span><br><span class="line">                .blur(radius: show ? 20 : 0)//模糊效果</span><br><span class="line">                .animation(.default)</span><br><span class="line">            </span><br><span class="line">            CardView()</span><br><span class="line">                .offset(x: 0, y: show ? -400 : -40)</span><br><span class="line">                .scaleEffect(0.85)</span><br><span class="line">                .rotationEffect(Angle(degrees: show ? 15 : 0))</span><br><span class="line">                .rotation3DEffect(Angle(degrees: show ? 50 : 0), axis: /*@START_MENU_TOKEN@*/(x: 10.0, y: 10.0, z: 10.0)/*@END_MENU_TOKEN@*/)</span><br><span class="line">                .blendMode(.hardLight)</span><br><span class="line">                .animation(Animation.easeInOut(duration: 0.7))</span><br><span class="line">            </span><br><span class="line">            CardView()</span><br><span class="line">                .offset(x: 0, y: show ? -200 : -20)</span><br><span class="line">                .scaleEffect(0.9)</span><br><span class="line">                .rotationEffect(Angle(degrees: show ? 10 : 0))</span><br><span class="line">                .rotation3DEffect(Angle(degrees: show ? 40 : 0), axis: (x: 10.0, y: 10.0, z: 10.0))</span><br><span class="line">                .blendMode(.hardLight)</span><br><span class="line">                .animation(Animation.easeInOut(duration: 0.5))</span><br><span class="line">            </span><br><span class="line">            CertificateView()</span><br><span class="line">                .scaleEffect(0.95)</span><br><span class="line">                .rotationEffect(Angle(degrees: show ? 5 : 0))</span><br><span class="line">                .rotation3DEffect(Angle(degrees: show ? 30 : 0), axis: /*@START_MENU_TOKEN@*/(x: 10.0, y: 10.0, z: 10.0)/*@END_MENU_TOKEN@*/)</span><br><span class="line">                .animation(.spring())</span><br><span class="line">                .onTapGesture &#123;</span><br><span class="line">                    self.show.toggle()</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改后面卡片颜色"><a href="#修改后面卡片颜色" class="headerlink" title="修改后面卡片颜色"></a>修改后面卡片颜色<img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201222631717.png" style="zoom:50%;"></h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201222547399.png" alt="image-20210201222547399"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201222602417.png" alt="image-20210201222602417"></p><h2 id="手势和事件"><a href="#手势和事件" class="headerlink" title="手势和事件"></a>手势和事件</h2><h3 id="自由拖动第一张卡片"><a href="#自由拖动第一张卡片" class="headerlink" title="自由拖动第一张卡片"></a>自由拖动第一张卡片</h3><img src="https://gitee.com/zhu565615430/images/raw/master/imas/1620948619298.GIF" alt="1620948619298" style="zoom:150%;"><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201224606664.png" alt="image-20210201224606664"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@State var viewState = CGSize.zero</span><br><span class="line">    </span><br><span class="line">.offset(x: viewState.width, y: viewState.height)</span><br><span class="line"></span><br><span class="line">                .gesture(</span><br><span class="line">                    DragGesture()</span><br><span class="line">                        .onChanged(&#123; (Value) in</span><br><span class="line">                            self.viewState = Value.translation</span><br><span class="line">   </span><br><span class="line">                        &#125;)</span><br></pre></td></tr></table></figure><h3 id="卡片归位"><a href="#卡片归位" class="headerlink" title="卡片归位"></a>卡片归位</h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210201225305548.png"></p><h3 id="让三张卡片同时拖动"><a href="#让三张卡片同时拖动" class="headerlink" title="让三张卡片同时拖动"></a>让三张卡片同时拖动</h3><img src="https://gitee.com/zhu565615430/images/raw/master/imas/1620949756307.GIF" alt="1620949756307" style="zoom:150%;"><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514075108968.png" alt="image-20210514075108968" style="zoom:50%;"><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514075129554.png" alt="image-20210514075129554" style="zoom: 33%;">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;前言：在这系列文章你可以学到swiftUI&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;SWIFT——UI&quot;&gt;&lt;a href=&quot;#SWIFT——UI&quot; class=&quot;headerlink&quot; title=&quot;SWIFT——UI&quot;&gt;&lt;/a&gt;SWIFT——UI&lt;/h1</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>UIViewControllee的继承体系</title>
    <link href="http://example.com/2019/12/16/UIViewControllee%E7%9A%84%E7%BB%A7%E6%89%BF%E4%BD%93%E7%B3%BB/"/>
    <id>http://example.com/2019/12/16/UIViewControllee%E7%9A%84%E7%BB%A7%E6%89%BF%E4%BD%93%E7%B3%BB/</id>
    <published>2019-12-16T05:49:59.000Z</published>
    <updated>2019-12-16T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>UIViewControIIer作为视图控制器的父类，可以延伸出许多子视图控制器。下图为继承自UIViewControIIer的一些控制器组件，这些组件能够使应用程序的界面切换更加合理。目前，最流行的两种多视图控制器分别是导航控制器和标签页视图控制器。</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210518135653795.png" alt="image-20210518135653795"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;UIViewControIIer作为视图控制器的父类，可以延伸出许多子视图控制器。下图为继承自UIViewControIIer的一些控制器组件，这些组件能够使应用程序的界面切换更加合理。目前，最流行的两种多视图控制器分别是导航控制器和标签页视图控制器。&lt;/p&gt;
&lt;p&gt;&lt;im</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>UIView的继承体系</title>
    <link href="http://example.com/2019/12/16/UIView%E7%9A%84%E7%BB%A7%E6%89%BF%E4%BD%93%E7%B3%BB/"/>
    <id>http://example.com/2019/12/16/UIView%E7%9A%84%E7%BB%A7%E6%89%BF%E4%BD%93%E7%B3%BB/</id>
    <published>2019-12-16T05:49:59.000Z</published>
    <updated>2019-12-16T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>UIView继承体系中的类具有不同的层次关系。其中，UIView继承自UIResponder，它提供了许多子类，如表示标签的UILabeI、表示图片的UIImageView、表示可交互控件的UIControI等。同样，UIControI类也提供了很多子类，比如表示按钮的UIButton、表示文本框的UITextFieId等。</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210518134602203.png" alt="image-20210518134602203"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;UIView继承体系中的类具有不同的层次关系。其中，UIView继承自UIResponder，它提供了许多子类，如表示标签的UILabeI、表示图片的UIImageView、表示可交互控件的UIControI等。同样，UIControI类也提供了很多子类，比如表示按钮的UI</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>swift项目程序的启动原理</title>
    <link href="http://example.com/2019/12/15/swift%E9%A1%B9%E7%9B%AE%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%90%AF%E5%8A%A8%E5%8E%9F%E7%90%86/"/>
    <id>http://example.com/2019/12/15/swift%E9%A1%B9%E7%9B%AE%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%90%AF%E5%8A%A8%E5%8E%9F%E7%90%86/</id>
    <published>2019-12-15T05:12:58.000Z</published>
    <updated>2019-12-15T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="程序启动的原理"><a href="#程序启动的原理" class="headerlink" title="程序启动的原理"></a>程序启动的原理</h2><p>  当在OC创建的项目中，一定会有一个main.m文件，里面有一个main函数，可以在这个函数中启动App。但是在创建的Swift项目中，我们会发现，并没有名为main.swift的文件。因为Swift项目中添加了@UIAppIictationMain到Swift文件中，使得编译器默认生成了一个main函数，所以不需要main.swift文件。</p><p>启动的完整过程：</p><p><img src="https://gitee.com/zhu565615430/images/raw/master/CBcityimas/image-20210518121958533.png" alt="image-20210518121958533"></p><p>（1）Swift应用程序在打开时，@UIAppIictationMain会自动生成main函数。</p><p>（2）main函数会调用UIAppIicationMain，创建UIAppIication对象和UIAppIication的代理对象。</p><p>（3）启动项目，分为两种情况：</p><p>① 不使用storyboard时，代理对象开始监听系统事件，在程序启动完毕时，调用代理的appIication:didFinishLaunchingWithOptions：方法，在方法中创建UIWindow，并创建和设置UIWindow的rootViewControIIer，最后显示窗口。</p><p>② 使用storyboard时，会直接创建UIWindow，并创建UIWindow的rootViewControIIer，然后显示窗口。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;程序启动的原理&quot;&gt;&lt;a href=&quot;#程序启动的原理&quot; class=&quot;headerlink&quot; title=&quot;程序启动的原理&quot;&gt;&lt;/a&gt;程序启动的原理&lt;/h2&gt;&lt;p&gt;  当在OC创建的项目中，一定会有一个main.m文件，里面有一个main函数，可以在这个函数中启动</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>OC中的推送</title>
    <link href="http://example.com/2019/12/14/OC%E4%B8%AD%E7%9A%84%E6%8E%A8%E9%80%81/"/>
    <id>http://example.com/2019/12/14/OC%E4%B8%AD%E7%9A%84%E6%8E%A8%E9%80%81/</id>
    <published>2019-12-14T05:12:58.000Z</published>
    <updated>2022-02-01T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Object-C中的本地推送"><a href="#Object-C中的本地推送" class="headerlink" title="Object-C中的本地推送"></a>Object-C中的本地推送</h1><img src="https://gitee.com/zhu565615430/images/raw/master/imas/output.GIF" alt="output" style="zoom: 25%;"><h2 id="新建单例GTNotification-NSObject"><a href="#新建单例GTNotification-NSObject" class="headerlink" title="新建单例GTNotification(NSObject)"></a>新建单例GTNotification(NSObject)</h2><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514133430205.png" alt="image-20210514133430205"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;GTNotification.h&quot;</span><br><span class="line">#import &lt;UserNotifications/UserNotifications.h&gt;</span><br><span class="line"></span><br><span class="line">@interface GTNotification ()&lt;UNUserNotificationCenterDelegate&gt;</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation GTNotification</span><br><span class="line">+ (GTNotification *)notificationManager&#123;</span><br><span class="line">    static GTNotification *manager;</span><br><span class="line">    static dispatch_once_t onceToken;</span><br><span class="line">    dispatch_once(&amp;onceToken, ^&#123;</span><br><span class="line">        manager = [[GTNotification alloc] init];</span><br><span class="line">    &#125;);</span><br><span class="line">    return manager;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)checkNotificationAuthorization&#123;</span><br><span class="line">    </span><br><span class="line">    UNUserNotificationCenter *center = [UNUserNotificationCenter currentNotificationCenter];</span><br><span class="line">    center.delegate = self;</span><br><span class="line">    [center requestAuthorizationWithOptions:UNAuthorizationOptionBadge | UNAuthorizationOptionSound completionHandler:^(BOOL granted, NSError * _Nullable error) &#123;</span><br><span class="line">        NSLog(@&quot;&quot;);</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117224431147.png" alt="image-20210117224431147"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_BEGIN</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> APP 推送管理</span><br><span class="line"> */</span><br><span class="line">@interface GTNotification : NSObject</span><br><span class="line"></span><br><span class="line">+ (GTNotification *)notificationManager;</span><br><span class="line"></span><br><span class="line">- (void)checkNotificationAuthorization;//效验权限的方法</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_END</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117224516134.png" alt="image-20210117224516134"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117224553185.png" alt="image-20210117224553185"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;GTNotification.h&quot;</span><br><span class="line"></span><br><span class="line">[[GTNotification notificationManager] checkNotificationAuthorization];</span><br></pre></td></tr></table></figure><h2 id="实现本地推送"><a href="#实现本地推送" class="headerlink" title="实现本地推送"></a>实现本地推送</h2><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117231013306.png" alt="image-20210117231013306"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117231031479.png" alt="image-20210117231031479"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">if (granted) &#123;</span><br><span class="line">            //本地推送</span><br><span class="line">            [self _pushLocalNotification];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark -</span><br><span class="line"></span><br><span class="line">- (void)_pushLocalNotification&#123;</span><br><span class="line">    </span><br><span class="line">    UNMutableNotificationContent *content = [[UNMutableNotificationContent alloc] init];</span><br><span class="line">    content.badge = @(1);</span><br><span class="line">    content.title = @&quot;北京时间&quot;;</span><br><span class="line">    content.body = @&quot;这是一款iOS App&quot;;</span><br><span class="line">    content.sound = [UNNotificationSound defaultSound];</span><br><span class="line">    </span><br><span class="line">    UNTimeIntervalNotificationTrigger *trigger = [UNTimeIntervalNotificationTrigger triggerWithTimeInterval:30.f repeats:NO];</span><br><span class="line">    </span><br><span class="line">    UNNotificationRequest *request = [UNNotificationRequest requestWithIdentifier:@&quot;_pushLocalNotification&quot; content:content trigger:trigger];</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    [[UNUserNotificationCenter currentNotificationCenter] addNotificationRequest:request withCompletionHandler:^(NSError * _Nullable error) &#123;</span><br><span class="line">        //</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">  2      </span><br><span class="line">#pragma mark -</span><br><span class="line"></span><br><span class="line">- (void)userNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(void (^)(UNNotificationPresentationOptions options))completionHandler&#123;</span><br><span class="line">    completionHandler(UNNotificationPresentationOptionBanner);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void(^)(void))completionHandler &#123;</span><br><span class="line">    </span><br><span class="line">    //处理badge展示逻辑</span><br><span class="line">    //点击之后根据业务逻辑处理</span><br><span class="line">    //[UIApplication sharedApplication].applicationIconBadgeNumber = 100;</span><br><span class="line"></span><br><span class="line">    //处理业务逻辑</span><br><span class="line">    completionHandler();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Object-C中的本地推送&quot;&gt;&lt;a href=&quot;#Object-C中的本地推送&quot; class=&quot;headerlink&quot; title=&quot;Object-C中的本地推送&quot;&gt;&lt;/a&gt;Object-C中的本地推送&lt;/h1&gt;&lt;img src=&quot;https://gitee.c</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Object—C中定位和请求位置权限</title>
    <link href="http://example.com/2019/12/14/OC%E4%B8%AD%E5%AE%9A%E4%BD%8D%E5%92%8C%E8%AF%B7%E6%B1%82%E4%BD%8D%E7%BD%AE%E6%9D%83%E9%99%90/"/>
    <id>http://example.com/2019/12/14/OC%E4%B8%AD%E5%AE%9A%E4%BD%8D%E5%92%8C%E8%AF%B7%E6%B1%82%E4%BD%8D%E7%BD%AE%E6%9D%83%E9%99%90/</id>
    <published>2019-12-14T05:12:58.000Z</published>
    <updated>2022-02-01T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Object—C中定位和请求位置权限的处理"><a href="#Object—C中定位和请求位置权限的处理" class="headerlink" title="Object—C中定位和请求位置权限的处理"></a>Object—C中定位和请求位置权限的处理</h1><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514131658392.png" alt="image-20210514131658392" style="zoom:50%;"><p>新建GTLocation(NSObject)</p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514132100151.png" alt="image-20210514132100151" style="zoom:50%;"><h2 id="完成单例的类"><a href="#完成单例的类" class="headerlink" title="完成单例的类"></a>完成单例的类</h2><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514122910276.png" alt="image-20210514122910276"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;GTLocation.h&quot;</span><br><span class="line"></span><br><span class="line">@interface GTLocation()</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation GTLocation</span><br><span class="line"></span><br><span class="line">+ (GTLocation *)locationManager&#123;</span><br><span class="line">    static GTLocation *location;</span><br><span class="line">    static dispatch_once_t onceToken;</span><br><span class="line">    dispatch_once(&amp;onceToken, ^&#123;</span><br><span class="line">        location = [[GTLocation alloc] init];</span><br><span class="line">    &#125;);</span><br><span class="line">    return location;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (instancetype)init&#123;</span><br><span class="line">    self = [super init];</span><br><span class="line">    if (self) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    return self;</span><br><span class="line">&#125;</span><br><span class="line">@end</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117182054304.png" alt="image-20210117182054304"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_BEGIN</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> App中统一的位置信息管理</span><br><span class="line"> */</span><br><span class="line">@interface GTLocation : NSObject</span><br><span class="line"></span><br><span class="line">+ (GTLocation *)locationManager;</span><br><span class="line"></span><br><span class="line">- (void)checkLocationAuthorization;</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_END</span><br></pre></td></tr></table></figure><h3 id="首次安装请求位置权限的获取"><a href="#首次安装请求位置权限的获取" class="headerlink" title="首次安装请求位置权限的获取"></a>首次安装请求位置权限的获取</h3><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514131658392.png" style="zoom:50%;"><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117182925438.png" alt="image-20210117182925438"></p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117185026565.png" alt="image-20210117185026565" style="zoom:50%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;CoreLocation/CoreLocation.h&gt;</span><br><span class="line"></span><br><span class="line">@interface GTLocation()&lt;CLLocationManagerDelegate&gt;</span><br><span class="line">@property(nonatomic, strong, readwrite) CLLocationManager *manager;</span><br><span class="line"></span><br><span class="line">        self.manager = [[CLLocationManager alloc] init];</span><br><span class="line">        self.manager.delegate = self;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">//判断APP相应的状态</span><br><span class="line">- (void)checkLocationAuthorization&#123;</span><br><span class="line">    </span><br><span class="line">    //判断系统是否开启</span><br><span class="line">    if(![CLLocationManager locationServicesEnabled])&#123;</span><br><span class="line">        //引导弹窗</span><br><span class="line">        //</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    if([CLLocationManager authorizationStatus] == kCLAuthorizationStatusNotDetermined)&#123;</span><br><span class="line">        [self.manager requestWhenInUseAuthorization];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">#pragma mark - delegate</span><br><span class="line"></span><br><span class="line">- (void)locationManager:(CLLocationManager *)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status&#123;</span><br><span class="line">    if (status == kCLAuthorizationStatusAuthorizedWhenInUse) &#123;</span><br><span class="line">        //</span><br><span class="line">        [self.manager startUpdatingLocation];</span><br><span class="line">        </span><br><span class="line">    &#125;else if (status == kCLAuthorizationStatusDenied)&#123;</span><br><span class="line">        //</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117185924011.png" alt="image-20210117185924011"></p><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210117185938825.png" alt="image-20210117185938825"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;GTLocation.h&quot;</span><br><span class="line"></span><br><span class="line">[[GTLocation locationManager] checkLocationAuthorization];</span><br></pre></td></tr></table></figure><h3 id="获取当前位置信息"><a href="#获取当前位置信息" class="headerlink" title="获取当前位置信息"></a><em>获取当前位置信息</em></h3><p><img src="https://gitee.com/zhu565615430/images/raw/master/imas/image-20210514123220586.png" alt="image-20210514123220586"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">- (void)locationManager:(CLLocationManager *)manager</span><br><span class="line">     didUpdateLocations:(NSArray&lt;CLLocation *&gt; *)locations &#123;</span><br><span class="line">    </span><br><span class="line">    //地理信息</span><br><span class="line">    CLLocation *location = [locations firstObject];</span><br><span class="line">    </span><br><span class="line">    CLGeocoder *coder = [[CLGeocoder alloc] init];</span><br><span class="line">    </span><br><span class="line">    [coder reverseGeocodeLocation:location completionHandler:^(NSArray&lt;CLPlacemark *&gt; * _Nullable placemarks, NSError * _Nullable error) &#123;</span><br><span class="line">        //地标信息</span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">     [self.manager stopUpdatingLocation];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Object—C中定位和请求位置权限的处理&quot;&gt;&lt;a href=&quot;#Object—C中定位和请求位置权限的处理&quot; class=&quot;headerlink&quot; title=&quot;Object—C中定位和请求位置权限的处理&quot;&gt;&lt;/a&gt;Object—C中定位和请求位置权限的处理&lt;/</summary>
      
    
    
    
    
  </entry>
  
</feed>
